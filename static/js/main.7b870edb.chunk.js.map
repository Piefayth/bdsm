{"version":3,"sources":["utils.js","global.js","data.js","dungeonUtils.js","data sync /^/.//season_.*/.json$","data sync /^/.//season_.*//items//passive_items/.json$","data sync /^/.//season_.*//items//energy_items/.json$","data sync /^/.//season_.*//mobs//summon_templates/.json$","components/Dropdown.js","items.js","character.js","battle.js","simulator.js","test.js","components/ItemDropdown.js","components/PlayerForm.js","components/Simulator.js","App.js","index.js"],"names":["format","args","arguments","replace","match","number","index","parseInt","log","global","verbose","output","toLog","console","push","extend","iterable1","iterable2","withProbability","p","Math","random","pickRandom","iterable","weightKey","selected","total","i","weight","currentValue","pickRandomWithinRange","lower","upper","floor","deepCopyJson","obj","JSON","parse","stringify","season","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getDungeon","dungeon","dungeonsForSeason","waves","require","wave","j","character","getDungeonList","dungeonsBySeason","dungeonList","keys","Object","sort","reverse","getItems","passive","energy","getAllItemNamesAndBlank","items","itemNames","obtainableItems","unobtainableItems","type","item","obtainable","utils","getTemplates","formatDescriptionWithTier","description","tier","re","current","m","eval","getDescriptionOfItem","data","itemData","name","parseMonuments","input","monumentLevels","split","line","startsWith","Angel","length","matches","parseInventory","player","username","empty","matchUsername","matchItem","serializePlayer","monument","monuments","join","serializePlayers","players","pop","_mutateTemplate","template","scale","base","scaling","key","getScaledTemplate","processedInitCharacter","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","Dropdown","props","value","selectedOption","onChange","options","option","ABILITY_FOR_ITEM","params","phase","enemyTeam","target","takeDamage","source","amount","battle","changeSpeed","_throwInvalidPhaseError","changeAttack","changeHpMax","changeHp","usedCannon","damageFinal","round","damageBase","allyTeam","c","summoned","allyTeamIndex","summonedChicken","addSummonToTeam","pickTargetUsingItems","activeTeamIndex","ally","currentTarget","changeEnergy","hp","Infinity","targetIsMaxHp","allyIsMaxHp","hpMax","attackIncrease","damage","max","teams","getTeamOf","poison","enemy","missingHpProportion","addedEnergy","useItemAbility","originalEnergy","cost","_checkEnergy","_extractParam","param","defaultValue","Character","this","speed","attackLow","attackHigh","angelAvailable","canBeSaved","_preprocessTriggers","allItems","triggers","triggerTypes","triggerType","originalHpMax","originalHp","min","originalSpeed","originalAttackLow","originalAttackHigh","amountToGain","phaseParams","triggerPhase","ret","assign","prototype","toString","Battle","team1","team2","initTeams","teamIndex","allCharacters","team","addCopyOfCharacterToTeam","originalName","copyNum","toAdd","addCharacterToTeam","summon","dungeonUtils","pos","position","_findPositionWithinTeam","splice","kill","teamHasLost","anyTeamHasLost","activeCharacter","activeName","defendingTeam","changeAllEnergy","checkAllHp","blockParams","preDamageParams","runDungeon","currTeam","tick","outputTest","selectedDungeon","numRuns","toEquip","Health","Speed","Power","numWins","winsForTeam0","simulator","winratePercentage","ItemDropdown","event","onItemChanged","PlayerForm","useState","rawInput","setRawInput","newPlayer","newMonuments","onPlayerChanged","onClick","navigator","clipboard","writeText","newItems","checked","Simulator","setNumRuns","setSelectedDungeon","outputText","setOutputText","getInitialPlayer","setPlayers","newParty","rawPlayer","parsePlayers","newPlayers","style","whiteSpace","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b870edb.chunk.js","sourcesContent":["import { global } from './global.js'\r\n\r\nexport function format() {\r\n  const args = arguments;\r\n  return args[0].replace(/{(\\d+)}/g, function(match, number) {\r\n      const index = parseInt(number) + 1;\r\n      return typeof[args[index]] !== 'undefined'\r\n        ? args[index]\r\n        : match;\r\n  });\r\n}\r\n\r\nexport function log() {\r\n  if (!global.verbose && global.output === null) {\r\n    return;\r\n  }\r\n  const toLog = typeof arguments[0] === 'string'\r\n      ? format(...arguments)\r\n      : arguments[0];\r\n  if (global.verbose) {\r\n    console.log(toLog);\r\n  }\r\n  if (global.output !== null) {\r\n    global.output.push(toLog);\r\n  }\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key === null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  var selected = null;\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    var weight;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(currentValue);\r\n    } else if (weightKey === null) {\r\n      weight = typeof currentValue === 'number' ? currentValue : 1;\r\n    } else if (weightKey in currentValue) {\r\n      weight = currentValue[weightKey];\r\n    }\r\n    total += weight\r\n    if(withProbability(weight / total)) {\r\n      selected = currentValue;\r\n    }\r\n  }\r\n  return selected;\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","export const global = {\r\n  verbose: false,\r\n  output: null,\r\n  season: 3\r\n}\r\n","import { global } from './global.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require(\r\n        './data/season_' + season + '/mobs/dungeon_' + dungeon + '.json');\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getDungeonList() {\r\n  const dungeonsBySeason = require('./data/dungeons.json');\r\n  const dungeonList = [];\r\n\r\n  const keys = Object.keys(dungeonsBySeason);\r\n  keys.sort().reverse();\r\n  for (const season of keys) {\r\n    for (const dungeon of dungeonsBySeason[season]) {\r\n      dungeonList.push(JSON.stringify([parseInt(season), dungeon]));\r\n    }\r\n  }\r\n  return dungeonList;\r\n}\r\n\r\nexport function getItems() {\r\n  if (!(global.season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[global.season] = {\r\n      passive: require(\r\n          './data/season_' + global.season + '/items/passive_items.json'),\r\n      energy: require(\r\n          './data/season_' + global.season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank() {\r\n  if (!(global.season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems();\r\n    const itemNames = [''];\r\n    const obtainableItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['energy', 'passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item].obtainable) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    unobtainableItems.sort();\r\n    utils.extend(itemNames, obtainableItems);\r\n    itemNames.push('');\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[global.season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getTemplates() {\r\n  if (!(global.season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[global.season] = require(\r\n        './data/season_' + global.season + '/mobs/summon_templates.json');\r\n  }\r\n  return TEMPLATES_BY_SEASON[global.season];\r\n}\r\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nfunction formatDescriptionWithTier(description, tier) {\r\n  const re = /\\{([\\dt+\\-*]+)\\}/;\r\n  var current = description;\r\n  var m = current.match(re);\r\n  while (m != null) {\r\n    current = current.replace(\r\n        m[0],\r\n        eval(m[1].replace('t', tier))\r\n    );\r\n    m = current.match(re);\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function getDescriptionOfItem(item) {\r\n  const items = data.getItems();\r\n  const itemData = item.name in items.passive ?\r\n    items.passive[item.name] :\r\n    items.energy[item.name];\r\n  if (typeof itemData === 'undefined') {\r\n    return '';\r\n  }\r\n  return formatDescriptionWithTier(itemData.description, item.tier);\r\n}\r\n\r\nexport function parseMonuments(input) {\r\n  const monumentLevels = {};\r\n  for (const line of input.split('\\n')) {\r\n    if (line.startsWith('BDSM:Angel:')) {\r\n      monumentLevels.Angel = line[line.length - 1] !== '0';\r\n      continue;\r\n    }\r\n    const matches = line.match(/\\|\\s*(Health|Power|Speed)\\s*\\|\\s*(\\d+)\\s*\\|/);\r\n    if (matches === null) {\r\n      continue;\r\n    }\r\n    monumentLevels[matches[1]] = parseInt(matches[2]);\r\n  }\r\n  return monumentLevels;\r\n}\r\n\r\nexport function parseInventory(input) {\r\n  const player = {username: '', items: []};\r\n  var empty = true;\r\n  for (const line of input.split('\\n')) {\r\n    const matchUsername = line.match(/([^*]*)'s Inventory/);\r\n    const matchItem = line.match(\r\n        /\\d-\\s(_{0,2}<?[\\w\\d:]+>?)?\\s([\\w'\\s]+)\\s(\\d+)_{0,2}:/);\r\n    if (matchUsername !== null) {\r\n      empty = false;\r\n      player.username = matchUsername[1];\r\n    }\r\n    if (matchItem !== null) {\r\n      empty = false;\r\n      player.items.push({name: matchItem[2], tier: parseInt(matchItem[3])});\r\n    }\r\n  }\r\n  if (empty) {\r\n    return null;\r\n  }\r\n  if (player.items.length > 4) {\r\n    return null;\r\n  }\r\n  for (var i = player.items.length; i < 4; i++) {\r\n    player.items.push({name: '', tier: 1});\r\n  }\r\n  return player;\r\n}\r\n\r\nexport function serializePlayer(player) {\r\n  const output = [];\r\n  output.push(utils.format(\"{0}'s Inventory\", player.username));\r\n  for (const item of player.items) {\r\n    output.push(utils.format('1-  {0} {1}:', item.name, item.tier));\r\n  }\r\n  for (const monument in player.monuments) {\r\n    if (monument === 'Angel') {\r\n      output.push(utils.format('BDSM.Angel.{0}',\r\n                               player.monuments.Angel ? '1' : '0'));\r\n      continue;\r\n    }\r\n    output.push(utils.format('|{0}|{1}|',\r\n                             monument,\r\n                             player.monuments[monument]));\r\n  }\r\n  return output.join('\\n');\r\n}\r\n\r\nexport function serializePlayers(players) {\r\n  const output = ['BDSM.partyStart'];\r\n  for (const player of players) {\r\n    output.push(serializePlayer(player));\r\n    output.push('BDSM.playerDivider');\r\n  }\r\n  output.pop();\r\n  return output.join('\\n');\r\n}\r\n\r\nfunction _mutateTemplate(template, scale) {\r\n  if (typeof template != 'object') {\r\n    return template;\r\n  }\r\n\r\n  if ('base' in template && 'scaling' in template) {\r\n    return template.base + template.scaling * scale;\r\n  }\r\n\r\n  // recursive check\r\n  for (const key in template) {\r\n    template[key] = _mutateTemplate(template[key], scale);\r\n  }\r\n  return template;\r\n}\r\n\r\nexport function getScaledTemplate(template, scale) {\r\n  const obj = utils.deepCopyJson(template);\r\n  _mutateTemplate(obj, scale);\r\n  obj.processedInitCharacter = false;\r\n  return obj;\r\n}\r\n","var map = {\n\t\"./season_2/items/energy_items.json\": 15,\n\t\"./season_2/items/passive_items.json\": 16,\n\t\"./season_2/mobs/dungeon_0.json\": 27,\n\t\"./season_2/mobs/dungeon_1.json\": 28,\n\t\"./season_2/mobs/dungeon_10.json\": 29,\n\t\"./season_2/mobs/dungeon_2.json\": 30,\n\t\"./season_2/mobs/dungeon_3.json\": 31,\n\t\"./season_2/mobs/dungeon_4.json\": 32,\n\t\"./season_2/mobs/dungeon_5.json\": 33,\n\t\"./season_2/mobs/dungeon_6.json\": 34,\n\t\"./season_2/mobs/dungeon_7.json\": 35,\n\t\"./season_2/mobs/dungeon_8.json\": 36,\n\t\"./season_2/mobs/dungeon_9.json\": 37,\n\t\"./season_2/mobs/summon_templates.json\": 17,\n\t\"./season_3/items/energy_items.json\": 18,\n\t\"./season_3/items/passive_items.json\": 19,\n\t\"./season_3/mobs/dungeon_0.json\": 38,\n\t\"./season_3/mobs/dungeon_1.json\": 39,\n\t\"./season_3/mobs/dungeon_10.json\": 40,\n\t\"./season_3/mobs/dungeon_11.json\": 41,\n\t\"./season_3/mobs/dungeon_2.json\": 42,\n\t\"./season_3/mobs/dungeon_3.json\": 43,\n\t\"./season_3/mobs/dungeon_4.json\": 44,\n\t\"./season_3/mobs/dungeon_5.json\": 45,\n\t\"./season_3/mobs/dungeon_6.json\": 46,\n\t\"./season_3/mobs/dungeon_7.json\": 47,\n\t\"./season_3/mobs/dungeon_8.json\": 48,\n\t\"./season_3/mobs/dungeon_9.json\": 49,\n\t\"./season_3/mobs/summon_templates.json\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;","var map = {\n\t\"./season_2/items/passive_items.json\": 16,\n\t\"./season_3/items/passive_items.json\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51;","var map = {\n\t\"./season_2/items/energy_items.json\": 15,\n\t\"./season_3/items/energy_items.json\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 52;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 17,\n\t\"./season_3/mobs/summon_templates.json\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 53;","function Dropdown(props) {\r\n  return (\r\n    <select value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option, index) => <option key={index}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst ABILITY_FOR_ITEM = {\r\n  'Avalanche': avalanche,\r\n  'BF Cannon': bfCannon,\r\n  'Big Club': bigClub,\r\n  'Boosting Bugle': boostingBugle,\r\n  'Chumby Chicken': chumbyChicken,\r\n  'Challenger Arrow': challengerArrow,\r\n  'Chicken Dinner': chickenDinner,\r\n  'Cleansing Flames': cleansingFlames,\r\n  'Draining Dagger': drainingDagger,\r\n  'Energetic Ally': energeticAlly,\r\n  'Explosion Powder': explosionPowder,\r\n  'Festive Feast': festiveFeast,\r\n  'Fire Sword': fireSword,\r\n  'Freezeman': freezeman,\r\n  'Halberd': halberd,\r\n  'Healing Pendant': healingPendant,\r\n  'Imp Whistle': impWhistle,\r\n  'Knight\\'s Lance': knightsLance,\r\n  'Last Resort': lastResort,\r\n  'Love Letter': loveLetter,\r\n  'Machete': machete,\r\n  'Magic Parasol': magicParasol,\r\n  'Martyr Armor': martyrArmor,\r\n  'Pet Imp': petImp,\r\n  'Poison Dagger': poisonDagger,\r\n  'Quickening Death': quickeningDeath,\r\n  'Quickening Death: Focused': quickeningDeathFocused,\r\n  'Rock Companion': rockCompanion,\r\n  'Rough Skin': roughSkin,\r\n  'Rousing Death': rousingDeath,\r\n  'Seeking Missiles': seekingMissiles,\r\n  'Survival Kit': survivalKit,\r\n  'Thorns': thorns,\r\n  'Trusty Steed': trustySteed,\r\n  'Whirlwind Axe': whirlwindAxe\r\n}\r\n\r\nexport function useItemAbility(params) {\r\n  if (params.item.name in data.getItems().energy && !_checkEnergy(params)) {\r\n    return;\r\n  }\r\n  return ABILITY_FOR_ITEM[params.item.name](params);\r\n}\r\n\r\nfunction _checkEnergy(params) {\r\n  const originalEnergy = params.character.energy;\r\n  const cost = data.getItems().energy[params.item.name].cost;\r\n  if (originalEnergy < cost) {\r\n    return false;\r\n  }\r\n  utils.log('Activating {0}', params.item.name);\r\n  params.character.changeEnergy({amount: -cost});\r\n  return true;\r\n}\r\n\r\nfunction _throwInvalidPhaseError(params) {\r\n  throw Error(utils.format('InternalError: Item {0} does not have phase {1}',\r\n                           params.item.name, params.phase));\r\n}\r\n\r\nfunction avalanche(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const tier = params.item.tier;\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(enemyTeam);\r\n        target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 5 * tier),\r\n          battle: params.battle\r\n        });\r\n        target.changeSpeed({\r\n          amount: -utils.pickRandomWithinRange(0, tier)\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bfCannon(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: 6 + 6 * tier});\r\n      params.character.changeHpMax({amount: 10 * tier});\r\n      params.character.changeHp({amount: 10 * tier});\r\n      break;\r\n    }\r\n    case 'SkipTurn': {\r\n      if (params.character.usedCannon) {\r\n        utils.log('Activating {0}: Skipping Turn', params.item.name);\r\n        params.character.usedCannon = false;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    case 'PostDamage': {\r\n      params.character.usedCannon = true;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bigClub(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activated {0}', params.item.name);\r\n      params.damageFinal += Math.round(1.5 * params.damageBase);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction boostingBugle(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeam = params.allyTeam;\r\n      if (allyTeam.length === 1) {\r\n        break;\r\n      }\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(\r\n            allyTeam,\r\n            (c) => {\r\n              if (c.summoned) {\r\n                return 0;\r\n              }\r\n              if (c.character === params.character.character) {\r\n                return 0;\r\n              }\r\n              return 1;\r\n            }\r\n        );\r\n        if (target === null) {\r\n          break;\r\n        }\r\n        target.changeHp({amount: tier + tier});\r\n        target.changeAttack({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chumbyChicken(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeamIndex = params.allyTeamIndex;\r\n      if (params.character.character in params.battle.summonedChicken) {\r\n        break;\r\n      }\r\n      params.battle.summonedChicken[params.character.character] = 0;\r\n      params.battle.addSummonToTeam(params.item, allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction challengerArrow(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const target = params.character.pickTargetUsingItems(params.enemyTeam);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: 10 * tier,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeAttack({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chickenDinner(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeHp({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleansingFlames(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      const allyTeam = params.allyTeam;\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const ally of allyTeam) {\r\n        ally.changeHp({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drainingDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.changeAttack({amount: -tier});\r\n      if (utils.withProbability(0.2)) {\r\n        params.currentTarget.changeEnergy({amount: -tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction energeticAlly(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeam = params.allyTeam;\r\n      var target = {hp: Infinity};\r\n      var targetIsMaxHp = true;\r\n      for (const ally of allyTeam) {\r\n        if (ally.summoned) {\r\n          continue;\r\n        }\r\n        const allyIsMaxHp = ally.hp === ally.hpMax;\r\n        if (allyIsMaxHp && !targetIsMaxHp) {\r\n          continue;\r\n        }\r\n        if (ally.hp >= target.hp) {\r\n          continue;\r\n        }\r\n        target = ally;\r\n        targetIsMaxHp = allyIsMaxHp;\r\n      }\r\n      if (target.hp === Infinity) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: 5 * tier});\r\n      target.changeEnergy({amount: 20});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction explosionPowder(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        const target = enemyTeam[Object.keys(enemyTeam)[0]];\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 20 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      for (const enemy of enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(5 * tier, 10 * tier),\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction festiveFeast(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: 3 * tier,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        ally.changeHp({amount: 3 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction fireSword(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var attackIncrease = 0;\r\n      for (var i = 0; i < tier; i++) {\r\n        if (!utils.withProbability(0.3)) {\r\n          continue;\r\n        }\r\n        attackIncrease++;\r\n      }\r\n      params.character.changeAttack({amount: attackIncrease});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction freezeman(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeSpeed({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction halberd(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: tier + tier});\r\n      params.character.changeHpMax({amount: 4 * tier});\r\n      params.character.changeHp({amount: 4 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction healingPendant(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHp({amount: 5 * tier});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction impWhistle(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction knightsLance(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const target = utils.pickRandom(enemyTeam);\r\n      if (params.character.hp === params.character.hpMax) {\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 14 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: amount,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction lastResort(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      if (params.source === null) {\r\n        break;\r\n      }\r\n      params.source.takeDamage({\r\n        amount: 10 * tier,\r\n        battle: params.battle,\r\n        source: params.character\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction loveLetter(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const allyTeam = params.allyTeam;\r\n      const target = utils.pickRandom(\r\n          allyTeam,\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction machete(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(\r\n          enemyTeam,\r\n          (c) => {\r\n            if (c.character === params.currentTarget.character) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 4 * tier),\r\n          battle: params.battle\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction magicParasol(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.17 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - 2 - 3 * tier);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction martyrArmor(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.66)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      const target = utils.pickRandom(\r\n          params.battle.teams[\r\n              params.battle.getTeamOf[params.character.character]\r\n          ],\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction petImp(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction poisonDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.poison += tier;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeSpeed({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeathFocused(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(params.allyTeam, (c) => {\r\n        if (c.character === params.character.character) {\r\n          return 0;\r\n        }\r\n        return 1;\r\n      });\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeSpeed({amount: 5 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rockCompanion(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction roughSkin(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - tier - tier);\r\n      params.source.changeHp({amount: -tier - tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rousingDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeEnergy({amount: 10 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction seekingMissiles(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Target': {\r\n      var target = {hp: Infinity};\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.hp < target.hp) {\r\n          target = enemy;\r\n        }\r\n      }\r\n      if (target.hp === Infinity) {\r\n        throw Error('InternalError: No target in enemy team');\r\n      }\r\n      utils.log('{0} selected target {1}', params.item.name, target.character);\r\n      params.currentTarget = target;\r\n      break;\r\n    }\r\n    case 'PreDamage': {\r\n      const missingHpProportion =\r\n          1 - params.currentTarget.hp / params.currentTarget.hpMax;\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damageFinal += Math.floor(5 * missingHpProportion * tier);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction survivalKit(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const amount = 20 * tier;\r\n      params.character.changeHpMax({amount: amount});\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction thorns(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var addedEnergy = false;\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: tier,\r\n            battle: params.battle\r\n        });\r\n        if (addedEnergy) {\r\n          continue;\r\n        }\r\n        if (!utils.withProbability(0.25)) {\r\n          continue;\r\n        }\r\n        params.character.changeEnergy({amount: tier});\r\n        addedEnergy = true;\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction trustySteed(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction whirlwindAxe(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.character === params.currentTarget.character) {\r\n          continue;\r\n        }\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: params.damageBase,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n","import * as data from './data.js';\r\nimport * as items from './items.js';\r\nimport * as utils from './utils.js';\r\n\r\nfunction _extractParam(params, param, defaultValue) {\r\n  if (param in params) {\r\n    return params[param];\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nexport class Character {\r\n  constructor(params) {\r\n    this.character = _extractParam(params, 'character', 'Unknown');\r\n    this.hpMax = _extractParam(params, 'hpMax', 100);\r\n    this.hp = _extractParam(params, 'hp', this.hpMax);\r\n    this.speed = _extractParam(params, 'speed', 10);\r\n    this.attackLow = _extractParam(params, 'attackLow', 1);\r\n    this.attackHigh = _extractParam(params, 'attackHigh', 10);\r\n    this.energy = _extractParam(params, 'energy', 0);\r\n    this.summoned = _extractParam(params, 'summoned', false);\r\n    this.items = _extractParam(params, 'items', []);\r\n\r\n    this.angelAvailable = _extractParam(params, 'angelAvailable', false);\r\n    this.canBeSaved = _extractParam(params, 'canBeSaved', true);\r\n    this.poison = _extractParam(params, 'poison', 0);\r\n    this.usedCannon = _extractParam(params, 'usedCannon', false);\r\n    this._preprocessTriggers();\r\n    this.processedInitCharacter =\r\n        _extractParam(params, 'processedInitCharacter', true);\r\n  }\r\n\r\n  _preprocessTriggers() {\r\n    if ('triggers' in this) {\r\n      return;\r\n    }\r\n    const allItems = data.getItems();\r\n    const triggers = {};\r\n    for (const item of this.items) {\r\n      const triggerTypes = item.name in allItems.energy\r\n          ? ['TurnStart']\r\n          : allItems.passive[item.name].triggers;\r\n      for (const triggerType of triggerTypes) {\r\n        if (!(triggerType in triggers)) {\r\n          triggers[triggerType] = [item];\r\n          continue;\r\n        }\r\n        triggers[triggerType].push(item);\r\n      }\r\n    }\r\n    this.triggers = triggers;\r\n  }\r\n\r\n  deepCopy() {\r\n    const params = utils.deepCopyJson(this);\r\n    return new Character(params);\r\n  }\r\n\r\n  changeHpMax(params) {\r\n    const originalHpMax = this.hpMax;\r\n    this.hpMax += params.amount;\r\n    utils.log('{0} max hp changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalHpMax, this.hpMax);\r\n  }\r\n\r\n  changeHp(params) {\r\n    const originalHp = this.hp;\r\n    this.hp = Math.min(this.hp + params.amount, this.hpMax);\r\n    utils.log('{0} hp changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalHp, this.hp);\r\n  }\r\n\r\n  changeSpeed(params) {\r\n    const originalSpeed = this.speed;\r\n    this.speed = Math.max(this.speed + params.amount, 1);\r\n    utils.log('{0} speed changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalSpeed, this.speed);\r\n  }\r\n\r\n  changeAttack(params) {\r\n    const originalAttackLow = this.attackLow;\r\n    const originalAttackHigh = this.attackHigh;\r\n    const amountToGain = Math.max(-originalAttackLow, params.amount);\r\n    this.attackLow += amountToGain;\r\n    this.attackHigh += amountToGain;\r\n    utils.log('{0} attack changed by {1}: {2} -> {3}',\r\n              this.character,\r\n              params.amount,\r\n              [originalAttackLow, originalAttackHigh],\r\n              [this.attackLow, this.attackHigh]);\r\n  }\r\n\r\n  changeEnergy(params) {\r\n    const originalEnergy = this.energy;\r\n    this.energy = Math.max(this.energy + params.amount, 0);\r\n    utils.log('{0} energy changed by {1}: {2} -> {3}',\r\n              this.character,\r\n              params.amount,\r\n              originalEnergy,\r\n              this.energy);\r\n  }\r\n\r\n  takeDamage(params) {\r\n    const phaseParams = {\r\n        battle: params.battle,\r\n        damage: params.amount,\r\n        phase: 'EnemyDamage',\r\n        source: params.source\r\n    };\r\n    this.triggerPhase(phaseParams);\r\n    this.changeHp({\r\n        amount: -phaseParams.damage\r\n    });\r\n    if (this.hp > 0) {\r\n      return;\r\n    }\r\n    const allyTeamIndex = params.battle.getTeamOf[this.character];\r\n    this.triggerPhase({\r\n      allyTeam: params.battle.teams[allyTeamIndex],\r\n      allyTeamIndex: allyTeamIndex,\r\n      battle: params.battle,\r\n      character: this,\r\n      phase: 'Death',\r\n      source: params.source\r\n    });\r\n  }\r\n\r\n  triggerPhase(params) {\r\n    if (!(params.phase in this.triggers)) {\r\n      return false;\r\n    }\r\n    if (params.phase === 'InitCharacter' && this.processedInitCharacter) {\r\n      return false;\r\n    }\r\n\r\n    params.character = this;\r\n    var ret = false;\r\n    for (const item of this.triggers[params.phase]) {\r\n      if (items.useItemAbility(Object.assign(params, {\r\n            item: item\r\n        })) === true) {\r\n        ret = true;\r\n      }\r\n    }\r\n    if (params.phase === 'InitCharacter') {\r\n      this.processedInitCharacter = true;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  pickTargetUsingItems(enemyTeam) {\r\n    const params = {\r\n        currentTarget: utils.pickRandom(enemyTeam),\r\n        enemyTeam: enemyTeam,\r\n        phase: 'Target'\r\n    };\r\n\r\n    this.triggerPhase(params);\r\n    return params.currentTarget;\r\n  }\r\n}\r\n\r\nCharacter.prototype.toString = function() {\r\n  return this.character;\r\n}\r\n","import {Character} from './character.js';\r\nimport * as data from './data.js';\r\nimport * as utils from './utils.js';\r\nimport * as dungeonUtils from './dungeonUtils.js';\r\n\r\nfunction _findPositionWithinTeam(name, team) {\r\n  for (const position in team) {\r\n    const c = team[position];\r\n    if (c.character === name) {\r\n      return position;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n\r\nexport class Battle {\r\n  constructor(team1, team2) {\r\n    this.summonedChicken = {};\r\n    this.initTeams([team1, team2]);\r\n  }\r\n\r\n  initTeams(teams) {\r\n    this.teams = [[], []];\r\n    this.allCharacters = {};\r\n    this.getTeamOf = {};\r\n    for (const teamIndex in teams) {\r\n      const team = teams[teamIndex];\r\n      for (const i in team) {\r\n        this.addCopyOfCharacterToTeam(team[i], teamIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  addCharacterToTeam(character, teamIndex) {\r\n    var name = character.character;\r\n    const originalName = name;\r\n    var copyNum = 1;\r\n    while (name in this.allCharacters) {\r\n      copyNum++;\r\n      name = originalName + ' ' + copyNum;\r\n    }\r\n    character.character = name;\r\n    this.getTeamOf[name] = teamIndex;\r\n    this.allCharacters[name] = character;\r\n    character.triggerPhase({\r\n        allyTeamIndex: teamIndex,\r\n        battle: this,\r\n        character: character,\r\n        phase: 'InitCharacter'\r\n    });\r\n    this.teams[teamIndex].push(character);\r\n  }\r\n\r\n  addCopyOfCharacterToTeam(character, teamIndex) {\r\n    const toAdd = new Character(character);\r\n    this.addCharacterToTeam(toAdd, teamIndex);\r\n  }\r\n\r\n  addSummonToTeam(item, teamIndex) {\r\n    const template = data.getTemplates()[item.name];\r\n    const summon = new Character(dungeonUtils.getScaledTemplate(template, item.tier));\r\n    utils.log('Summoning {0} for team {1}', summon.character, teamIndex);\r\n    this.addCharacterToTeam(summon, teamIndex);\r\n  }\r\n\r\n  kill(character) {\r\n    const name = character.character;\r\n    if (character.angelAvailable) {\r\n      utils.log('reviving {0} with angel invite', name);\r\n      character.hp = Math.round(character.hpMax * 0.33);\r\n      character.angelAvailable = false;\r\n      return;\r\n    }\r\n    utils.log('killing: {0}', name);\r\n    const team = this.teams[this.getTeamOf[name]];\r\n    const pos = _findPositionWithinTeam(name, team);\r\n    if (pos < 0) {\r\n      throw Error(utils.format('InternalError: {0} is not in team {1}',\r\n                               name, team));\r\n    }\r\n    delete this.allCharacters[name];\r\n    delete this.getTeamOf[name];\r\n    team.splice(pos, 1);\r\n    if (name in this.summonedChicken) {\r\n      delete this.summonedChicken[name];\r\n    }\r\n  }\r\n\r\n  changeAllEnergy(iterable, amount) {\r\n    for (const key in iterable) {\r\n      iterable[key].changeEnergy({amount: amount});\r\n    }\r\n  }\r\n\r\n  checkAllHp() {\r\n    for (const name in this.allCharacters) {\r\n      const character = this.allCharacters[name];\r\n      if (character.hp <= 0) {\r\n        this.kill(character);\r\n      }\r\n    }\r\n  }\r\n\r\n  teamHasLost(index) {\r\n    return this.teams[index].length === 0;\r\n  }\r\n\r\n  anyTeamHasLost() {\r\n    for (const i in this.teams) {\r\n      if (this.teamHasLost(i)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  tick() {\r\n    if (this.anyTeamHasLost()) {\r\n      return;\r\n    }\r\n\r\n    const activeCharacter = utils.pickRandom(this.allCharacters, 'speed');\r\n    const activeName = activeCharacter.character;\r\n    utils.log('\\n{0}\\'s turn:', activeName);\r\n    this.activeTeamIndex = this.getTeamOf[activeName];\r\n    const defendingTeam = this.teams[1 - this.activeTeamIndex];\r\n\r\n    this.changeAllEnergy(this.allCharacters, 2);\r\n\r\n    if (activeCharacter.triggerPhase({phase: 'SkipTurn'})) {\r\n      return;\r\n    }\r\n\r\n    activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        allyTeamIndex: this.activeTeamIndex,\r\n        enemyTeam: defendingTeam,\r\n        battle: this,\r\n        phase: 'TurnStart'\r\n    });\r\n\r\n    this.checkAllHp();\r\n    if (this.anyTeamHasLost()) {\r\n      return;\r\n    }\r\n\r\n    var currentTarget = activeCharacter.pickTargetUsingItems(defendingTeam);\r\n\r\n    if (currentTarget.canBeSaved) {\r\n      const blockParams = {\r\n          currentTarget: currentTarget,\r\n          phase: 'Block'\r\n      };\r\n      for (const defendingCharacter of defendingTeam) {\r\n        defendingCharacter.triggerPhase(blockParams);\r\n      }\r\n      currentTarget = blockParams.currentTarget;\r\n    }\r\n\r\n    activeCharacter.triggerPhase({\r\n        battle: this,\r\n        currentTarget: currentTarget, enemyTeam: defendingTeam,\r\n        phase: 'PostTarget'\r\n    });\r\n\r\n    utils.log('Main target: {0}', currentTarget.character);\r\n\r\n    const damageBase = utils.pickRandomWithinRange(\r\n        activeCharacter.attackLow,\r\n        activeCharacter.attackHigh\r\n    );\r\n    utils.log('Attack base damage: {0}', damageBase);\r\n\r\n    const preDamageParams = {\r\n        battle: this,\r\n        currentTarget: currentTarget,\r\n        damageBase: damageBase,\r\n        damageFinal: damageBase,\r\n        enemyTeam: defendingTeam,\r\n        phase: 'PreDamage'\r\n    };\r\n    activeCharacter.triggerPhase(preDamageParams);\r\n    if (preDamageParams.damageFinal !== damageBase) {\r\n      utils.log('Attack final damage: {0}', preDamageParams.damageFinal);\r\n    }\r\n\r\n    utils.log('Normal attack:');\r\n    currentTarget.takeDamage({\r\n        amount: preDamageParams.damageFinal,\r\n        battle: this,\r\n        source: activeCharacter\r\n    });\r\n\r\n    activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        phase: 'PostDamage'\r\n    });\r\n\r\n    if (activeCharacter.poison > 0) {\r\n      utils.log('{0} takes poison damage', activeCharacter.character);\r\n      activeCharacter.changeHp({amount: -activeCharacter.poison});\r\n    }\r\n    this.checkAllHp();\r\n  }\r\n}\r\n","import {Battle} from './battle.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function runDungeon(team, waves) {\r\n  var currTeam = team;\r\n  for (const character of currTeam) {\r\n    character.processedInitCharacter = false;\r\n  }\r\n  utils.log('\\nTeam 0: {0}', JSON.stringify(team));\r\n  utils.log('\\n\\nStarting dungeon');\r\n  for (const index in waves) {\r\n    utils.log('\\nloading wave {0}', index);\r\n    const wave = waves[index];\r\n    utils.log('Team 1: {0}', JSON.stringify(wave));\r\n    const battle = new Battle(currTeam, wave);\r\n    utils.log(utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.log(utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.teams[0];\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function runMany(team, waves, numRuns) {\r\n  var winsForTeam0 = 0;\r\n  for (var i = 0; i < numRuns; i++) {\r\n    if (runDungeon(team, waves) === 0) {\r\n      winsForTeam0++;\r\n    }\r\n  }\r\n  return winsForTeam0;\r\n}\r\n","import * as data from './data.js';\r\nimport { global } from './global.js';\r\nimport * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function outputTest(players, selectedDungeon, numRuns) {\r\n  const output = [];\r\n  const team = [];\r\n\r\n  for (const player of players) {\r\n    if (player.username === '') {\r\n      continue;\r\n    }\r\n    output.push(utils.format('Player found: {0}', player.username));\r\n\r\n    const toEquip = [];\r\n    for (const item of player.items) {\r\n      if (item.name === '') {\r\n        continue;\r\n      }\r\n      output.push(utils.format('Item found: {0} {1}', item.name, item.tier));\r\n      toEquip.push(item);\r\n    }\r\n    if (toEquip.length === 0) {\r\n      output.push('No items found');\r\n    }\r\n    output.push('');\r\n\r\n    team.push({\r\n      character: player.username,\r\n      hp: 100 + player.monuments.Health * 5,\r\n      hpMax: 100 + player.monuments.Health * 5,\r\n      speed: 10 + player.monuments.Speed * 1,\r\n      attackLow: 1 + player.monuments.Power * 1,\r\n      attackHigh: 10 + player.monuments.Power * 1,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip,\r\n      angelAvailable: player.monuments.Angel\r\n    });\r\n  }\r\n  \r\n  const [season, dungeon] = JSON.parse(selectedDungeon);\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  global.season = 3;\r\n  global.verbose = false;\r\n  global.output = null;\r\n  const numWins = simulator.runMany(team, waves, numRuns * 1);\r\n\r\n  output.push(utils.format('Wins out of {0} runs: {1} ({2}%)',\r\n                           numRuns, numWins, numWins * 100 / numRuns));\r\n  const winratePercentage = Math.round((1 + numWins) * 1000 / (numRuns + 2));\r\n  output.push(utils.format('Estimated winrate: {0}%', winratePercentage / 10.0));\r\n  output.push('\\nExample Run:');\r\n  global.output = [];\r\n  global.verbose = true;\r\n  output.push('\\nWinning team: ' + simulator.runDungeon(team, waves));\r\n  utils.extend(output, global.output);\r\n  return output.join('\\n');\r\n}\r\n","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport * as dungeonUtils from \"../dungeonUtils.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank();\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n      &nbsp;{dungeonUtils.getDescriptionOfItem(props.item)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;\r\n","import ItemDropdown from './ItemDropdown.js';\r\nimport * as dungeonUtils from '../dungeonUtils.js';\r\nimport { useState } from 'react';\r\n\r\nfunction PlayerForm(props) {\r\n  const [rawInput, setRawInput] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      Load from !api e, !appr, or BDSM profile:&nbsp;\r\n      <textarea value={rawInput} onChange={(event) => {\r\n        var newPlayer = dungeonUtils.parseInventory(event.target.value);\r\n        if (newPlayer === null) {\r\n          newPlayer = props.player;\r\n        }\r\n        const newMonuments = {...props.player.monuments};\r\n        Object.assign(newMonuments, dungeonUtils.parseMonuments(event.target.value));\r\n        props.onPlayerChanged(newPlayer.username, newPlayer.items, newMonuments)\r\n        setRawInput('');\r\n      }} />\r\n      <br />\r\n      <button onClick={() => {\r\n        navigator.clipboard.writeText(dungeonUtils.serializePlayer(props.player))\r\n      }}> Copy BDSM profile </button>\r\n      <br />\r\n      Username:\r\n      <input value={props.player.username} onChange={(event) => {\r\n        props.onPlayerChanged(event.target.value, props.player.items, props.player.monuments);\r\n      }} />\r\n      {props.player.items.map((item, index) =>\r\n        <ItemDropdown\r\n          key={index}\r\n          item={item}\r\n          onItemChanged={(name, tier) => {\r\n            let newItems = [...props.player.items];\r\n            newItems[index] = {name: name, tier: parseInt(tier)};\r\n            props.onPlayerChanged(props.player.username, newItems, props.player.monuments);\r\n          }}\r\n        />\r\n      )}\r\n      Monuments:\r\n      <br/>\r\n      Health:\r\n      <input type=\"number\" min={0} value={props.player.monuments.Health} onChange={(event) => {\r\n        let newMonuments = {...props.player.monuments};\r\n        newMonuments.Health = event.target.value >>> 0;\r\n        props.onPlayerChanged(\r\n            props.player.username,\r\n            props.player.items,\r\n            newMonuments);\r\n      }} />\r\n      &nbsp;\r\n      Power:\r\n      <input type=\"number\" min={0} value={props.player.monuments.Power} onChange={(event) => {\r\n        let newMonuments = {...props.player.monuments};\r\n        newMonuments.Power = event.target.value >>> 0;\r\n        props.onPlayerChanged(\r\n            props.player.username,\r\n            props.player.items,\r\n            newMonuments);\r\n      }} />\r\n      &nbsp;\r\n      Speed:\r\n      <input type=\"number\" min={0} value={props.player.monuments.Speed} onChange={(event) => {\r\n        let newMonuments = {...props.player.monuments};\r\n        newMonuments.Speed = event.target.value >>> 0;\r\n        props.onPlayerChanged(\r\n            props.player.username,\r\n            props.player.items,\r\n            newMonuments);\r\n      }} />\r\n      &nbsp;\r\n      Angel:\r\n      <input type=\"checkbox\" checked={props.player.monuments.Angel} onChange={(event) => {\r\n        let newMonuments = {...props.player.monuments};\r\n        newMonuments.Angel = event.target.checked;\r\n        props.onPlayerChanged(\r\n            props.player.username,\r\n            props.player.items,\r\n            newMonuments);\r\n      }} />\r\n      <br/>\r\n      <br/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerForm;\r\n","import * as data from '../data.js';\r\nimport Dropdown from './Dropdown.js';\r\nimport * as dungeonUtils from '../dungeonUtils.js';\r\nimport { outputTest } from '../test.js';\r\nimport PlayerForm from './PlayerForm.js';\r\nimport { useState } from 'react';\r\n\r\nfunction Simulator() {\r\n  const dungeonList = data.getDungeonList();\r\n  const [numRuns, setNumRuns] = useState(100);\r\n  const [selectedDungeon, setSelectedDungeon] = useState('[3,0]');\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [rawInput, setRawInput] = useState('');\r\n  const [players, setPlayers] = useState([\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer()\r\n  ]);\r\n\r\n  function getInitialPlayer() {\r\n    return {\r\n      username: \"\",\r\n      items: [\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem()\r\n      ],\r\n      monuments: {\r\n        Health: 0,\r\n        Power: 0,\r\n        Speed: 0,\r\n        Angel: false\r\n      }\r\n    };\r\n  }\r\n\r\n  function parsePlayers(input) {\r\n    if (!input.startsWith('BDSM.partyStart')) {\r\n      return null;\r\n    }\r\n    const players = []\r\n    for (const rawPlayer of input.split('BDSM.playerDivider')) {\r\n      const newPlayer = getInitialPlayer();\r\n      Object.assign(newPlayer, dungeonUtils.parseInventory(rawPlayer));\r\n      Object.assign(newPlayer.monuments, dungeonUtils.parseMonuments(rawPlayer));\r\n      players.push(newPlayer);\r\n    }\r\n    while (players.length < 5) {\r\n      players.push(getInitialPlayer());\r\n    }\r\n    return players;\r\n  }\r\n  \r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunTest() {\r\n    const output = outputTest(players, selectedDungeon, numRuns);\r\n    setOutputText(output);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Load BDSM party profile:&nbsp;\r\n      <textarea value={rawInput} onChange={(event) => {\r\n        const newParty = parsePlayers(event.target.value);\r\n        if (newParty !== null) {\r\n          setPlayers(newParty);\r\n        }\r\n        setRawInput('');\r\n      }} />\r\n      <br/>\r\n      <button onClick={() => {\r\n        navigator.clipboard.writeText(dungeonUtils.serializePlayers(players))\r\n      }}> Copy BDSM party profile </button>\r\n      <br/>\r\n      {players.map((player, index) =>\r\n        <PlayerForm\r\n          key={index}\r\n          player={player}\r\n          onPlayerChanged={(username, items, monuments) => {\r\n            let newPlayers = [...players];\r\n            newPlayers[index] = {\r\n              username: username,\r\n              items: items,\r\n              monuments: monuments\r\n            };\r\n            setPlayers(newPlayers);\r\n          }}\r\n        />\r\n      )}\r\n      [Season, Dungeon]:\r\n      <Dropdown\r\n        selectedOption={selectedDungeon}\r\n        onChange={(event) => {setSelectedDungeon(event.target.value);}}\r\n        options={dungeonList}\r\n      />\r\n      <br/>\r\n      Number of runs:\r\n      <input type=\"number\" min={0} value={numRuns} onChange={(event) => {\r\n        setNumRuns(parseInt(event.target.value));\r\n      }} />\r\n      <br/>\r\n      <button onClick={onRunTest}>\r\n        Run Test\r\n      </button>\r\n      <div style={{whiteSpace: 'pre-line'}}>{outputText}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import Simulator from \"./components/Simulator.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Boxbox Dungeon SiMulator (BDSM)</h1>\r\n      <div><i>Created by Zethorix#1064 and Oof#4389 (qaisklyi)</i></div>\r\n      <div><i><strong>(The pity system is currently not implemented)</strong></i></div>\r\n      <p>Enter your party's items and monuments.</p>\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}