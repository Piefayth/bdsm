{"version":3,"sources":["data sync /^/.//season_.*/.json$","data sync /^/.//season_.*//items//passive_items/.json$","data sync /^/.//season_.*//items//energy_items/.json$","data sync /^/.//season_.*//mobs//summon_templates/.json$","global.js","utils.js","data.js","components/Dropdown.js","dungeonUtils.js","localStorageUtils.js","items.js","character.js","battle.js","simulator.js","test.js","components/OutputLogs.js","components/ItemDropdown.js","components/LoadPlayerSection.js","components/MonumentInput.js","components/MonumentsSection.js","components/PlayerSummary.js","components/PlayerForm.js","components/Simulator.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","global","verbose","output","season","format","args","arguments","replace","match","number","index","parseInt","log","toLog","console","push","extend","iterable1","iterable2","withProbability","p","Math","random","pickRandom","iterable","weightKey","selected","total","i","weight","currentValue","pickRandomWithinRange","lower","upper","floor","evalThreeFunctions","expr","splitPlus","split","length","splitMinus","negTotal","val","product","splitMult","deepCopyJson","obj","JSON","parse","stringify","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getItems","passive","require","energy","Dropdown","props","className","value","selectedOption","onChange","options","option","getDescriptionOfItem","item","items","data","itemData","name","description","tier","re","current","m","utils","formatDescriptionWithTier","parseMonuments","input","monumentLevels","line","startsWith","Angel","matches","parseInventory","player","username","empty","matchUsername","matchItem","serializePlayer","monument","monuments","join","_mutateTemplate","template","scale","base","scaling","key","getScaledTemplate","processedInitCharacter","useStateWithLocalStorage","defaultState","startingState","window","localStorage","getItem","useState","setValueHelper","newValue","setItem","ABILITY_FOR_ITEM","params","phase","enemyTeam","target","takeDamage","source","character","amount","battle","changeSpeed","_throwInvalidPhaseError","changeAttack","changeHpMax","changeHp","usedCannon","damageFinal","round","damageBase","allyTeam","c","summoned","allyTeamIndex","summonedChicken","addSummonToTeam","pickTargetUsingItems","activeTeamIndex","ally","damageAmount","hp","Infinity","targetIsMaxHp","allyIsMaxHp","hpMax","currentTarget","changeEnergy","attackIncrease","damage","max","teams","getTeamOf","poison","enemy","missingHpProportion","addedEnergy","useItemAbility","originalEnergy","cost","_checkEnergy","_extractParam","param","defaultValue","Character","this","speed","attackLow","attackHigh","angelAvailable","canBeSaved","_preprocessTriggers","allItems","triggers","triggerTypes","triggerType","originalHpMax","originalHp","min","originalSpeed","originalAttackLow","originalAttackHigh","amountToGain","phaseParams","triggerPhase","activeCharacter","ret","assign","prototype","toString","Battle","team1","team2","initTeams","teamIndex","allCharacters","team","addCopyOfCharacterToTeam","originalName","copyNum","toAdd","addCharacterToTeam","summon","dungeonUtils","pos","position","_findPositionWithinTeam","splice","kill","teamHasLost","anyTeamHasLost","activeName","defendingTeam","changeAllEnergy","checkAllHp","blockParams","preDamageParams","runDungeon","waves","currTeam","wave","tick","outputTest","players","selectedDungeon","numRuns","toEquip","itemsToPrint","Health","Power","Speed","dungeon","dungeonsForSeason","j","numWins","winsForTeam0","simulator","a","b","mean","stdDev","sqrt","OutputLogs","ItemDropdown","itemNames","obtainableItems","unobtainableItems","type","obtainable","sort","getAllItemNamesAndBlank","event","onItemChanged","LoadPlayerSection","rawInput","setRawInput","newPlayer","newMonuments","onPlayerChanged","onClick","navigator","clipboard","writeText","MonumentInput","onValueChanged","MonumentsSection","newHealth","onMonumentsChanged","newPower","newSpeed","checked","Stats","stats","PlayerSummary","isExpanded","setIsExpanded","icon","faCaretUp","faCaretDown","PlayerForm","newItems","Simulator","dungeonList","dungeonsBySeason","reverse","localStorageUtils","setNumRuns","setSelectedDungeon","outputText","setOutputText","getInitialPlayer","setPlayers","clear","location","reload","newParty","rawPlayer","parsePlayers","pop","newPlayers","err","message","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yssBAAA,IAAIA,EAAM,CACT,qCAAsC,GACtC,sCAAuC,GACvC,iCAAkC,GAClC,iCAAkC,GAClC,kCAAmC,GACnC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,wCAAyC,GACzC,qCAAsC,GACtC,sCAAuC,GACvC,iCAAkC,GAClC,iCAAkC,GAClC,kCAAmC,GACnC,kCAAmC,GACnC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,wCAAyC,GACzC,qCAAsC,GACtC,sCAAuC,GACvC,iCAAkC,GAClC,iCAAkC,GAClC,kCAAmC,GACnC,kCAAmC,GACnC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,wCAAyC,IAI1C,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,24rDCjEpB,IAAIH,EAAM,CACT,sCAAuC,GACvC,sCAAuC,GACvC,sCAAuC,IAIxC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBCxBpB,IAAIH,EAAM,CACT,qCAAsC,GACtC,qCAAsC,GACtC,qCAAsC,IAIvC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBCxBpB,IAAIH,EAAM,CACT,wCAAyC,GACzC,wCAAyC,GACzC,wCAAyC,IAI1C,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,6KCxBPY,EAAS,CACpBC,SAAS,EACTC,OAAQ,KACRC,OAAQ,GCDH,SAASC,IACd,IAAMC,EAAOC,UACb,OAAOD,EAAK,GAAGE,QAAQ,YAAY,SAASC,EAAOC,GAC/C,IAAMC,EAAQC,SAASF,GAAU,EACjC,OACIJ,EAAKK,MAKR,SAASE,IACd,GAAKZ,EAAOC,SAA6B,OAAlBD,EAAOE,OAA9B,CAGA,IAAMW,EAAgC,kBAAjBP,UAAU,GACzBF,EAAM,WAAN,EAAUE,WACVA,UAAU,GACZN,EAAOC,SACTa,QAAQF,IAAIC,GAEQ,OAAlBb,EAAOE,QACTF,EAAOE,OAAOa,KAAKF,IAIhB,SAASG,EAAOC,EAAWC,GAChC,IAAK,IAAMR,KAASQ,EAClBD,EAAUF,KAAKG,EAAUR,IAUtB,SAASS,EAAgBC,GAC9B,OAAOC,KAAKC,SAAWF,EA2BlB,SAASG,EAAWC,GAA2B,IAAjBC,EAAgB,uDAAN,KACzCC,EAAW,KACXC,EAAQ,EACZ,IAAK,IAAMC,KAAKJ,EAAU,CACxB,IACIK,EADEC,EAAeN,EAASI,GAEL,oBAAdH,EACTI,EAASJ,EAAUK,GACI,OAAdL,EACTI,EAAiC,kBAAjBC,EAA4BA,EAAe,EAClDL,KAAaK,IACtBD,EAASC,EAAaL,IAGrBN,EAAgBU,GADnBF,GAASE,MAEPH,EAAWI,GAGf,OAAOJ,EAGF,SAASK,EAAsBC,EAAOC,GAC3C,OAAOD,EAAQX,KAAKa,MAAMb,KAAKC,UAAYW,EAAQD,EAAQ,IAGtD,SAASG,EAAmBC,GACjC,GAA8B,OAA1BA,EAAK5B,MAAM,WACb,OAAOG,SAASyB,GAGlB,IAAMC,EAAYD,EAAKE,MAAM,KAC7B,GAAID,EAAUE,OAAS,EAAG,CACxB,IADwB,EACpBZ,EAAQ,EADY,cAENU,GAFM,IAExB,2BAA6B,CAC3BV,GAASQ,EADkB,UAFL,8BAKxB,OAAOR,EAGT,IAAMa,EAAaJ,EAAKE,MAAM,KAC9B,GAAIE,EAAWD,OAAS,EAAG,CACzB,IADyB,EACrBE,EAAW,KADU,cAEPD,GAFO,IAEzB,2BAA8B,CAAC,IAApBE,EAAmB,QACX,OAAbD,EAIJA,GAAYN,EAAmBO,GAH7BD,EAAmB,KAARC,EAAa,EAAIP,EAAmBO,IAJ1B,8BASzB,OAAOD,EAGT,IA3BuC,EA2BnCE,EAAU,EACRC,EAAYR,EAAKE,MAAM,KA5BU,cA6BrBM,GA7BqB,IA6BvC,2BAA6B,CAAC,IAAnBF,EAAkB,QAC3BC,GAAWhC,SAAS+B,IA9BiB,8BAgCvC,OAAOC,EAGF,SAASE,EAAaC,GAC3B,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IC7HnC,IAAMI,EAAiB,GACjBC,EAAkB,GAClBC,EAAuB,GACvBC,EAAsB,GAwCrB,SAASC,IASd,OARMtD,EAAOG,UAAUgD,IACrBA,EAAgBnD,EAAOG,QAAU,CAC/BoD,QAASC,MACL,YAAmBxD,EAAOG,OAAS,6BACvCsD,OAAQD,MACJ,YAAmBxD,EAAOG,OAAS,8BAGpCgD,EAAgBnD,EAAOG,Q,WC/CjBuD,MARf,SAAkBC,GAChB,OACE,wBAAQC,UAAWD,EAAMC,UAAWC,MAAOF,EAAMG,eAAgBC,SAAUJ,EAAMI,SAAjF,SACGJ,EAAMK,QAAQ/E,KAAI,SAACgF,EAAQvD,GAAT,OAAmB,iCAAqBuD,GAARvD,SCclD,SAASwD,EAAqBC,GACnC,IAAMC,EAAQC,IACRC,EAAWH,EAAKI,QAAQH,EAAMb,QAClCa,EAAMb,QAAQY,EAAKI,MACnBH,EAAMX,OAAOU,EAAKI,MACpB,MAAwB,qBAAbD,EACF,GApBX,SAAmCE,EAAaC,GAI9C,IAHA,IAAMC,EAAK,mBACPC,EAAUH,EACVI,EAAID,EAAQnE,MAAMkE,GACV,MAALE,GACLD,EAAUA,EAAQpE,QACdqE,EAAE,GACFC,EAAyBD,EAAE,GAAGrE,QAAQ,IAAKkE,KAE/CG,EAAID,EAAQnE,MAAMkE,GAEpB,OAAOC,EAWAG,CAA0BR,EAASE,YAAaL,EAAKM,MAGvD,SAASM,EAAeC,GAC7B,IADoC,EAC9BC,EAAiB,GADa,cAEjBD,EAAM1C,MAAM,OAFK,IAEpC,2BAAsC,CAAC,IAA5B4C,EAA2B,QACpC,GAAIA,EAAKC,WAAW,eAClBF,EAAeG,MAAkC,MAA1BF,EAAKA,EAAK3C,OAAS,OAD5C,CAIA,IAAM8C,EAAUH,EAAK1E,MAAM,+CACX,OAAZ6E,IAGJJ,EAAeI,EAAQ,IAAM1E,SAAS0E,EAAQ,OAXZ,8BAapC,OAAOJ,EAGF,SAASK,EAAeN,GAC7B,IADoC,EAC9BO,EAAS,CAACC,SAAU,GAAIpB,MAAO,IACjCqB,GAAQ,EAFwB,cAGjBT,EAAM1C,MAAM,OAHK,IAGpC,2BAAsC,CAAC,IAA5B4C,EAA2B,QAC9BQ,EAAgBR,EAAK1E,MAAM,uBAC3BmF,EAAYT,EAAK1E,MACnB,wDACkB,OAAlBkF,IACFD,GAAQ,EACRF,EAAOC,SAAWE,EAAc,IAEhB,OAAdC,IACFF,GAAQ,EACRF,EAAOnB,MAAMrD,KAAK,CAACwD,KAAMoB,EAAU,GAAIlB,KAAM9D,SAASgF,EAAU,QAbhC,8BAgBpC,GAAIF,EACF,OAAO,KAET,GAAIF,EAAOnB,MAAM7B,OAAS,EACxB,OAAO,KAET,IAAK,IAAIX,EAAI2D,EAAOnB,MAAM7B,OAAQX,EAAI,EAAGA,IACvC2D,EAAOnB,MAAMrD,KAAK,CAACwD,KAAM,GAAIE,KAAM,IAErC,OAAOc,EAGF,SAASK,EAAgBL,GAC9B,IAAMrF,EAAS,GACfA,EAAOa,KAAK8D,EAAa,kBAAmBU,EAAOC,WAFb,oBAGnBD,EAAOnB,OAHY,IAGtC,2BAAiC,CAAC,IAAvBD,EAAsB,QAC/BjE,EAAOa,KAAK8D,EAAa,eAAgBV,EAAKI,KAAMJ,EAAKM,QAJrB,8BAMtC,IAAK,IAAMoB,KAAYN,EAAOO,UACX,UAAbD,EAKJ3F,EAAOa,KAAK8D,EAAa,YACAgB,EACAN,EAAOO,UAAUD,KANxC3F,EAAOa,KAAK8D,EAAa,iBACAU,EAAOO,UAAUV,MAAQ,IAAM,MAO5D,OAAOlF,EAAO6F,KAAK,MAarB,SAASC,EAAgBC,EAAUC,GACjC,GAAuB,iBAAZD,EACT,OAAOA,EAGT,GAAI,SAAUA,GAAY,YAAaA,EACrC,OAAOA,EAASE,KAAOF,EAASG,QAAUF,EAI5C,IAAK,IAAMG,KAAOJ,EAChBA,EAASI,GAAOL,EAAgBC,EAASI,GAAMH,GAEjD,OAAOD,EAGF,SAASK,EAAkBL,EAAUC,GAC1C,IAAMpD,EAAM+B,EAAmBoB,GAG/B,OAFAD,EAAgBlD,EAAKoD,GACrBpD,EAAIyD,wBAAyB,EACtBzD,EC5GF,SAAS0D,EAAyBH,EAAKI,GAC5C,IAAIC,EARC,SAAiBL,GACtB,OAAyC,OAArCM,OAAOC,aAAaC,QAAQR,GACvB,KAEFtD,KAAKC,MAAM2D,OAAOC,aAAaC,QAAQR,IAI1BQ,CAAQR,GACN,OAAlBK,IACFA,EAAgBD,GAGlB,MAAgCK,mBAASJ,GAAzC,mBAAO7C,EAAP,KAAckD,EAAd,KAKA,MAAO,CAAClD,EAJR,SAAkBmD,GAChBD,EAAeC,GAnBZ,SAAiBX,EAAKxC,GACpB8C,OAAOC,aAAaK,QAAQZ,EAAKtD,KAAKE,UAAUY,IAmBrDoD,CAAQZ,EAAKW,K,mBCnBXE,EAAmB,CACvB,UA6DF,SAAmBC,GACjB,GACO,cADCA,EAAOC,MAIX,IAFA,IAAMC,EAAYF,EAAOE,UACnB5C,EAAO0C,EAAOhD,KAAKM,KAChB7C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAM0F,EAASzC,EAAiBwC,GAChCC,EAAOC,WAAW,CAChBC,OAAQL,EAAOM,UACfC,OAAQ7C,EAA4B,EAAIJ,EAAM,EAAIA,GAClDkD,OAAQR,EAAOQ,SAEjBL,EAAOM,YAAY,CACjBF,QAAS7C,EAA4B,EAAGJ,UAM5CoD,EAAwBV,IA/E5B,YAoFF,SAAkBA,GAChB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,gBACHvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOM,UAAUK,aAAa,CAACJ,OAAQ,EAAI,EAAIjD,IAC/C0C,EAAOM,UAAUM,YAAY,CAACL,OAAQ,EAAIjD,IAC1C0C,EAAOM,UAAUO,SAAS,CAACN,OAAQ,EAAIjD,IACvC,MAEF,IAAK,WACH,QAAI0C,EAAOM,UAAUQ,aACnBpD,EAAU,gCAAiCsC,EAAOhD,KAAKI,MACvD4C,EAAOM,UAAUQ,YAAa,GACvB,GAIX,IAAK,aACHd,EAAOM,UAAUQ,YAAa,EAC9B,MAEF,QACEJ,EAAwBV,KA1G5B,WA+GF,SAAiBA,GACf,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,YACH,IAAKvC,EAAsB,IAAOJ,GAChC,MAEFI,EAAU,gBAAiBsC,EAAOhD,KAAKI,MACvC4C,EAAOe,aAAe7G,KAAK8G,MAAM,IAAMhB,EAAOiB,YAC9C,MAEF,QACEP,EAAwBV,KA1H5B,iBA+HF,SAAuBA,GACrB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,aACH,IAAMiB,EAAWlB,EAAOkB,SACxB,GAAwB,IAApBA,EAAS9F,OACX,MAEF,IAAK,IAAIX,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAM0F,EAASzC,EACXwD,GACA,SAACC,GACC,OAAIA,EAAEC,UAGFD,EAAEb,YAAcN,EAAOM,UAAUA,UAF5B,EAKF,KAGb,GAAe,OAAXH,EACF,MAEFA,EAAOU,SAAS,CAACN,OAAQjD,EAAOA,IAChC6C,EAAOQ,aAAa,CAACJ,OAAQjD,IAE/B,MAEF,QACEoD,EAAwBV,KA5J5B,iBAiKF,SAAuBA,GACrB,OAAQA,EAAOC,OACb,IAAK,YACH,IAAMoB,EAAgBrB,EAAOqB,cAC7B,GAAIrB,EAAOM,UAAUA,aAAaN,EAAOQ,OAAOc,gBAC9C,MAEFtB,EAAOQ,OAAOc,gBAAgBtB,EAAOM,UAAUA,WAAa,EAC5DN,EAAOQ,OAAOe,gBAAgBvB,EAAOhD,KAAMqE,GAC3C,MAEF,QACEX,EAAwBV,KA5K5B,mBAiLF,SAAyBA,GACvB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,GACO,cADC0C,EAAOC,MACb,CACiBD,EAAOM,UAAUkB,qBAAqBxB,EAAOE,WACrDE,WAAW,CACdC,OAAQL,EAAOM,UACfC,OAAQ,GAAKjD,EACbkD,OAAQR,EAAOQ,SAEnBR,EAAOM,UAAUK,aAAa,CAACJ,OAAQ,EAAEjD,SAIzCoD,EAAwBV,IA9L5B,iBAmMF,SAAuBA,GACrB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,QACH,GAAID,EAAOQ,OAAOiB,kBAAoBzB,EAAOqB,cAC3C,MAFU,oBAIOrB,EAAOkB,UAJd,IAIZ,2BAAoC,CAAC,IAA1BQ,EAAyB,QAC9BA,EAAKpB,YAAcN,EAAOM,UAAUA,WAGxCoB,EAAKb,SAAS,CAACN,OAAQ,EAAI,EAAIjD,KARrB,8BAUZ,MAEF,QACEoD,EAAwBV,KAlN5B,gBAuNF,SAAsBA,GACpB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,gBACHvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC,IAAMmD,EAAS,EAAIjD,EACnB0C,EAAOM,UAAUM,YAAY,CAACL,OAAQA,IACtCP,EAAOM,UAAUO,SAAS,CAACN,OAAQA,IACnC,MAEF,IAAK,aACH,IAAMoB,EAAerE,EACrB,GAAIqE,GAAgB3B,EAAOM,UAAUsB,GAAI,CACvClE,EAAU,oCAAqCsC,EAAOhD,KAAMI,MAC5D,MAEFM,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC,IAPiB,EAOX8D,EAAWlB,EAAOkB,SACpBf,EAAS,CAACyB,GAAIC,KACdC,GAAgB,EATH,cAUEZ,GAVF,IAUjB,2BAA6B,CAAC,IAAnBQ,EAAkB,QAC3B,IAAIA,EAAKN,SAAT,CAGA,IAAMW,EAAcL,EAAKE,KAAOF,EAAKM,MACjCD,IAAgBD,GAGhBJ,EAAKE,IAAMzB,EAAOyB,KAGtBzB,EAASuB,EACTI,EAAgBC,KAtBD,8BAwBjB,GAAI5B,EAAOyB,KAAOC,IAChB,MAEF7B,EAAOM,UAAUO,SAAS,CAACN,QAASoB,IACpCxB,EAAOU,SAAS,CAACN,OAAQ,EAAIjD,IAC7B,MAEF,QACEoD,EAAwBV,KAhQ5B,mBAqQF,SAAyBA,GACvB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,aACH,IAAMiB,EAAWlB,EAAOkB,SACxB,IAAKxD,EAAsB,IACzB,MAEFA,EAAU,iBAAkBsC,EAAOhD,KAAKI,MALvB,oBAME8D,GANF,IAMjB,2BAA6B,SACtBL,SAAS,CAACN,OAAQjD,KAPR,8BASjB,MAEF,QACEoD,EAAwBV,KAnR5B,kBAwRF,SAAwBA,GACtB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,GACO,eADC0C,EAAOC,MAEXvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOiC,cAActB,aAAa,CAACJ,QAASjD,IACxCI,EAAsB,KACxBsC,EAAOiC,cAAcC,aAAa,CAAC3B,QAASjD,SAK9CoD,EAAwBV,IAnS5B,iBAwSF,SAAuBA,GACrB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,aACH,IADiB,EACXiB,EAAWlB,EAAOkB,SACpBf,EAAS,CAACyB,GAAIC,KACdC,GAAgB,EAHH,cAIEZ,GAJF,IAIjB,2BAA6B,CAAC,IAAnBQ,EAAkB,QAC3B,IAAIA,EAAKN,SAAT,CAGA,IAAMW,EAAcL,EAAKE,KAAOF,EAAKM,MACjCD,IAAgBD,GAGhBJ,EAAKE,IAAMzB,EAAOyB,KAGtBzB,EAASuB,EACTI,EAAgBC,KAhBD,8BAkBjB,GAAI5B,EAAOyB,KAAOC,IAChB,MAEF1B,EAAOU,SAAS,CAACN,OAAQ,EAAIjD,IAC7B6C,EAAO+B,aAAa,CAAC3B,OAAQ,KAC7B,MAEF,QACEG,EAAwBV,KApU5B,mBAyUF,SAAyBA,GACvB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,YACH,IAAMC,EAAYF,EAAOE,UACzB,GAAyB,IAArBA,EAAU9E,OAAc,CACX8E,EAAUzH,OAAOD,KAAK0H,GAAW,IACzCE,WAAW,CACdC,OAAQL,EAAOM,UACfC,OAAQ7C,EAA4B,GAAKJ,EAAM,GAAKA,GACpDkD,OAAQR,EAAOQ,SAEnB,MATc,oBAWIN,GAXJ,IAWhB,2BAA+B,SACvBE,WAAW,CACbC,OAAQL,EAAOM,UACfC,OAAQ7C,EAA4B,EAAIJ,EAAM,GAAKA,GACnDkD,OAAQR,EAAOQ,UAfL,8BAkBhB,MAEF,QACEE,EAAwBV,KAhW5B,gBAqWF,SAAsBA,GACpB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,GACO,cADC0C,EAAOC,MACb,CAAmB,IAAD,gBACID,EAAOE,WADX,IAChB,2BAAsC,SAC9BE,WAAW,CACbC,OAAQL,EAAOM,UACfC,OAAQ,EAAIjD,EACZkD,OAAQR,EAAOQ,UALL,kDAQGR,EAAOkB,UARV,IAQhB,2BAAoC,SAC7BL,SAAS,CAACN,OAAQ,EAAIjD,KATb,oCAchBoD,EAAwBV,IArX5B,aA0XF,SAAmBA,GACjB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,GACO,eADC0C,EAAOC,MACb,CACEvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MAExC,IADA,IAAI+E,EAAiB,EACZ1H,EAAI,EAAGA,EAAI6C,EAAM7C,IACnBiD,EAAsB,KAG3ByE,IAEFnC,EAAOM,UAAUK,aAAa,CAACJ,OAAQ4B,SAIvCzB,EAAwBV,IAzY5B,UA8YF,SAAmBA,GACjB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,GACO,kBADC0C,EAAOC,MAEXvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOM,UAAUG,YAAY,CAACF,OAAQjD,SAItCoD,EAAwBV,IAtZ5B,QA2ZF,SAAiBA,GACf,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,GACO,kBADC0C,EAAOC,MAEXvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOM,UAAUK,aAAa,CAACJ,OAAQjD,EAAOA,IAC9C0C,EAAOM,UAAUM,YAAY,CAACL,OAAQ,EAAIjD,IAC1C0C,EAAOM,UAAUO,SAAS,CAACN,OAAQ,EAAIjD,SAIvCoD,EAAwBV,IAra5B,kBA0aF,SAAwBA,GACtB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,aACH,IAAKvC,EAAsB,IACzB,MAEFA,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOM,UAAUO,SAAS,CAACN,OAAQ,EAAIjD,IACvC,MAEF,IAAK,QACH,IAAKI,EAAsB,IAAO,IAAOJ,GACvC,MAEF,GAAI0C,EAAOiC,cAAc3B,YAAcN,EAAOM,UAAUA,UACtD,MAEF,GAAIN,EAAOiC,cAAcL,GAAK5B,EAAOM,UAAUsB,GAAI,CACjDlE,EACI,qBACAsC,EAAOM,UAAUA,UACjBN,EAAOiC,cAAc3B,WAEzBN,EAAOiC,cAAgBjC,EAAOM,UAC9B,MAEF5C,EACI,kBACAsC,EAAOM,UAAUA,WAErB,MAEF,QACEI,EAAwBV,KA3c5B,cAgdF,SAAoBA,GAClB,GACO,cADCA,EAAOC,MAEXD,EAAOQ,OAAOe,gBAAgBvB,EAAOhD,KAAMgD,EAAOqB,oBAIlDX,EAAwBV,IAtd5B,iBA2dF,SAAsBA,GACpB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,YACH,IACME,EAASzC,EADGsC,EAAOE,WAEzB,GAAIF,EAAOM,UAAUsB,KAAO5B,EAAOM,UAAU0B,MAAO,CAClD7B,EAAOC,WAAW,CACdC,OAAQL,EAAOM,UACfC,OAAQ7C,EAA4B,GAAKJ,EAAM,GAAKA,GACpDkD,OAAQR,EAAOQ,SAEnB,MAEF,IAAMD,EAAS7C,EAA4B,EAAIJ,EAAM,EAAIA,GACzD6C,EAAOC,WAAW,CACdC,OAAQL,EAAOM,UACfC,OAAQA,EACRC,OAAQR,EAAOQ,SAEnBR,EAAOM,UAAUO,SAAS,CAACN,OAAQA,IACnC,MAEF,QACEG,EAAwBV,KAlf5B,cAufF,SAAoBA,GAClB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,QACH,GAAID,EAAOQ,OAAOiB,kBAAoBzB,EAAOqB,cAC3C,MAEF,GAAsB,OAAlBrB,EAAOK,OACT,MAEFL,EAAOK,OAAOD,WAAW,CACvBG,OAAQ,GAAKjD,EACbkD,OAAQR,EAAOQ,OACfH,OAAQL,EAAOM,YAEjB,MAEF,QACEI,EAAwBV,KAxgB5B,cA6gBF,SAAoBA,GAClB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,aACHvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC,IACM+C,EAASzC,EADEsC,EAAOkB,UAGpB,SAACC,GACC,OAAIA,EAAEb,YAAcN,EAAOM,UAAUA,WAGjCa,EAAEC,SAFG,EAKF,KAGb,GAAe,OAAXjB,EACF,MAEFA,EAAOU,SAAS,CAACN,OAAQjD,EAAOA,IAChC6C,EAAO+B,aAAa,CAAC3B,OAAQjD,IAC7B,MAEF,QACEoD,EAAwBV,KAtiB5B,QA2iBF,SAAiBA,GACf,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,aACHvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC,IAAM8C,EAAYF,EAAOE,UACzB,GAAyB,IAArBA,EAAU9E,OACZ,MAEasC,EACXwC,GACA,SAACiB,GACC,OAAIA,EAAEb,YAAcN,EAAOiC,cAAc3B,UAChC,EAEF,KAGNF,WAAW,CACdC,OAAQL,EAAOM,UACfC,OAAQ7C,EAA4B,EAAIJ,EAAM,EAAIA,GAClDkD,OAAQR,EAAOQ,SAEnB,MAEF,QACEE,EAAwBV,KApkB5B,gBAykBF,SAAsBA,GACpB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,QACH,IAAKvC,EAAsB,IAAO,IAAOJ,GACvC,MAEF,GAAI0C,EAAOiC,cAAc3B,YAAcN,EAAOM,UAAUA,UACtD,MAEF,GAAIN,EAAOiC,cAAcL,GAAK5B,EAAOM,UAAUsB,GAAI,CACjDlE,EACI,qBACAsC,EAAOM,UAAUA,UACjBN,EAAOiC,cAAc3B,WAEzBN,EAAOiC,cAAgBjC,EAAOM,UAC9B,MAEF5C,EACI,kBACAsC,EAAOM,UAAUA,WAErB,MAEF,IAAK,cACH,IAAK5C,EAAsB,IAAO,IAAOJ,GACvC,MAEFI,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOoC,OAASlI,KAAKmI,IAAI,EAAGrC,EAAOoC,OAAS,EAAI,EAAI9E,GACpD,MAEF,QACEoD,EAAwBV,KA1mB5B,eA+mBF,SAAqBA,GACnB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,cACH,IAAKvC,EAAsB,KACzB,MAEFA,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC,IAAM+C,EAASzC,EACXsC,EAAOQ,OAAO8B,MACVtC,EAAOQ,OAAO+B,UAAUvC,EAAOM,UAAUA,aAE7C,SAACa,GACC,OAAIA,EAAEb,YAAcN,EAAOM,UAAUA,WAGjCa,EAAEC,SAFG,EAKF,KAGb,GAAe,OAAXjB,EACF,MAEFA,EAAOU,SAAS,CAACN,OAAQjD,EAAOA,IAChC6C,EAAO+B,aAAa,CAAC3B,OAAQjD,IAC7B,MAEF,QACEoD,EAAwBV,KA5oB5B,UAipBF,SAAgBA,GACd,OAAQA,EAAOC,OACb,IAAK,gBACH,GAAsB,OAAlBD,EAAOQ,OACT,MAEF9C,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOQ,OAAOe,gBAAgBvB,EAAOhD,KAAMgD,EAAOqB,eAClD,MAEF,QACEX,EAAwBV,KA3pB5B,gBAgqBF,SAAsBA,GACpB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,gBACHvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOM,UAAUM,YAAY,CAACL,OAAQ,EAAIjD,IAC1C0C,EAAOM,UAAUO,SAAS,CAACN,OAAQ,EAAIjD,IACvC,MAEF,IAAK,aACHI,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOiC,cAAcO,QAAUlF,EAC/B,MAEF,QACEoD,EAAwBV,KA9qB5B,mBAmrBF,SAAyBA,GACvB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,QACH,GAAID,EAAOQ,OAAOiB,kBAAoBzB,EAAOqB,cAC3C,MAFU,oBAIOrB,EAAOkB,UAJd,IAIZ,2BAAoC,CAAC,IAA1BQ,EAAyB,QAC9BA,EAAKpB,YAAcN,EAAOM,UAAUA,WAGxCoB,EAAKjB,YAAY,CAACF,OAAQjD,KARhB,8BAUZ,MAEF,QACEoD,EAAwBV,KAlsB5B,4BAusBF,SAAgCA,GAC9B,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,QACH,GAAID,EAAOQ,OAAOiB,kBAAoBzB,EAAOqB,cAC3C,MAEF,IAAMlB,EAASzC,EAAiBsC,EAAOkB,UAAU,SAACC,GAChD,OAAIA,EAAEb,YAAcN,EAAOM,UAAUA,UAC5B,EAEF,KAET,GAAe,OAAXH,EACF,MAEFA,EAAOM,YAAY,CAACF,OAAQ,EAAIjD,IAChC,MAEF,QACEoD,EAAwBV,KA1tB5B,iBA+tBF,SAAuBA,GACrB,OAAQA,EAAOC,OACb,IAAK,gBACH,GAAsB,OAAlBD,EAAOQ,OACT,MAEF9C,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOQ,OAAOe,gBAAgBvB,EAAOhD,KAAMgD,EAAOqB,eAClD,MAEF,QACEX,EAAwBV,KAzuB5B,aA8uBF,SAAmBA,GACjB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,cACH,IAAKvC,EAAsB,IACzB,MAEFA,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOoC,OAASlI,KAAKmI,IAAI,EAAGrC,EAAOoC,OAAS9E,EAAOA,GACnD0C,EAAOK,OAAOQ,SAAS,CAACN,QAASjD,EAAOA,IACxC,MAEF,QACEoD,EAAwBV,KA1vB5B,gBA+vBF,SAAsBA,GACpB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,QACH,GAAID,EAAOQ,OAAOiB,kBAAoBzB,EAAOqB,cAC3C,MAFU,oBAIOrB,EAAOkB,UAJd,IAIZ,2BAAoC,CAAC,IAA1BQ,EAAyB,QAC9BA,EAAKpB,YAAcN,EAAOM,UAAUA,WAGxCoB,EAAKQ,aAAa,CAAC3B,OAAQ,GAAKjD,KARtB,8BAUZ,MAEF,QACEoD,EAAwBV,KA9wB5B,mBAmxBF,SAAyBA,GACvB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,SACH,IADa,EACTE,EAAS,CAACyB,GAAIC,KADL,cAEO7B,EAAOE,WAFd,IAEb,2BAAsC,CAAC,IAA5BuC,EAA2B,QAChCA,EAAMb,GAAKzB,EAAOyB,KACpBzB,EAASsC,IAJA,8BAOb,GAAItC,EAAOyB,KAAOC,IAChB,MAAMvJ,MAAM,0CAEdoF,EAAU,0BAA2BsC,EAAOhD,KAAKI,KAAM+C,EAAOG,WAC9DN,EAAOiC,cAAgB9B,EACvB,MAEF,IAAK,YACH,IAAMuC,EACF,EAAI1C,EAAOiC,cAAcL,GAAK5B,EAAOiC,cAAcD,MACvDtE,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOe,aAAe7G,KAAKa,MAAM,EAAI2H,EAAsBpF,GAC3D,MAEF,IAAK,OACHI,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOM,UAAUO,SAAS,CAACN,OAAQ,EAAIjD,IACvC,MAEF,QACEoD,EAAwBV,KAhzB5B,eAqzBF,SAAqBA,GACnB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,gBACHvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC,IAAMmD,EAAS,GAAKjD,EACpB0C,EAAOM,UAAUM,YAAY,CAACL,OAAQA,IACtCP,EAAOM,UAAUO,SAAS,CAACN,OAAQA,IACnC,MAEF,IAAK,QACH,IAAK7C,EAAsB,IAAO,IAAOJ,GACvC,MAEF,GAAI0C,EAAOiC,cAAc3B,YAAcN,EAAOM,UAAUA,UACtD,MAEF,GAAIN,EAAOiC,cAAcL,GAAK5B,EAAOM,UAAUsB,GAAI,CACjDlE,EACI,qBACAsC,EAAOM,UAAUA,UACjBN,EAAOiC,cAAc3B,WAEzBN,EAAOiC,cAAgBjC,EAAOM,UAC9B,MAEF5C,EACI,kBACAsC,EAAOM,UAAUA,WAErB,MAEF,QACEI,EAAwBV,KAr1B5B,OA01BF,SAAgBA,GACd,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,GACO,cADC0C,EAAOC,MACb,CACEvC,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC,IAFgB,EAEZuF,GAAc,EAFF,cAGI3C,EAAOE,WAHX,IAGhB,2BAAsC,SAC9BE,WAAW,CACbC,OAAQL,EAAOM,UACfC,OAAQjD,EACRkD,OAAQR,EAAOQ,SAEfmC,GAGCjF,EAAsB,OAG3BsC,EAAOM,UAAU4B,aAAa,CAAC3B,OAAQjD,IACvCqF,GAAc,IAhBA,oCAqBhBjC,EAAwBV,IAj3B5B,eAs3BF,SAAqBA,GACnB,OAAQA,EAAOC,OACb,IAAK,gBACH,GAAsB,OAAlBD,EAAOQ,OACT,MAEF9C,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOQ,OAAOe,gBAAgBvB,EAAOhD,KAAMgD,EAAOqB,eAClD,MAEF,QACEX,EAAwBV,KAh4B5B,gBAq4BF,SAAsBA,GACpB,IAAM1C,EAAO0C,EAAOhD,KAAKM,KACzB,OAAQ0C,EAAOC,OACb,IAAK,YACH,IAAKvC,EAAsB,IAAOJ,GAChC,MAEFI,EAAU,iBAAkBsC,EAAOhD,KAAKI,MAJxB,oBAKI4C,EAAOE,WALX,IAKhB,2BAAsC,CAAC,IAA5BuC,EAA2B,QAChCA,EAAMnC,YAAcN,EAAOiC,cAAc3B,WAG7CmC,EAAMrC,WAAW,CACbC,OAAQL,EAAOM,UACfC,OAAQP,EAAOiB,WACfT,OAAQR,EAAOQ,UAZL,8BAehB,MAEF,QACEE,EAAwBV,MAv5BvB,SAAS4C,EAAe5C,GAC7B,KAAIA,EAAOhD,KAAKI,QAAQF,IAAgBZ,SAM1C,SAAsB0D,GACpB,IAAM6C,EAAiB7C,EAAOM,UAAUhE,OAClCwG,EAAO5F,IAAgBZ,OAAO0D,EAAOhD,KAAKI,MAAM0F,KACtD,GAAID,EAAiBC,EACnB,OAAO,EAIT,OAFApF,EAAU,iBAAkBsC,EAAOhD,KAAKI,MACxC4C,EAAOM,UAAU4B,aAAa,CAAC3B,QAASuC,KACjC,EAd4CC,CAAa/C,GAGhE,OAAOD,EAAiBC,EAAOhD,KAAKI,MAAM4C,GAc5C,SAASU,EAAwBV,GAC/B,MAAM1H,MAAMoF,EAAa,kDACAsC,EAAOhD,KAAKI,KAAM4C,EAAOC,QCnCpD,SAAS+C,EAAchD,EAAQiD,EAAOC,GACpC,OAAID,KAASjD,EACJA,EAAOiD,GAETC,EAGF,IAAMC,EAAb,WACE,WAAYnD,GAAS,oBACnBoD,KAAK9C,UAAY0C,EAAchD,EAAQ,YAAa,WACpDoD,KAAKpB,MAAQgB,EAAchD,EAAQ,QAAS,KAC5CoD,KAAKxB,GAAKoB,EAAchD,EAAQ,KAAMoD,KAAKpB,OAC3CoB,KAAKC,MAAQL,EAAchD,EAAQ,QAAS,IAC5CoD,KAAKE,UAAYN,EAAchD,EAAQ,YAAa,GACpDoD,KAAKG,WAAaP,EAAchD,EAAQ,aAAc,IACtDoD,KAAK9G,OAAS0G,EAAchD,EAAQ,SAAU,GAC9CoD,KAAKhC,SAAW4B,EAAchD,EAAQ,YAAY,GAClDoD,KAAKnG,MAAQ+F,EAAchD,EAAQ,QAAS,IAE5CoD,KAAKI,eAAiBR,EAAchD,EAAQ,kBAAkB,GAC9DoD,KAAKK,WAAaT,EAAchD,EAAQ,cAAc,GACtDoD,KAAKZ,OAASQ,EAAchD,EAAQ,SAAU,GAC9CoD,KAAKtC,WAAakC,EAAchD,EAAQ,cAAc,GACtDoD,KAAKM,sBACLN,KAAKhE,uBACD4D,EAAchD,EAAQ,0BAA0B,GAlBxD,uDAqBE,WACE,KAAI,aAAcoD,MAAlB,CAGA,IAJoB,EAIdO,EAAWzG,IACX0G,EAAW,GALG,cAMDR,KAAKnG,OANJ,IAMpB,2BAA+B,CAAC,IAAD,EAApBD,EAAoB,QACvB6G,EAAe7G,EAAKI,QAAQuG,EAASrH,OACrCqH,EAASrH,OAAOU,EAAKI,MAAMwG,SAC3BD,EAASvH,QAAQY,EAAKI,MAAMwG,SAHL,cAIHC,GAJG,IAI7B,2BAAwC,CAAC,IAA9BC,EAA6B,QAChCA,KAAeF,EAIrBA,EAASE,GAAalK,KAAKoD,GAHzB4G,EAASE,GAAe,CAAC9G,IANA,gCANX,8BAkBpBoG,KAAKQ,SAAWA,KAvCpB,sBA0CE,WAEE,OAAO,IAAIT,EADIzF,EAAmB0F,SA3CtC,yBA+CE,SAAYpD,GACV,IAAM+D,EAAgBX,KAAKpB,MAC3BoB,KAAKpB,OAAShC,EAAOO,OACrB7C,EAAU,wCACA0F,KAAK9C,UAAWN,EAAOO,OAAQwD,EAAeX,KAAKpB,SAnDjE,sBAsDE,SAAShC,GACP,IAAMgE,EAAaZ,KAAKxB,GACpBoC,GAAc,GAAKhE,EAAOO,OAAS,IAIvC6C,KAAKxB,GAAK1H,KAAK+J,IAAIb,KAAKxB,GAAK5B,EAAOO,OAAQ6C,KAAKpB,OACjDtE,EAAU,oCACA0F,KAAK9C,UAAWN,EAAOO,OAAQyD,EAAYZ,KAAKxB,OA9D9D,yBAiEE,SAAY5B,GACV,IAAMkE,EAAgBd,KAAKC,MAC3BD,KAAKC,MAAQnJ,KAAKmI,IAAIe,KAAKC,MAAQrD,EAAOO,OAAQ,GAClD7C,EAAU,uCACA0F,KAAK9C,UAAWN,EAAOO,OAAQ2D,EAAed,KAAKC,SArEjE,0BAwEE,SAAarD,GACX,IAAMmE,EAAoBf,KAAKE,UACzBc,EAAqBhB,KAAKG,WAC1Bc,EAAenK,KAAKmI,KAAK8B,EAAmBnE,EAAOO,QACzD6C,KAAKE,WAAae,EAClBjB,KAAKG,YAAcc,EACnB3G,EAAU,wCACA0F,KAAK9C,UACLN,EAAOO,OACP,CAAC4D,EAAmBC,GACpB,CAAChB,KAAKE,UAAWF,KAAKG,eAlFpC,0BAqFE,SAAavD,GACX,IAAM6C,EAAiBO,KAAK9G,OAC5B8G,KAAK9G,OAASpC,KAAKmI,IAAIe,KAAK9G,OAAS0D,EAAOO,OAAQ,GACpD7C,EAAU,wCACA0F,KAAK9C,UACLN,EAAOO,OACPsC,EACAO,KAAK9G,UA5FnB,wBA+FE,SAAW0D,GACT,IAAMsE,EAAc,CAChB9D,OAAQR,EAAOQ,OACf4B,OAAQpC,EAAOO,OACfN,MAAO,cACPI,OAAQL,EAAOK,QAMnB,GAJA+C,KAAKmB,aAAaD,GAClBlB,KAAKvC,SAAS,CACVN,QAAS+D,EAAYlC,WAErBgB,KAAKxB,GAAK,GAAd,CAGA,IAAMP,EAAgBrB,EAAOQ,OAAO+B,UAAUa,KAAK9C,WACnD8C,KAAKmB,aAAa,CAChBrD,SAAUlB,EAAOQ,OAAO8B,MAAMjB,GAC9BA,cAAeA,EACfb,OAAQR,EAAOQ,OACfF,UAAW8C,KACXnD,MAAO,QACPI,OAAQL,EAAOK,SAEb+C,KAAK9C,YAAcN,EAAOQ,OAAOgE,gBAAgBlE,WACnDN,EAAOQ,OAAOgE,gBAAgBD,aAAa,CACzCtE,MAAO,YAxHf,0BA6HE,SAAaD,GACX,KAAMA,EAAOC,SAASmD,KAAKQ,UACzB,OAAO,EAET,GAAqB,kBAAjB5D,EAAOC,OAA6BmD,KAAKhE,uBAC3C,OAAO,EAGTY,EAAOM,UAAY8C,KACnB,IATmB,EASfqB,GAAM,EATS,cAUArB,KAAKQ,SAAS5D,EAAOC,QAVrB,IAUnB,2BAAgD,CAAC,IAAtCjD,EAAqC,SAGpC,IAFNC,EAAqBxE,OAAOiM,OAAO1E,EAAQ,CACzChD,KAAMA,OAEVyH,GAAM,IAdS,8BAoBnB,MAHqB,kBAAjBzE,EAAOC,QACTmD,KAAKhE,wBAAyB,GAEzBqF,IAjJX,kCAoJE,SAAqBvE,GACnB,IAAMF,EAAS,CACXiC,cAAevE,EAAiBwC,GAChCA,UAAWA,EACXD,MAAO,UAIX,OADAmD,KAAKmB,aAAavE,GACXA,EAAOiC,kBA5JlB,KAgKAkB,EAAUwB,UAAUC,SAAW,WAC7B,OAAOxB,KAAK9C,WCnLP,IAAMuE,EAAb,WACE,WAAYC,EAAOC,GAAQ,oBACzB3B,KAAK9B,gBAAkB,GACvB8B,KAAK4B,UAAU,CAACF,EAAOC,IAH3B,6CAME,SAAUzC,GAIR,IAAK,IAAM2C,KAHX7B,KAAKd,MAAQ,CAAC,GAAI,IAClBc,KAAK8B,cAAgB,GACrB9B,KAAKb,UAAY,GACOD,EAAO,CAC7B,IAAM6C,EAAO7C,EAAM2C,GACnB,IAAK,IAAMxK,KAAK0K,EACd/B,KAAKgC,yBAAyBD,EAAK1K,GAAIwK,MAb/C,gCAkBE,SAAmB3E,EAAW2E,GAI5B,IAHA,IAAI7H,EAAOkD,EAAUA,UACf+E,EAAejI,EACjBkI,EAAU,EACPlI,KAAQgG,KAAK8B,eAElB9H,EAAOiI,EAAe,OADtBC,EAGFhF,EAAUA,UAAYlD,EACtBgG,KAAKb,UAAUnF,GAAQ6H,EACvB7B,KAAK8B,cAAc9H,GAAQkD,EAC3BA,EAAUiE,aAAa,CACnBlD,cAAe4D,EACfzE,OAAQ4C,KACR9C,UAAWA,EACXL,MAAO,kBAEXmD,KAAKd,MAAM2C,GAAWrL,KAAK0G,KAnC/B,sCAsCE,SAAyBA,EAAW2E,GAClC,IAAMM,EAAQ,IAAIpC,EAAU7C,GAC5B8C,KAAKoC,mBAAmBD,EAAON,KAxCnC,6BA2CE,SAAgBjI,EAAMiI,GACpB,IAAMnG,GNwBFjG,EAAOG,UAAUkD,IACrBA,EAAoBrD,EAAOG,QAAUqD,MACjC,YAAmBxD,EAAOG,OAAS,gCAElCkD,EAAoBrD,EAAOG,SM5BKgE,EAAKI,MACpCqI,EAAS,IAAItC,EAAUuC,EAA+B5G,EAAU9B,EAAKM,OAC3EI,EAAU,6BAA8B+H,EAAOnF,UAAW2E,GAC1D7B,KAAKoC,mBAAmBC,EAAQR,KA/CpC,kBAkDE,SAAK3E,GACH,IAAMlD,EAAOkD,EAAUA,UACvB,GAAIA,EAAUkD,eAIZ,OAHA9F,EAAU,iCAAkCN,GAC5CkD,EAAUsB,GAAK1H,KAAK8G,MAAwB,IAAlBV,EAAU0B,YACpC1B,EAAUkD,gBAAiB,GAG7B9F,EAAU,eAAgBN,GAC1B,IAAM+H,EAAO/B,KAAKd,MAAMc,KAAKb,UAAUnF,IACjCuI,EAvEV,SAAiCvI,EAAM+H,GACrC,IAAK,IAAMS,KAAYT,EAErB,GADUA,EAAKS,GACTtF,YAAclD,EAClB,OAAOwI,EAGX,OAAQ,EAgEMC,CAAwBzI,EAAM+H,GAC1C,GAAIQ,EAAM,EACR,MAAMrN,MAAMoF,EAAa,wCACAN,EAAM+H,WAE1B/B,KAAK8B,cAAc9H,UACnBgG,KAAKb,UAAUnF,GACtB+H,EAAKW,OAAOH,EAAK,GACbvI,KAAQgG,KAAK9B,wBACR8B,KAAK9B,gBAAgBlE,KArElC,6BAyEE,SAAgB/C,EAAUkG,GACxB,IAAK,IAAMrB,KAAO7E,EAChBA,EAAS6E,GAAKgD,aAAa,CAAC3B,OAAQA,MA3E1C,wBA+EE,WACE,IAAK,IAAMnD,KAAQgG,KAAK8B,cAAe,CACrC,IAAM5E,EAAY8C,KAAK8B,cAAc9H,GACjCkD,EAAUsB,IAAM,GAClBwB,KAAK2C,KAAKzF,MAnFlB,yBAwFE,SAAY/G,GACV,OAAoC,IAA7B6J,KAAKd,MAAM/I,GAAO6B,SAzF7B,4BA4FE,WACE,IAAK,IAAMX,KAAK2I,KAAKd,MACnB,GAAIc,KAAK4C,YAAYvL,GACnB,OAAO,EAGX,OAAO,IAlGX,kBAqGE,WACE,IAAI2I,KAAK6C,iBAAT,CAIA7C,KAAKoB,gBAAkB9G,EAAiB0F,KAAK8B,cAAe,SAC5D,IAAMgB,EAAa9C,KAAKoB,gBAAgBlE,UACxC5C,EAAU,gBAAkBwI,GAC5B9C,KAAK3B,gBAAkB2B,KAAKb,UAAU2D,GACtC,IAAMC,EAAgB/C,KAAKd,MAAM,EAAIc,KAAK3B,iBAI1C,GAFA2B,KAAKgD,gBAAgBhD,KAAK8B,cAAe,IAErC9B,KAAKoB,gBAAgBD,aAAa,CAACtE,MAAO,eAI9CmD,KAAKoB,gBAAgBD,aAAa,CAC9BrD,SAAUkC,KAAKd,MAAMc,KAAK3B,iBAC1BJ,cAAe+B,KAAK3B,gBACpBvB,UAAWiG,EACX3F,OAAQ4C,KACRnD,MAAO,cAGXmD,KAAKiD,cACDjD,KAAK6C,kBAAT,CAIA,IAAIhE,EAAgBmB,KAAKoB,gBAAgBhD,qBAAqB2E,GAE9D,GAAIlE,EAAcwB,WAAY,CAC5B,IAD4B,EACtB6C,EAAc,CAChBrE,cAAeA,EACfhC,MAAO,SAHiB,cAKKkG,GALL,IAK5B,2BAAgD,SAC3B5B,aAAa+B,IANN,8BAQ5BrE,EAAgBqE,EAAYrE,cAG9BmB,KAAKoB,gBAAgBD,aAAa,CAC9BrD,SAAUkC,KAAKd,MAAMc,KAAK3B,iBAC1BjB,OAAQ4C,KACRnB,cAAeA,EAAe/B,UAAWiG,EACzClG,MAAO,eAGXvC,EAAU,mBAAoBuE,EAAc3B,WAE5C,IAAMW,EAAavD,EACf0F,KAAKoB,gBAAgBlB,UACrBF,KAAKoB,gBAAgBjB,YAEzB7F,EAAU,0BAA2BuD,GAErC,IAAMsF,EAAkB,CACpB/F,OAAQ4C,KACRnB,cAAeA,EACfhB,WAAYA,EACZF,YAAaE,EACbf,UAAWiG,EACXlG,MAAO,aAEXmD,KAAKoB,gBAAgBD,aAAagC,GAC9BA,EAAgBxF,cAAgBE,GAClCvD,EAAU,2BAA4B6I,EAAgBxF,aAGxDrD,EAAU,kBACVuE,EAAc7B,WAAW,CACrBG,OAAQgG,EAAgBxF,YACxBP,OAAQ4C,KACR/C,OAAQ+C,KAAKoB,kBAGjBpB,KAAKoB,gBAAgBD,aAAa,CAC9BrD,SAAUkC,KAAKd,MAAMc,KAAK3B,iBAC1BxB,MAAO,eAGPmD,KAAKoB,gBAAgBhC,OAAS,IAChC9E,EAAU,0BAA2B0F,KAAKoB,gBAAgBlE,WAC1D8C,KAAKoB,gBAAgB3D,SAAS,CAACN,QAAS6C,KAAKoB,gBAAgBhC,UAE/DY,KAAKiD,mBA5LT,KCbO,SAASG,EAAWrB,EAAMsB,GAC/B,IADsC,EAClCC,EAAWvB,EADuB,cAEduB,GAFc,IAEtC,2BAAkC,SACtBtH,wBAAyB,GAHC,8BAOtC,IAAK,IAAM7F,KAFXmE,EAAU,gBAAiB9B,KAAKE,UAAUqJ,IAC1CzH,EAAU,wBACU+I,EAAO,CACzB/I,EAAU,qBAAsBnE,GAChC,IAAMoN,EAAOF,EAAMlN,GACnBmE,EAAU,cAAe9B,KAAKE,UAAU6K,IACxC,IAAMnG,EAAS,IAAIqE,EAAO6B,EAAUC,GAEpC,IADAjJ,EAAUA,EAAmB8C,MAChB,CAKX,GAJAA,EAAOoG,OAEPlJ,EAAUA,EAAmB8C,IAEzBA,EAAOwF,YAAY,GACrB,OAAO,EAGT,GAAIxF,EAAOwF,YAAY,GACrB,MAGJU,EAAWlG,EAAO8B,MAAM,GAE1B,OAAO,EC1BF,SAASuE,EAAWC,EAASC,EAAiBC,GACnD,IAD4D,EACtDjO,EAAS,GACToM,EAAO,GAF+C,cAIvC2B,GAJuC,IAI5D,2BAA8B,CAAC,IAApB1I,EAAmB,QAC5B,GAAwB,KAApBA,EAAOC,SAAX,CAGAtF,EAAOa,KAAK8D,EAAa,cAAeU,EAAOC,WAE/C,IAN4B,EAMtB4I,EAAU,GANY,cAOT7I,EAAOnB,OAPE,IAO5B,2BAAiC,CAAC,IAAvBD,EAAsB,QACb,KAAdA,EAAKI,MAGT6J,EAAQrN,KAAKoD,IAXa,8BAa5B,GAAuB,IAAnBiK,EAAQ7L,OACVrC,EAAOa,KAAK,sBACP,CACL,IADK,EACCsN,EAAe,GADhB,cAEcD,GAFd,IAEL,2BAA4B,CAAC,IAAlBjK,EAAiB,QAC1BkK,EAAatN,KAAK8D,EAAa,UAAWV,EAAKI,KAAMJ,EAAKM,QAHvD,8BAKLvE,EAAOa,KAAK8D,EAAa,aAAcwJ,EAAatI,KAAK,QAE3D7F,EAAOa,KAAK8D,EACV,8CACAU,EAAOO,UAAUwI,OACjB/I,EAAOO,UAAUyI,MACjBhJ,EAAOO,UAAU0I,QAEfjJ,EAAOO,UAAUV,OACnBlF,EAAOa,KAAK,uBAEdb,EAAOa,KAAK,IAEZuL,EAAKvL,KAAK,CACR0G,UAAWlC,EAAOC,SAClBuD,GAAI,IAAgC,EAA1BxD,EAAOO,UAAUwI,OAC3BnF,MAAO,IAAgC,EAA1B5D,EAAOO,UAAUwI,OAC9B9D,MAAO,GAA8B,EAAzBjF,EAAOO,UAAU0I,MAC7B/D,UAAW,EAA6B,EAAzBlF,EAAOO,UAAUyI,MAChC7D,WAAY,GAA8B,EAAzBnF,EAAOO,UAAUyI,MAClC9K,OAAQ,EACR8E,UAAU,EACVnE,MAAOgK,EACPzD,eAAgBpF,EAAOO,UAAUV,UA/CuB,8BAmD5D,MAA0BrC,KAAKC,MAAMkL,GAArC,mBAAO/N,EAAP,KAAesO,EAAf,KACMb,ERjDD,SAAoBzN,EAAQsO,GAC3BtO,KAAU+C,IACdA,EAAe/C,GAAU,IAE3B,IAAMuO,EAAoBxL,EAAe/C,GAEzC,KAAMsO,KAAWC,GAAoB,CACnC,IAAMd,EAAQpK,MACV,YAAmBrD,EAAS,iBAAmBsO,EAAU,SAC7D,IAAK,IAAM7M,KAAKgM,EAAO,CACrB,IAAME,EAAOF,EAAMhM,GACnB,IAAK,IAAM+M,KAAKb,EAAM,CACpB,IAAMrG,EAAYqG,EAAKa,GACnB,WAAYlH,UACPA,EAAS,QAItBiH,EAAkBD,GAAWb,EAG/B,OAAOc,EAAkBD,GQ4BXpK,CAAgBlE,EAAQsO,GAEtCzO,EAAOG,OAAS,EAChBH,EAAOC,SAAU,EACjBD,EAAOE,OAAS,KAChB,IAAM0O,ED5BD,SAAiBtC,EAAMsB,EAAOO,GAEnC,IADA,IAAIU,EAAe,EACVjN,EAAI,EAAGA,EAAIuM,EAASvM,IACK,IAA5B+L,EAAWrB,EAAMsB,IACnBiB,IAGJ,OAAOA,ECqBSC,CAAkBxC,EAAMsB,EAAiB,EAAVO,GAE/CjO,EAAOa,KAAK8D,EAAa,mBAAoB1E,EAAQsO,IACrDvO,EAAOa,KAAK8D,EAAa,mCACAsJ,EAASS,EAAmB,IAAVA,EAAgBT,IAE3DjO,EAAOa,KAAK,wDACZ,IAAMgO,EAAIH,EAAU,EACdI,EAAIb,EAAUS,EAAU,EACxBK,EAAOF,GAAKA,EAAIC,GAChBE,EAAS7N,KAAK8N,KAAKJ,EAAIC,IAAMD,EAAIC,IAAMD,EAAIC,IAAMD,EAAIC,EAAI,KAkB/D,OAjBA9O,EAAOa,KAAK8D,EAAa,0BAA2BxD,KAAK8G,MAAa,IAAP8G,GAAe,KAC9E/O,EAAOa,KAAK8D,EAAa,mBACAxD,KAAK8G,MAAiC,KAA1B8G,EAAOC,EAASA,IAAkB,GAC9C7N,KAAK8G,MAAiC,KAA1B8G,EAAOC,EAASA,IAAkB,KACvEhP,EAAOa,KAAK8D,EAAa,qBACAxD,KAAK8G,MAA0C,KAAnC8G,EAAOC,EAASA,EAASA,IAAkB,GACvD7N,KAAK8G,MAA0C,KAAnC8G,EAAOC,EAASA,EAASA,IAAkB,KAEhFhP,EAAOa,KAAK,kBAEZf,EAAOE,OAAS,GAChBF,EAAOC,SAAU,EACjBC,EAAOa,KAAK,mBAAqB+N,EAAqBxC,EAAMsB,IAC5D/I,EAAa3E,EAAQF,EAAOE,QAC5BF,EAAOC,SAAU,EACjBD,EAAOE,OAAS,KAETA,EAAO6F,KAAK,M,MClFNqJ,MANR,SAAoBzL,GACzB,OACE,qBAAKC,UAAU,aAAf,SAA6BD,EAAME,SCoBxBwL,MArBf,SAAsB1L,GACpB,IAAM2L,EVsDD,WACL,KAAMtP,EAAOG,UAAUiD,GAAuB,CAK5C,IAJA,IAAMgB,EAAQd,IACRgM,EAAY,CAAC,IACbC,EAAkB,GAClBC,EAAoB,GAC1B,MAAmB,CAAC,SAAU,WAA9B,eAA0C,CAArC,IAAMC,EAAI,KACb,IAAK,IAAMtL,KAAQC,EAAMqL,GACnBrL,EAAMqL,GAAMtL,GAAMuL,WACpBH,EAAgBxO,KAAKoD,GAGvBqL,EAAkBzO,KAAKoD,GAG3BoL,EAAgBI,OAChBH,EAAkBG,OAClB9K,EAAayK,EAAWC,GACxBD,EAAUvO,KAAK,IACf8D,EAAayK,EAAWE,GACxBpM,EAAqBpD,EAAOG,QAAUmP,EAExC,OAAOlM,EAAqBpD,EAAOG,QU5EjByP,GAGlB,OACE,sBAAKhM,UAAU,OAAf,UACE,cAAC,EAAD,CACEA,UAAU,YACVE,eAAgBH,EAAMQ,KAAKI,KAC3BR,SAAU,SAAC8L,GAAD,OAAWlM,EAAMmM,cAAcD,EAAMvI,OAAOzD,MAAOF,EAAMQ,KAAKM,OACxET,QAASsL,IAEX,cAAC,EAAD,CACExL,eAAgBH,EAAMQ,KAAKM,KAC3BV,SAAU,SAAC8L,GAAD,OAAWlM,EAAMmM,cAAcnM,EAAMQ,KAAKI,KAAMsL,EAAMvI,OAAOzD,QACvEG,QAbY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,S,OCuB9B+L,MAzBf,SAA2BpM,GACzB,MAAgCmD,mBAAS,IAAzC,mBAAOkJ,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAKrM,UAAU,aAAf,UACE,4EACA,sBAAKA,UAAU,WAAf,UACE,0BAAUA,UAAU,QAAQC,MAAOmM,EAAUjM,SAAU,SAAC8L,GACtD,IAAIK,EAAYrD,EAA4BgD,EAAMvI,OAAOzD,OACvC,OAAdqM,IACFA,EAAYvM,EAAM4B,QAEpB,IAAM4K,EAAY,eAAQxM,EAAM4B,OAAOO,WACvClG,OAAOiM,OAAOsE,EAActD,EAA4BgD,EAAMvI,OAAOzD,QACrEF,EAAMyM,gBAAgBF,EAAU1K,SAAU0K,EAAU9L,MAAO+L,GAC3DF,EAAY,OAEd,wBAAQrM,UAAU,SAASyM,QAAS,WAClCC,UAAUC,UAAUC,UAAU3D,EAA6BlJ,EAAM4B,UADnE,wC,MCNOkL,MAZf,SAAuB9M,GACrB,OACE,uBACEC,UAAU,gBACV6L,KAAK,SACLrE,IAAK,EACLvH,MAAOF,EAAME,MACbE,SAAU,SAAC8L,GAAYlM,EAAM+M,eAAeb,EAAMvI,OAAOzD,QAAU,OC2C1D8M,MAjDf,SAA0BhN,GACxB,OAAO,kDAEL,sBAAKC,UAAU,mBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CAEE,cAAC,EAAD,CACEC,MAAOF,EAAMmC,UAAUwI,OACvBoC,eAAgB,SAACE,GACf,IAAIT,EAAY,eAAQxM,EAAMmC,WAC9BqK,EAAa7B,OAASsC,EACtBjN,EAAMkN,mBAAmBV,SAG/B,yCAEE,cAAC,EAAD,CACEtM,MAAOF,EAAMmC,UAAUyI,MACvBmC,eAAgB,SAACI,GACf,IAAIX,EAAY,eAAQxM,EAAMmC,WAC9BqK,EAAa5B,MAAQuC,EACrBnN,EAAMkN,mBAAmBV,SAG/B,yCAEE,cAAC,EAAD,CACEtM,MAAOF,EAAMmC,UAAU0I,MACvBkC,eAAgB,SAACK,GACf,IAAIZ,EAAY,eAAQxM,EAAMmC,WAC9BqK,EAAa3B,MAAQuC,EACrBpN,EAAMkN,mBAAmBV,YAIjC,yCAEE,uBAAOV,KAAK,WAAWuB,QAASrN,EAAMmC,UAAUV,MAC9CrB,SAAU,SAAC8L,GACT,IAAIM,EAAY,eAAQxM,EAAMmC,WAC9BqK,EAAa/K,MAAQyK,EAAMvI,OAAO0J,QAClCrN,EAAMkN,mBAAmBV,gB,gBCZrC,SAASc,EAAMtN,GACb,IAAMuN,ET9BD,SAAsB3L,GAC3B,IADmC,EAC7B4B,EAAS,CACb3B,SAAUD,EAAOC,SACjBpB,MAAO,GACPmC,wBAAwB,GAJS,cAMhBhB,EAAOnB,OANS,IAMnC,2BAAiC,CAAC,IAAvBD,EAAsB,QACb,KAAdA,EAAKI,MAGT4C,EAAO/C,MAAMrD,KAAKoD,IAVe,8BAYnC,IAAMsD,EAAY,IAAI6C,EAAUnD,GAQhC,OAPAM,EAAUM,YAAY,CAACL,OAAkC,EAA1BnC,EAAOO,UAAUwI,SAChD7G,EAAUK,aAAa,CAACJ,OAAQnC,EAAOO,UAAUyI,QACjD9G,EAAUG,YAAY,CAACF,OAAQnC,EAAOO,UAAU0I,QAChD/G,EAAUiE,aAAa,CACrB/D,OAAQ,KACRP,MAAO,kBAEFK,ESUOA,CAAuB9D,EAAM4B,QAE3C,OACE,sBAAK3B,UAAU,eAAf,UACE,sBAAKA,UAAU,OAAf,UAAsB,iDAAtB,IAAqCsN,EAAM/H,SAC3C,sBAAKvF,UAAU,OAAf,UAAsB,qDAAkBsN,EAAM1G,SAC9C,sBAAK5G,UAAU,OAAf,UAAsB,sDAAmBsN,EAAMzG,UAA/C,IAA2DyG,EAAMxG,iBAKxDyG,MAvCf,SAAuBxN,GACrB,MAAoCmD,oBAAS,GAA7C,mBAAOsK,EAAP,KAAmBC,EAAnB,KAEA,OACE,sBAAKzN,UAAU,gBAAf,UACE,yBAAQA,UAAU,SAASyM,QAAS,kBAAMgB,GAAeD,IAAzD,UACGA,EAAa,cAAC,IAAD,CAAiBE,KAAMC,MAAgB,cAAC,IAAD,CAAiBD,KAAME,MAC3EJ,EAAa,YAAc,UAF9B,kBAICA,EACC,sBAAKxN,UAAU,UAAf,UACE,cAACqN,EAAD,CAAO1L,OAAQ5B,EAAM4B,SACpB5B,EAAM4B,OAAOnB,MAAMnF,KAAI,SAACkF,EAAMzD,GAC7B,MAAkB,KAAdyD,EAAKI,KACA,KAEF,sBAAKX,UAAU,kBAAf,UACL,uBAAMA,UAAU,WAAhB,UAA4BO,EAAKI,KAAjC,IAAwCJ,EAAKM,QAAa,KACzDoI,EAAkC1I,KAFQzD,SAM/C,S,MCsBK+Q,MA5Cf,SAAoB9N,GAKlB,OACE,sBAAKC,UAAU,aAAf,UACE,cAAC,EAAD,CACE2B,OAAQ5B,EAAM4B,OACd6K,gBAAiBzM,EAAMyM,kBAEzB,sBAAKxM,WAV0BA,EAUW,UATrCA,GAAuC,KAA1BD,EAAM4B,OAAOC,SAAkB,YAAc,KAS/D,sBAEE,uBACE5B,UAAU,gBACVC,MAAOF,EAAM4B,OAAOC,SACpBzB,SAAU,SAAC8L,GACTlM,EAAMyM,gBAAgBP,EAAMvI,OAAOzD,MAAOF,EAAM4B,OAAOnB,MAAOT,EAAM4B,OAAOO,cAG9EnC,EAAM4B,OAAOnB,MAAMnF,KAAI,SAACkF,EAAMzD,GAAP,OACtB,cAAC,EAAD,CAEEyD,KAAMA,EACN2L,cAAe,SAACvL,EAAME,GACpB,IAAIiN,EAAQ,YAAO/N,EAAM4B,OAAOnB,OAChCsN,EAAShR,GAAS,CAAE6D,KAAMA,EAAME,KAAM9D,SAAS8D,IAC/Cd,EAAMyM,gBAAgBzM,EAAM4B,OAAOC,SAAUkM,EAAU/N,EAAM4B,OAAOO,aALjEpF,MAST,cAAC,EAAD,CACEoF,UAAWnC,EAAM4B,OAAOO,UACxB+K,mBACE,SAACV,GAAD,OACExM,EAAMyM,gBAAgBzM,EAAM4B,OAAOC,SAAU7B,EAAM4B,OAAOnB,MAAO+L,MAGvE,cAAC,EAAD,CAAe5K,OAAQ5B,EAAM4B,eArCnC,IAAmC3B,G,MC8HtB+N,OA1Hf,WACE,IAAMC,EhBoBD,WACL,IAAMC,EAAmBrO,EAAQ,IAC3BoO,EAAc,GAEdjS,EAAOC,OAAOD,KAAKkS,GACzBlS,EAAKgQ,OAAOmC,UACZ,cAAqBnS,EAArB,eAA2B,CAAtB,IAAsB,EAAhBQ,EAAM,KAAU,cACH0R,EAAiB1R,IADd,IACzB,2BAAgD,CAAC,IAAtCsO,EAAqC,QAC9CmD,EAAY7Q,KAAKgC,KAAKE,UAAU,CAACtC,SAASR,GAASsO,MAF5B,+BAK3B,OAAOmD,EgB/BavN,GACpB,EAA8B0N,EAA2C,UAAW,KAApF,mBAAO5D,EAAP,KAAgB6D,EAAhB,KACA,EAA8CD,EAC5C,kBACAH,EAAY,IAFd,mBAAO1D,EAAP,KAAwB+D,EAAxB,KAGA,EAAoCnL,mBAAS,gFAA7C,mBAAOoL,EAAP,KAAmBC,EAAnB,KACA,EAAgCrL,mBAAS,IAAzC,mBAAOkJ,EAAP,KAAiBC,EAAjB,KAEA,EAA8B8B,EAA2C,UAAW,CAClFK,IACAA,IACAA,IACAA,IACAA,MALF,mBAAOnE,EAAP,KAAgBoE,EAAhB,KAQA,SAASD,IACP,MAAO,CACL5M,SAAU,GACVpB,MAAO,CAiCF,CAAEG,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,IA3BvBqB,UAAW,CACTwI,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPpJ,OAAO,IAmCb,OACE,sBAAKxB,UAAU,YAAf,UACE,wBAAQyM,QAAS,WblDdzJ,aAAa0L,QaoDd3L,OAAO4L,SAASC,UAFlB,yBAIA,uBALF,+BAOE,0BAAU3O,MAAOmM,EAAUjM,SAAU,SAAC8L,GACpC,IAAM4C,EAvCZ,SAAsBzN,GACpB,IAAKA,EAAMG,WAAW,mBACpB,OAAO,KAET,IAJ2B,EAIrB8I,EAAU,GAJW,cAKHjJ,EAAM1C,MAAM,uBALT,IAK3B,2BAA2D,CAAC,IAAjDoQ,EAAgD,QACnDxC,EAvBD,CACL1K,SAAU,GACVpB,MAAO,CAiCF,CAAEG,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,IA3BvBqB,UAAW,CACTwI,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPpJ,OAAO,IAYTxF,OAAOiM,OAAOqE,EAAWrD,EAA4B6F,IACrD9S,OAAOiM,OAAOqE,EAAUpK,UAAW+G,EAA4B6F,IAC/DzE,EAAQlN,KAAKmP,IATY,8BAW3B,KAAOjC,EAAQ1L,OAAS,GACtB0L,EAAQlN,KA7BH,CACLyE,SAAU,GACVpB,MAAO,CAiCF,CAAEG,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,GAAlB,CAAEF,KAAM,GAAIE,KAAM,IA3BvBqB,UAAW,CACTwI,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPpJ,OAAO,KAmBX,OAAO6I,EAyBc0E,CAAa9C,EAAMvI,OAAOzD,OAC1B,OAAb4O,GACFJ,EAAWI,GAEbxC,EAAY,OAEd,uBACA,wBAAQI,QAAS,WACfC,UAAUC,UAAUC,UdFrB,SAA0BvC,GAC/B,IADwC,EAClC/N,EAAS,CAAC,mBADwB,cAEnB+N,GAFmB,IAExC,2BAA8B,CAAC,IAApB1I,EAAmB,QAC5BrF,EAAOa,KAAK6E,EAAgBL,IAC5BrF,EAAOa,KAAK,uBAJ0B,8BAOxC,OADAb,EAAO0S,MACA1S,EAAO6F,KAAK,McLiB8G,CAA8BoB,KAD9D,uCAGA,uBACA,qBAAKrK,UAAU,QAAf,SACGqK,EAAQhP,KAAI,SAACsG,EAAQ7E,GAAT,OACX,cAAC,EAAD,CAEE6E,OAAQA,EACR6K,gBAAiB,SAAC5K,EAAUpB,EAAO0B,GACjC,IAAI+M,EAAU,YAAO5E,GACrB4E,EAAWnS,GAAS,CAClB8E,SAAUA,EACVpB,MAAOA,EACP0B,UAAWA,GAEbuM,EAAWQ,KATRnS,QAtBb,qBAqCE,cAAC,EAAD,CACEoD,eAAgBoK,EAChBnK,SAAU,SAAC8L,GAAYoC,EAAmBpC,EAAMvI,OAAOzD,QACvDG,QAAS4N,IAEX,uBA1CF,kBA4CE,uBAAOnC,KAAK,SAASrE,IAAK,EAAGvH,MAAOsK,EAASpK,SAAU,SAAC8L,GACtDmC,EAAWrR,SAASkP,EAAMvI,OAAOzD,WAEnC,uBACA,wBAAQwM,QA1DZ,WACE,IACE,IAAMnQ,EAAS8N,EAAWC,EAASC,EAAiBC,GACpDgE,EAAcjS,GACd,MAAM4S,GACNX,EAActN,EAAa,6BAA8BiO,EAAIC,YAqD7D,sBAGA,cAAC,EAAD,CAAYlP,MAAOqO,Q,MCjHVc,OAZf,WACE,OACE,sBAAKpP,UAAU,MAAf,UACE,iEACA,8BAAK,mFACL,8BAAK,4BAAG,wFACR,wEACA,cAAC,GAAD,QCNNqP,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.67bac097.chunk.js","sourcesContent":["var map = {\n\t\"./season_2/items/energy_items.json\": 16,\n\t\"./season_2/items/passive_items.json\": 17,\n\t\"./season_2/mobs/dungeon_0.json\": 32,\n\t\"./season_2/mobs/dungeon_1.json\": 33,\n\t\"./season_2/mobs/dungeon_10.json\": 34,\n\t\"./season_2/mobs/dungeon_2.json\": 35,\n\t\"./season_2/mobs/dungeon_3.json\": 36,\n\t\"./season_2/mobs/dungeon_4.json\": 37,\n\t\"./season_2/mobs/dungeon_5.json\": 38,\n\t\"./season_2/mobs/dungeon_6.json\": 39,\n\t\"./season_2/mobs/dungeon_7.json\": 40,\n\t\"./season_2/mobs/dungeon_8.json\": 41,\n\t\"./season_2/mobs/dungeon_9.json\": 42,\n\t\"./season_2/mobs/summon_templates.json\": 18,\n\t\"./season_3/items/energy_items.json\": 19,\n\t\"./season_3/items/passive_items.json\": 20,\n\t\"./season_3/mobs/dungeon_0.json\": 43,\n\t\"./season_3/mobs/dungeon_1.json\": 44,\n\t\"./season_3/mobs/dungeon_10.json\": 45,\n\t\"./season_3/mobs/dungeon_11.json\": 46,\n\t\"./season_3/mobs/dungeon_2.json\": 47,\n\t\"./season_3/mobs/dungeon_3.json\": 48,\n\t\"./season_3/mobs/dungeon_4.json\": 49,\n\t\"./season_3/mobs/dungeon_5.json\": 50,\n\t\"./season_3/mobs/dungeon_6.json\": 51,\n\t\"./season_3/mobs/dungeon_7.json\": 52,\n\t\"./season_3/mobs/dungeon_8.json\": 53,\n\t\"./season_3/mobs/dungeon_9.json\": 54,\n\t\"./season_3/mobs/summon_templates.json\": 21,\n\t\"./season_4/items/energy_items.json\": 22,\n\t\"./season_4/items/passive_items.json\": 23,\n\t\"./season_4/mobs/dungeon_0.json\": 55,\n\t\"./season_4/mobs/dungeon_1.json\": 56,\n\t\"./season_4/mobs/dungeon_10.json\": 57,\n\t\"./season_4/mobs/dungeon_11.json\": 58,\n\t\"./season_4/mobs/dungeon_2.json\": 59,\n\t\"./season_4/mobs/dungeon_3.json\": 60,\n\t\"./season_4/mobs/dungeon_4.json\": 61,\n\t\"./season_4/mobs/dungeon_5.json\": 62,\n\t\"./season_4/mobs/dungeon_6.json\": 63,\n\t\"./season_4/mobs/dungeon_7.json\": 64,\n\t\"./season_4/mobs/dungeon_8.json\": 65,\n\t\"./season_4/mobs/dungeon_9.json\": 66,\n\t\"./season_4/mobs/summon_templates.json\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31;","var map = {\n\t\"./season_2/items/passive_items.json\": 17,\n\t\"./season_3/items/passive_items.json\": 20,\n\t\"./season_4/items/passive_items.json\": 23\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;","var map = {\n\t\"./season_2/items/energy_items.json\": 16,\n\t\"./season_3/items/energy_items.json\": 19,\n\t\"./season_4/items/energy_items.json\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 69;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 18,\n\t\"./season_3/mobs/summon_templates.json\": 21,\n\t\"./season_4/mobs/summon_templates.json\": 24\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70;","export const global = {\r\n  verbose: false,\r\n  output: null,\r\n  season: 4\r\n}\r\n","import { global } from './global.js'\r\n\r\nexport function format() {\r\n  const args = arguments;\r\n  return args[0].replace(/{(\\d+)}/g, function(match, number) {\r\n      const index = parseInt(number) + 1;\r\n      return typeof[args[index]] !== 'undefined'\r\n        ? args[index]\r\n        : match;\r\n  });\r\n}\r\n\r\nexport function log() {\r\n  if (!global.verbose && global.output === null) {\r\n    return;\r\n  }\r\n  const toLog = typeof arguments[0] === 'string'\r\n      ? format(...arguments)\r\n      : arguments[0];\r\n  if (global.verbose) {\r\n    console.log(toLog);\r\n  }\r\n  if (global.output !== null) {\r\n    global.output.push(toLog);\r\n  }\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key === null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  var selected = null;\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    var weight;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(currentValue);\r\n    } else if (weightKey === null) {\r\n      weight = typeof currentValue === 'number' ? currentValue : 1;\r\n    } else if (weightKey in currentValue) {\r\n      weight = currentValue[weightKey];\r\n    }\r\n    total += weight\r\n    if(withProbability(weight / total)) {\r\n      selected = currentValue;\r\n    }\r\n  }\r\n  return selected;\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function evalThreeFunctions(expr) {\r\n  if (expr.match(/^-?\\d+$/) !== null) {\r\n    return parseInt(expr);\r\n  }\r\n\r\n  const splitPlus = expr.split('+');\r\n  if (splitPlus.length > 1) {\r\n    var total = 0;\r\n    for (const val of splitPlus) {\r\n      total += evalThreeFunctions(val);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  const splitMinus = expr.split('-');\r\n  if (splitMinus.length > 1) {\r\n    var negTotal = null;\r\n    for (const val of splitMinus) {\r\n      if (negTotal === null) {\r\n        negTotal = val === '' ? 0 : evalThreeFunctions(val);\r\n        continue;\r\n      }\r\n      negTotal -= evalThreeFunctions(val);\r\n    }\r\n    return negTotal;\r\n  }\r\n\r\n  var product = 1;\r\n  const splitMult = expr.split('*');\r\n  for (const val of splitMult) {\r\n    product *= parseInt(val);\r\n  }\r\n  return product;\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","import { global } from './global.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require(\r\n        './data/season_' + season + '/mobs/dungeon_' + dungeon + '.json');\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getDungeonList() {\r\n  const dungeonsBySeason = require('./data/dungeons.json');\r\n  const dungeonList = [];\r\n\r\n  const keys = Object.keys(dungeonsBySeason);\r\n  keys.sort().reverse();\r\n  for (const season of keys) {\r\n    for (const dungeon of dungeonsBySeason[season]) {\r\n      dungeonList.push(JSON.stringify([parseInt(season), dungeon]));\r\n    }\r\n  }\r\n  return dungeonList;\r\n}\r\n\r\nexport function getItems() {\r\n  if (!(global.season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[global.season] = {\r\n      passive: require(\r\n          './data/season_' + global.season + '/items/passive_items.json'),\r\n      energy: require(\r\n          './data/season_' + global.season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank() {\r\n  if (!(global.season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems();\r\n    const itemNames = [''];\r\n    const obtainableItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['energy', 'passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item].obtainable) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    unobtainableItems.sort();\r\n    utils.extend(itemNames, obtainableItems);\r\n    itemNames.push('');\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[global.season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getTemplates() {\r\n  if (!(global.season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[global.season] = require(\r\n        './data/season_' + global.season + '/mobs/summon_templates.json');\r\n  }\r\n  return TEMPLATES_BY_SEASON[global.season];\r\n}\r\n","function Dropdown(props) {\r\n  return (\r\n    <select className={props.className} value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option, index) => <option key={index}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;\r\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nfunction formatDescriptionWithTier(description, tier) {\r\n  const re = /\\{([\\dt+\\-*]+)\\}/;\r\n  var current = description;\r\n  var m = current.match(re);\r\n  while (m != null) {\r\n    current = current.replace(\r\n        m[0],\r\n        utils.evalThreeFunctions(m[1].replace('t', tier))\r\n    );\r\n    m = current.match(re);\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function getDescriptionOfItem(item) {\r\n  const items = data.getItems();\r\n  const itemData = item.name in items.passive ?\r\n    items.passive[item.name] :\r\n    items.energy[item.name];\r\n  if (typeof itemData === 'undefined') {\r\n    return '';\r\n  }\r\n  return formatDescriptionWithTier(itemData.description, item.tier);\r\n}\r\n\r\nexport function parseMonuments(input) {\r\n  const monumentLevels = {};\r\n  for (const line of input.split('\\n')) {\r\n    if (line.startsWith('BDSM:Angel:')) {\r\n      monumentLevels.Angel = line[line.length - 1] !== '0';\r\n      continue;\r\n    }\r\n    const matches = line.match(/\\|\\s*(Health|Power|Speed)\\s*\\|\\s*(\\d+)\\s*\\|/);\r\n    if (matches === null) {\r\n      continue;\r\n    }\r\n    monumentLevels[matches[1]] = parseInt(matches[2]);\r\n  }\r\n  return monumentLevels;\r\n}\r\n\r\nexport function parseInventory(input) {\r\n  const player = {username: '', items: []};\r\n  var empty = true;\r\n  for (const line of input.split('\\n')) {\r\n    const matchUsername = line.match(/([^*]*)'s Inventory/);\r\n    const matchItem = line.match(\r\n        /\\d-\\s(_{0,2}<?[\\w\\d:]+>?)?\\s([\\w'\\s]+)\\s(\\d+)_{0,2}:/);\r\n    if (matchUsername !== null) {\r\n      empty = false;\r\n      player.username = matchUsername[1];\r\n    }\r\n    if (matchItem !== null) {\r\n      empty = false;\r\n      player.items.push({name: matchItem[2], tier: parseInt(matchItem[3])});\r\n    }\r\n  }\r\n  if (empty) {\r\n    return null;\r\n  }\r\n  if (player.items.length > 4) {\r\n    return null;\r\n  }\r\n  for (var i = player.items.length; i < 4; i++) {\r\n    player.items.push({name: '', tier: 1});\r\n  }\r\n  return player;\r\n}\r\n\r\nexport function serializePlayer(player) {\r\n  const output = [];\r\n  output.push(utils.format(\"{0}'s Inventory\", player.username));\r\n  for (const item of player.items) {\r\n    output.push(utils.format('1-  {0} {1}:', item.name, item.tier));\r\n  }\r\n  for (const monument in player.monuments) {\r\n    if (monument === 'Angel') {\r\n      output.push(utils.format('BDSM.Angel.{0}',\r\n                               player.monuments.Angel ? '1' : '0'));\r\n      continue;\r\n    }\r\n    output.push(utils.format('|{0}|{1}|',\r\n                             monument,\r\n                             player.monuments[monument]));\r\n  }\r\n  return output.join('\\n');\r\n}\r\n\r\nexport function serializePlayers(players) {\r\n  const output = ['BDSM.partyStart'];\r\n  for (const player of players) {\r\n    output.push(serializePlayer(player));\r\n    output.push('BDSM.playerDivider');\r\n  }\r\n  output.pop();\r\n  return output.join('\\n');\r\n}\r\n\r\nfunction _mutateTemplate(template, scale) {\r\n  if (typeof template != 'object') {\r\n    return template;\r\n  }\r\n\r\n  if ('base' in template && 'scaling' in template) {\r\n    return template.base + template.scaling * scale;\r\n  }\r\n\r\n  // recursive check\r\n  for (const key in template) {\r\n    template[key] = _mutateTemplate(template[key], scale);\r\n  }\r\n  return template;\r\n}\r\n\r\nexport function getScaledTemplate(template, scale) {\r\n  const obj = utils.deepCopyJson(template);\r\n  _mutateTemplate(obj, scale);\r\n  obj.processedInitCharacter = false;\r\n  return obj;\r\n}\r\n","import { useState } from 'react';\n\nexport function setItem(key, value) {\n  return window.localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getItem(key) {\n  if (window.localStorage.getItem(key) === null) {\n    return null;\n  }\n  return JSON.parse(window.localStorage.getItem(key));\n}\n\nexport function useStateWithLocalStorage(key, defaultState) {\n  var startingState = getItem(key);\n  if (startingState === null) {\n    startingState = defaultState;\n  }\n\n  const [value, setValueHelper] = useState(startingState);\n  function setValue(newValue) {\n    setValueHelper(newValue);\n    setItem(key, newValue);\n  }\n  return [value, setValue];\n}\n\nexport function clear() {\n  return localStorage.clear();\n}\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst ABILITY_FOR_ITEM = {\r\n  'Avalanche': avalanche,\r\n  'BF Cannon': bfCannon,\r\n  'Big Club': bigClub,\r\n  'Boosting Bugle': boostingBugle,\r\n  'Chumby Chicken': chumbyChicken,\r\n  'Challenger Arrow': challengerArrow,\r\n  'Chicken Dinner': chickenDinner,\r\n  'Cleansed Tome': cleansedTome,\r\n  'Cleansing Flames': cleansingFlames,\r\n  'Draining Dagger': drainingDagger,\r\n  'Energetic Ally': energeticAlly,\r\n  'Explosion Powder': explosionPowder,\r\n  'Festive Feast': festiveFeast,\r\n  'Fire Sword': fireSword,\r\n  'Freezeman': freezeman,\r\n  'Halberd': halberd,\r\n  'Healing Pendant': healingPendant,\r\n  'Imp Whistle': impWhistle,\r\n  'Knight\\'s Lance': knightsLance,\r\n  'Last Resort': lastResort,\r\n  'Love Letter': loveLetter,\r\n  'Machete': machete,\r\n  'Magic Parasol': magicParasol,\r\n  'Martyr Armor': martyrArmor,\r\n  'Pet Imp': petImp,\r\n  'Poison Dagger': poisonDagger,\r\n  'Quickening Death': quickeningDeath,\r\n  'Quickening Death: Focused': quickeningDeathFocused,\r\n  'Rock Companion': rockCompanion,\r\n  'Rough Skin': roughSkin,\r\n  'Rousing Death': rousingDeath,\r\n  'Seeking Missiles': seekingMissiles,\r\n  'Survival Kit': survivalKit,\r\n  'Thorns': thorns,\r\n  'Trusty Steed': trustySteed,\r\n  'Whirlwind Axe': whirlwindAxe\r\n}\r\n\r\nexport function useItemAbility(params) {\r\n  if (params.item.name in data.getItems().energy && !_checkEnergy(params)) {\r\n    return;\r\n  }\r\n  return ABILITY_FOR_ITEM[params.item.name](params);\r\n}\r\n\r\nfunction _checkEnergy(params) {\r\n  const originalEnergy = params.character.energy;\r\n  const cost = data.getItems().energy[params.item.name].cost;\r\n  if (originalEnergy < cost) {\r\n    return false;\r\n  }\r\n  utils.log('Activating {0}', params.item.name);\r\n  params.character.changeEnergy({amount: -cost});\r\n  return true;\r\n}\r\n\r\nfunction _throwInvalidPhaseError(params) {\r\n  throw Error(utils.format('InternalError: Item {0} does not have phase {1}',\r\n                           params.item.name, params.phase));\r\n}\r\n\r\nfunction avalanche(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const tier = params.item.tier;\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(enemyTeam);\r\n        target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 5 * tier),\r\n          battle: params.battle\r\n        });\r\n        target.changeSpeed({\r\n          amount: -utils.pickRandomWithinRange(0, tier)\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bfCannon(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: 6 + 6 * tier});\r\n      params.character.changeHpMax({amount: 7 * tier});\r\n      params.character.changeHp({amount: 7 * tier});\r\n      break;\r\n    }\r\n    case 'SkipTurn': {\r\n      if (params.character.usedCannon) {\r\n        utils.log('Activating {0}: Skipping Turn', params.item.name);\r\n        params.character.usedCannon = false;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    case 'PostDamage': {\r\n      params.character.usedCannon = true;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bigClub(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activated {0}', params.item.name);\r\n      params.damageFinal += Math.round(1.5 * params.damageBase);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction boostingBugle(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      const allyTeam = params.allyTeam;\r\n      if (allyTeam.length === 1) {\r\n        break;\r\n      }\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(\r\n            allyTeam,\r\n            (c) => {\r\n              if (c.summoned) {\r\n                return 0;\r\n              }\r\n              if (c.character === params.character.character) {\r\n                return 0;\r\n              }\r\n              return 1;\r\n            }\r\n        );\r\n        if (target === null) {\r\n          break;\r\n        }\r\n        target.changeHp({amount: tier + tier});\r\n        target.changeAttack({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chumbyChicken(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeamIndex = params.allyTeamIndex;\r\n      if (params.character.character in params.battle.summonedChicken) {\r\n        break;\r\n      }\r\n      params.battle.summonedChicken[params.character.character] = 0;\r\n      params.battle.addSummonToTeam(params.item, allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction challengerArrow(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const target = params.character.pickTargetUsingItems(params.enemyTeam);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: 10 * tier,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeAttack({amount: 2*tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chickenDinner(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeHp({amount: 1 + 2 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleansedTome(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const amount = 5 * tier;\r\n      params.character.changeHpMax({amount: amount});\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    case 'PostTarget': {\r\n      const damageAmount = tier;\r\n      if (damageAmount >= params.character.hp) {\r\n        utils.log('Not activating {0}: not enough HP', params.item. name);\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      const allyTeam = params.allyTeam;\r\n      var target = {hp: Infinity};\r\n      var targetIsMaxHp = true;\r\n      for (const ally of allyTeam) {\r\n        if (ally.summoned) {\r\n          continue;\r\n        }\r\n        const allyIsMaxHp = ally.hp === ally.hpMax;\r\n        if (allyIsMaxHp && !targetIsMaxHp) {\r\n          continue;\r\n        }\r\n        if (ally.hp >= target.hp) {\r\n          continue;\r\n        }\r\n        target = ally;\r\n        targetIsMaxHp = allyIsMaxHp;\r\n      }\r\n      if (target.hp === Infinity) {\r\n        break;\r\n      }\r\n      params.character.changeHp({amount: -damageAmount});\r\n      target.changeHp({amount: 3 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleansingFlames(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      const allyTeam = params.allyTeam;\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const ally of allyTeam) {\r\n        ally.changeHp({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drainingDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.changeAttack({amount: -tier});\r\n      if (utils.withProbability(0.2)) {\r\n        params.currentTarget.changeEnergy({amount: -tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction energeticAlly(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      const allyTeam = params.allyTeam;\r\n      var target = {hp: Infinity};\r\n      var targetIsMaxHp = true;\r\n      for (const ally of allyTeam) {\r\n        if (ally.summoned) {\r\n          continue;\r\n        }\r\n        const allyIsMaxHp = ally.hp === ally.hpMax;\r\n        if (allyIsMaxHp && !targetIsMaxHp) {\r\n          continue;\r\n        }\r\n        if (ally.hp >= target.hp) {\r\n          continue;\r\n        }\r\n        target = ally;\r\n        targetIsMaxHp = allyIsMaxHp;\r\n      }\r\n      if (target.hp === Infinity) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: 5 * tier});\r\n      target.changeEnergy({amount: 20});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction explosionPowder(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        const target = enemyTeam[Object.keys(enemyTeam)[0]];\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 20 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      for (const enemy of enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(5 * tier, 10 * tier),\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction festiveFeast(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: 3 * tier,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        ally.changeHp({amount: 3 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction fireSword(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var attackIncrease = 0;\r\n      for (var i = 0; i < tier; i++) {\r\n        if (!utils.withProbability(0.3)) {\r\n          continue;\r\n        }\r\n        attackIncrease++;\r\n      }\r\n      params.character.changeAttack({amount: attackIncrease});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction freezeman(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeSpeed({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction halberd(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: tier + tier});\r\n      params.character.changeHpMax({amount: 4 * tier});\r\n      params.character.changeHp({amount: 4 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction healingPendant(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHp({amount: 5 * tier});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction impWhistle(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction knightsLance(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const target = utils.pickRandom(enemyTeam);\r\n      if (params.character.hp === params.character.hpMax) {\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 14 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: amount,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction lastResort(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      if (params.source === null) {\r\n        break;\r\n      }\r\n      params.source.takeDamage({\r\n        amount: 10 * tier,\r\n        battle: params.battle,\r\n        source: params.character\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction loveLetter(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const allyTeam = params.allyTeam;\r\n      const target = utils.pickRandom(\r\n          allyTeam,\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction machete(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(\r\n          enemyTeam,\r\n          (c) => {\r\n            if (c.character === params.currentTarget.character) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 4 * tier),\r\n          battle: params.battle\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction magicParasol(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.17 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - 2 - 3 * tier);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction martyrArmor(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.66)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      const target = utils.pickRandom(\r\n          params.battle.teams[\r\n              params.battle.getTeamOf[params.character.character]\r\n          ],\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction petImp(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      if (params.battle === null) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction poisonDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHpMax({amount: 3 * tier});\r\n      params.character.changeHp({amount: 3 * tier});\r\n      break;\r\n    }\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.poison += tier;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeSpeed({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeathFocused(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(params.allyTeam, (c) => {\r\n        if (c.character === params.character.character) {\r\n          return 0;\r\n        }\r\n        return 1;\r\n      });\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeSpeed({amount: 5 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rockCompanion(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      if (params.battle === null) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction roughSkin(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - tier - tier);\r\n      params.source.changeHp({amount: -tier - tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rousingDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeEnergy({amount: 10 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction seekingMissiles(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Target': {\r\n      var target = {hp: Infinity};\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.hp < target.hp) {\r\n          target = enemy;\r\n        }\r\n      }\r\n      if (target.hp === Infinity) {\r\n        throw Error('InternalError: No target in enemy team');\r\n      }\r\n      utils.log('{0} selected target {1}', params.item.name, target.character);\r\n      params.currentTarget = target;\r\n      break;\r\n    }\r\n    case 'PreDamage': {\r\n      const missingHpProportion =\r\n          1 - params.currentTarget.hp / params.currentTarget.hpMax;\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damageFinal += Math.floor(5 * missingHpProportion * tier);\r\n      break;\r\n    }\r\n    case 'Kill': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHp({amount: 6 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction survivalKit(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const amount = 20 * tier;\r\n      params.character.changeHpMax({amount: amount});\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction thorns(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var addedEnergy = false;\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: tier,\r\n            battle: params.battle\r\n        });\r\n        if (addedEnergy) {\r\n          continue;\r\n        }\r\n        if (!utils.withProbability(0.25)) {\r\n          continue;\r\n        }\r\n        params.character.changeEnergy({amount: tier});\r\n        addedEnergy = true;\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction trustySteed(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      if (params.battle === null) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction whirlwindAxe(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.character === params.currentTarget.character) {\r\n          continue;\r\n        }\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: params.damageBase,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n","import * as data from './data.js';\r\nimport * as items from './items.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function getBaseStats(player) {\r\n  const params = {\r\n    username: player.username,\r\n    items: [],\r\n    processedInitCharacter: false\r\n  }\r\n  for (const item of player.items) {\r\n    if (item.name === '') {\r\n      continue;\r\n    }\r\n    params.items.push(item);\r\n  }\r\n  const character = new Character(params);\r\n  character.changeHpMax({amount: player.monuments.Health * 5});\r\n  character.changeAttack({amount: player.monuments.Power});\r\n  character.changeSpeed({amount: player.monuments.Speed});\r\n  character.triggerPhase({\r\n    battle: null,\r\n    phase: 'InitCharacter'\r\n  });\r\n  return character;\r\n}\r\n\r\nfunction _extractParam(params, param, defaultValue) {\r\n  if (param in params) {\r\n    return params[param];\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nexport class Character {\r\n  constructor(params) {\r\n    this.character = _extractParam(params, 'character', 'Unknown');\r\n    this.hpMax = _extractParam(params, 'hpMax', 100);\r\n    this.hp = _extractParam(params, 'hp', this.hpMax);\r\n    this.speed = _extractParam(params, 'speed', 10);\r\n    this.attackLow = _extractParam(params, 'attackLow', 1);\r\n    this.attackHigh = _extractParam(params, 'attackHigh', 10);\r\n    this.energy = _extractParam(params, 'energy', 0);\r\n    this.summoned = _extractParam(params, 'summoned', false);\r\n    this.items = _extractParam(params, 'items', []);\r\n\r\n    this.angelAvailable = _extractParam(params, 'angelAvailable', false);\r\n    this.canBeSaved = _extractParam(params, 'canBeSaved', true);\r\n    this.poison = _extractParam(params, 'poison', 0);\r\n    this.usedCannon = _extractParam(params, 'usedCannon', false);\r\n    this._preprocessTriggers();\r\n    this.processedInitCharacter =\r\n        _extractParam(params, 'processedInitCharacter', true);\r\n  }\r\n\r\n  _preprocessTriggers() {\r\n    if ('triggers' in this) {\r\n      return;\r\n    }\r\n    const allItems = data.getItems();\r\n    const triggers = {};\r\n    for (const item of this.items) {\r\n      const triggerTypes = item.name in allItems.energy\r\n          ? allItems.energy[item.name].triggers\r\n          : allItems.passive[item.name].triggers;\r\n      for (const triggerType of triggerTypes) {\r\n        if (!(triggerType in triggers)) {\r\n          triggers[triggerType] = [item];\r\n          continue;\r\n        }\r\n        triggers[triggerType].push(item);\r\n      }\r\n    }\r\n    this.triggers = triggers;\r\n  }\r\n\r\n  deepCopy() {\r\n    const params = utils.deepCopyJson(this);\r\n    return new Character(params);\r\n  }\r\n\r\n  changeHpMax(params) {\r\n    const originalHpMax = this.hpMax;\r\n    this.hpMax += params.amount;\r\n    utils.log('{0} max hp changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalHpMax, this.hpMax);\r\n  }\r\n\r\n  changeHp(params) {\r\n    const originalHp = this.hp;\r\n    if (originalHp <= 0 && params.amount > 0) {\r\n      // Dead characters cannot be healed\r\n      return;\r\n    }\r\n    this.hp = Math.min(this.hp + params.amount, this.hpMax);\r\n    utils.log('{0} hp changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalHp, this.hp);\r\n  }\r\n\r\n  changeSpeed(params) {\r\n    const originalSpeed = this.speed;\r\n    this.speed = Math.max(this.speed + params.amount, 1);\r\n    utils.log('{0} speed changed by {1}: {2} -> {3}',\r\n              this.character, params.amount, originalSpeed, this.speed);\r\n  }\r\n\r\n  changeAttack(params) {\r\n    const originalAttackLow = this.attackLow;\r\n    const originalAttackHigh = this.attackHigh;\r\n    const amountToGain = Math.max(-originalAttackLow, params.amount);\r\n    this.attackLow += amountToGain;\r\n    this.attackHigh += amountToGain;\r\n    utils.log('{0} attack changed by {1}: {2} -> {3}',\r\n              this.character,\r\n              params.amount,\r\n              [originalAttackLow, originalAttackHigh],\r\n              [this.attackLow, this.attackHigh]);\r\n  }\r\n\r\n  changeEnergy(params) {\r\n    const originalEnergy = this.energy;\r\n    this.energy = Math.max(this.energy + params.amount, 0);\r\n    utils.log('{0} energy changed by {1}: {2} -> {3}',\r\n              this.character,\r\n              params.amount,\r\n              originalEnergy,\r\n              this.energy);\r\n  }\r\n\r\n  takeDamage(params) {\r\n    const phaseParams = {\r\n        battle: params.battle,\r\n        damage: params.amount,\r\n        phase: 'EnemyDamage',\r\n        source: params.source\r\n    };\r\n    this.triggerPhase(phaseParams);\r\n    this.changeHp({\r\n        amount: -phaseParams.damage\r\n    });\r\n    if (this.hp > 0) {\r\n      return;\r\n    }\r\n    const allyTeamIndex = params.battle.getTeamOf[this.character];\r\n    this.triggerPhase({\r\n      allyTeam: params.battle.teams[allyTeamIndex],\r\n      allyTeamIndex: allyTeamIndex,\r\n      battle: params.battle,\r\n      character: this,\r\n      phase: 'Death',\r\n      source: params.source\r\n    });\r\n    if (this.character !== params.battle.activeCharacter.character) {\r\n      params.battle.activeCharacter.triggerPhase({\r\n        phase: 'Kill'\r\n      });\r\n    }\r\n  }\r\n\r\n  triggerPhase(params) {\r\n    if (!(params.phase in this.triggers)) {\r\n      return false;\r\n    }\r\n    if (params.phase === 'InitCharacter' && this.processedInitCharacter) {\r\n      return false;\r\n    }\r\n\r\n    params.character = this;\r\n    var ret = false;\r\n    for (const item of this.triggers[params.phase]) {\r\n      if (items.useItemAbility(Object.assign(params, {\r\n            item: item\r\n        })) === true) {\r\n        ret = true;\r\n      }\r\n    }\r\n    if (params.phase === 'InitCharacter') {\r\n      this.processedInitCharacter = true;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  pickTargetUsingItems(enemyTeam) {\r\n    const params = {\r\n        currentTarget: utils.pickRandom(enemyTeam),\r\n        enemyTeam: enemyTeam,\r\n        phase: 'Target'\r\n    };\r\n\r\n    this.triggerPhase(params);\r\n    return params.currentTarget;\r\n  }\r\n}\r\n\r\nCharacter.prototype.toString = function() {\r\n  return this.character;\r\n}\r\n","import {Character} from './character.js';\r\nimport * as data from './data.js';\r\nimport * as utils from './utils.js';\r\nimport * as dungeonUtils from './dungeonUtils.js';\r\n\r\nfunction _findPositionWithinTeam(name, team) {\r\n  for (const position in team) {\r\n    const c = team[position];\r\n    if (c.character === name) {\r\n      return position;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n\r\nexport class Battle {\r\n  constructor(team1, team2) {\r\n    this.summonedChicken = {};\r\n    this.initTeams([team1, team2]);\r\n  }\r\n\r\n  initTeams(teams) {\r\n    this.teams = [[], []];\r\n    this.allCharacters = {};\r\n    this.getTeamOf = {};\r\n    for (const teamIndex in teams) {\r\n      const team = teams[teamIndex];\r\n      for (const i in team) {\r\n        this.addCopyOfCharacterToTeam(team[i], teamIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  addCharacterToTeam(character, teamIndex) {\r\n    var name = character.character;\r\n    const originalName = name;\r\n    var copyNum = 1;\r\n    while (name in this.allCharacters) {\r\n      copyNum++;\r\n      name = originalName + ' ' + copyNum;\r\n    }\r\n    character.character = name;\r\n    this.getTeamOf[name] = teamIndex;\r\n    this.allCharacters[name] = character;\r\n    character.triggerPhase({\r\n        allyTeamIndex: teamIndex,\r\n        battle: this,\r\n        character: character,\r\n        phase: 'InitCharacter'\r\n    });\r\n    this.teams[teamIndex].push(character);\r\n  }\r\n\r\n  addCopyOfCharacterToTeam(character, teamIndex) {\r\n    const toAdd = new Character(character);\r\n    this.addCharacterToTeam(toAdd, teamIndex);\r\n  }\r\n\r\n  addSummonToTeam(item, teamIndex) {\r\n    const template = data.getTemplates()[item.name];\r\n    const summon = new Character(dungeonUtils.getScaledTemplate(template, item.tier));\r\n    utils.log('Summoning {0} for team {1}', summon.character, teamIndex);\r\n    this.addCharacterToTeam(summon, teamIndex);\r\n  }\r\n\r\n  kill(character) {\r\n    const name = character.character;\r\n    if (character.angelAvailable) {\r\n      utils.log('reviving {0} with angel invite', name);\r\n      character.hp = Math.round(character.hpMax * 0.33);\r\n      character.angelAvailable = false;\r\n      return;\r\n    }\r\n    utils.log('killing: {0}', name);\r\n    const team = this.teams[this.getTeamOf[name]];\r\n    const pos = _findPositionWithinTeam(name, team);\r\n    if (pos < 0) {\r\n      throw Error(utils.format('InternalError: {0} is not in team {1}',\r\n                               name, team));\r\n    }\r\n    delete this.allCharacters[name];\r\n    delete this.getTeamOf[name];\r\n    team.splice(pos, 1);\r\n    if (name in this.summonedChicken) {\r\n      delete this.summonedChicken[name];\r\n    }\r\n  }\r\n\r\n  changeAllEnergy(iterable, amount) {\r\n    for (const key in iterable) {\r\n      iterable[key].changeEnergy({amount: amount});\r\n    }\r\n  }\r\n\r\n  checkAllHp() {\r\n    for (const name in this.allCharacters) {\r\n      const character = this.allCharacters[name];\r\n      if (character.hp <= 0) {\r\n        this.kill(character);\r\n      }\r\n    }\r\n  }\r\n\r\n  teamHasLost(index) {\r\n    return this.teams[index].length === 0;\r\n  }\r\n\r\n  anyTeamHasLost() {\r\n    for (const i in this.teams) {\r\n      if (this.teamHasLost(i)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  tick() {\r\n    if (this.anyTeamHasLost()) {\r\n      return;\r\n    }\r\n\r\n    this.activeCharacter = utils.pickRandom(this.allCharacters, 'speed');\r\n    const activeName = this.activeCharacter.character;\r\n    utils.log('\\n{0}\\'s turn:', activeName);\r\n    this.activeTeamIndex = this.getTeamOf[activeName];\r\n    const defendingTeam = this.teams[1 - this.activeTeamIndex];\r\n\r\n    this.changeAllEnergy(this.allCharacters, 2);\r\n\r\n    if (this.activeCharacter.triggerPhase({phase: 'SkipTurn'})) {\r\n      return;\r\n    }\r\n\r\n    this.activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        allyTeamIndex: this.activeTeamIndex,\r\n        enemyTeam: defendingTeam,\r\n        battle: this,\r\n        phase: 'TurnStart'\r\n    });\r\n\r\n    this.checkAllHp();\r\n    if (this.anyTeamHasLost()) {\r\n      return;\r\n    }\r\n\r\n    var currentTarget = this.activeCharacter.pickTargetUsingItems(defendingTeam);\r\n\r\n    if (currentTarget.canBeSaved) {\r\n      const blockParams = {\r\n          currentTarget: currentTarget,\r\n          phase: 'Block'\r\n      };\r\n      for (const defendingCharacter of defendingTeam) {\r\n        defendingCharacter.triggerPhase(blockParams);\r\n      }\r\n      currentTarget = blockParams.currentTarget;\r\n    }\r\n\r\n    this.activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        battle: this,\r\n        currentTarget: currentTarget, enemyTeam: defendingTeam,\r\n        phase: 'PostTarget'\r\n    });\r\n\r\n    utils.log('Main target: {0}', currentTarget.character);\r\n\r\n    const damageBase = utils.pickRandomWithinRange(\r\n        this.activeCharacter.attackLow,\r\n        this.activeCharacter.attackHigh\r\n    );\r\n    utils.log('Attack base damage: {0}', damageBase);\r\n\r\n    const preDamageParams = {\r\n        battle: this,\r\n        currentTarget: currentTarget,\r\n        damageBase: damageBase,\r\n        damageFinal: damageBase,\r\n        enemyTeam: defendingTeam,\r\n        phase: 'PreDamage'\r\n    };\r\n    this.activeCharacter.triggerPhase(preDamageParams);\r\n    if (preDamageParams.damageFinal !== damageBase) {\r\n      utils.log('Attack final damage: {0}', preDamageParams.damageFinal);\r\n    }\r\n\r\n    utils.log('Normal attack:');\r\n    currentTarget.takeDamage({\r\n        amount: preDamageParams.damageFinal,\r\n        battle: this,\r\n        source: this.activeCharacter\r\n    });\r\n\r\n    this.activeCharacter.triggerPhase({\r\n        allyTeam: this.teams[this.activeTeamIndex],\r\n        phase: 'PostDamage'\r\n    });\r\n\r\n    if (this.activeCharacter.poison > 0) {\r\n      utils.log('{0} takes poison damage', this.activeCharacter.character);\r\n      this.activeCharacter.changeHp({amount: -this.activeCharacter.poison});\r\n    }\r\n    this.checkAllHp();\r\n  }\r\n}\r\n","import {Battle} from './battle.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function runDungeon(team, waves) {\r\n  var currTeam = team;\r\n  for (const character of currTeam) {\r\n    character.processedInitCharacter = false;\r\n  }\r\n  utils.log('\\nTeam 0: {0}', JSON.stringify(team));\r\n  utils.log('\\n\\nStarting dungeon');\r\n  for (const index in waves) {\r\n    utils.log('\\nloading wave {0}', index);\r\n    const wave = waves[index];\r\n    utils.log('Team 1: {0}', JSON.stringify(wave));\r\n    const battle = new Battle(currTeam, wave);\r\n    utils.log(utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.log(utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.teams[0];\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function runMany(team, waves, numRuns) {\r\n  var winsForTeam0 = 0;\r\n  for (var i = 0; i < numRuns; i++) {\r\n    if (runDungeon(team, waves) === 0) {\r\n      winsForTeam0++;\r\n    }\r\n  }\r\n  return winsForTeam0;\r\n}\r\n","import * as data from './data.js';\r\nimport { global } from './global.js';\r\nimport * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function outputTest(players, selectedDungeon, numRuns) {\r\n  const output = [];\r\n  const team = [];\r\n\r\n  for (const player of players) {\r\n    if (player.username === '') {\r\n      continue;\r\n    }\r\n    output.push(utils.format('Player: {0}', player.username));\r\n\r\n    const toEquip = [];\r\n    for (const item of player.items) {\r\n      if (item.name === '') {\r\n        continue;\r\n      }\r\n      toEquip.push(item);\r\n    }\r\n    if (toEquip.length === 0) {\r\n      output.push('No items found');\r\n    } else {\r\n      const itemsToPrint = [];\r\n      for (const item of toEquip) {\r\n        itemsToPrint.push(utils.format('{0} {1}', item.name, item.tier));\r\n      }\r\n      output.push(utils.format('Items: {0}', itemsToPrint.join(', ')));\r\n    }\r\n    output.push(utils.format(\r\n      'Monuments: {0} Health, {1} Power, {2} Speed',\r\n      player.monuments.Health,\r\n      player.monuments.Power,\r\n      player.monuments.Speed\r\n    ));\r\n    if (player.monuments.Angel) {\r\n      output.push('Angel invite active');\r\n    }\r\n    output.push('');\r\n\r\n    team.push({\r\n      character: player.username,\r\n      hp: 100 + player.monuments.Health * 5,\r\n      hpMax: 100 + player.monuments.Health * 5,\r\n      speed: 10 + player.monuments.Speed * 1,\r\n      attackLow: 1 + player.monuments.Power * 1,\r\n      attackHigh: 10 + player.monuments.Power * 1,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip,\r\n      angelAvailable: player.monuments.Angel\r\n    });\r\n  }\r\n  \r\n  const [season, dungeon] = JSON.parse(selectedDungeon);\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  global.season = 4;\r\n  global.verbose = false;\r\n  global.output = null;\r\n  const numWins = simulator.runMany(team, waves, numRuns * 1);\r\n\r\n  output.push(utils.format('Season {0} D{1}:', season, dungeon));\r\n  output.push(utils.format('Wins out of {0} runs: {1} ({2}%)',\r\n                           numRuns, numWins, numWins * 100 / numRuns));\r\n\r\n  output.push(\"\\nConfidence intervals (using normal approximation):\");\r\n  const a = numWins + 1;\r\n  const b = numRuns - numWins + 1;\r\n  const mean = a / (a + b);\r\n  const stdDev = Math.sqrt(a * b / ((a + b) * (a + b) * (a + b + 1)));\r\n  output.push(utils.format('Estimated winrate: {0}%', Math.round(mean * 1000) / 10));\r\n  output.push(utils.format('95%: {0}% - {1}%',\r\n                           Math.round((mean - stdDev - stdDev) * 1000) / 10,\r\n                           Math.round((mean + stdDev + stdDev) * 1000) / 10));\r\n  output.push(utils.format('99.7%: {0}% - {1}%',\r\n                           Math.round((mean - stdDev - stdDev - stdDev) * 1000) / 10,\r\n                           Math.round((mean + stdDev + stdDev + stdDev) * 1000) / 10));\r\n\r\n  output.push('\\nExample Run:');\r\n\r\n  global.output = [];\r\n  global.verbose = true;\r\n  output.push('\\nWinning team: ' + simulator.runDungeon(team, waves));\r\n  utils.extend(output, global.output);\r\n  global.verbose = false;\r\n  global.output = null;\r\n\r\n  return output.join('\\n');\r\n}\r\n","import './OutputLogs.css';\r\n\r\nexport function OutputLogs(props) {\r\n  return (\r\n    <div className=\"outputLogs\">{props.value}</div>\r\n  );\r\n}\r\n\r\nexport default OutputLogs;\r\n","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank();\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <Dropdown\r\n        className=\"nameInput\"\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;\r\n","import * as dungeonUtils from '../dungeonUtils.js';\r\nimport { useState } from 'react';\r\n\r\nfunction LoadPlayerSection(props) {\r\n  const [rawInput, setRawInput] = useState('');\r\n\r\n  return (\r\n    <div className=\"loadPlayer\">\r\n      <div>Load from !api e, !appr, or BDSM profile:</div>\r\n      <div className=\"inputRow\">\r\n        <textarea className=\"input\" value={rawInput} onChange={(event) => {\r\n          var newPlayer = dungeonUtils.parseInventory(event.target.value);\r\n          if (newPlayer === null) {\r\n            newPlayer = props.player;\r\n          }\r\n          const newMonuments = { ...props.player.monuments };\r\n          Object.assign(newMonuments, dungeonUtils.parseMonuments(event.target.value));\r\n          props.onPlayerChanged(newPlayer.username, newPlayer.items, newMonuments)\r\n          setRawInput('');\r\n        }} />\r\n        <button className=\"button\" onClick={() => {\r\n          navigator.clipboard.writeText(dungeonUtils.serializePlayer(props.player))\r\n        }}> Copy BDSM profile </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadPlayerSection;","import './Monuments.css';\r\n\r\nfunction MonumentInput(props) {\r\n  return (\r\n    <input\r\n      className=\"monumentInput\"\r\n      type=\"number\"\r\n      min={0}\r\n      value={props.value}\r\n      onChange={(event) => { props.onValueChanged(event.target.value >>> 0) }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default MonumentInput;","import MonumentInput from './MonumentInput.js';\r\nimport './Monuments.css';\r\n\r\nfunction MonumentsSection(props) {\r\n  return <>\r\n    Monuments:\r\n    <div className=\"monumentsSection\">\r\n      <div className=\"statMonuments\">\r\n        <div>\r\n          Health:\r\n          <MonumentInput\r\n            value={props.monuments.Health}\r\n            onValueChanged={(newHealth) => {\r\n              let newMonuments = { ...props.monuments };\r\n              newMonuments.Health = newHealth;\r\n              props.onMonumentsChanged(newMonuments);\r\n            }} />\r\n        </div>\r\n        <div>\r\n          Power:\r\n          <MonumentInput\r\n            value={props.monuments.Power}\r\n            onValueChanged={(newPower) => {\r\n              let newMonuments = { ...props.monuments };\r\n              newMonuments.Power = newPower;\r\n              props.onMonumentsChanged(newMonuments);\r\n            }} />\r\n        </div>\r\n        <div>\r\n          Speed:\r\n          <MonumentInput\r\n            value={props.monuments.Speed}\r\n            onValueChanged={(newSpeed) => {\r\n              let newMonuments = { ...props.monuments };\r\n              newMonuments.Speed = newSpeed;\r\n              props.onMonumentsChanged(newMonuments);\r\n            }} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        Angel:\r\n        <input type=\"checkbox\" checked={props.monuments.Angel}\r\n          onChange={(event) => {\r\n            let newMonuments = { ...props.monuments };\r\n            newMonuments.Angel = event.target.checked;\r\n            props.onMonumentsChanged(newMonuments);\r\n          }} />\r\n      </div>\r\n    </div>\r\n  </>;\r\n}\r\n\r\nexport default MonumentsSection;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons'\r\nimport * as character from '../character.js';\r\nimport * as dungeonUtils from '../dungeonUtils.js';\r\nimport { useState } from 'react';\r\n\r\nfunction PlayerSummary(props) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"playerSummary\">\r\n      <button className=\"button\" onClick={() => setIsExpanded(!isExpanded)}>\r\n        {isExpanded ? <FontAwesomeIcon icon={faCaretUp} /> : <FontAwesomeIcon icon={faCaretDown} />}\r\n        {isExpanded ? \" Collapse\" : \" Expand\"} player info\r\n      </button>\r\n      {isExpanded ?\r\n        <div className=\"content\">\r\n          <Stats player={props.player} />\r\n          {props.player.items.map((item, index) => {\r\n            if (item.name === '') {\r\n              return null;\r\n            }\r\n            return <div className=\"itemDescription\" key={index}>\r\n              <span className=\"itemName\">{item.name} {item.tier}</span>{\": \"}\r\n              {dungeonUtils.getDescriptionOfItem(item)}\r\n            </div>\r\n          })}\r\n        </div>\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Stats(props) {\r\n  const stats = character.getBaseStats(props.player)\r\n\r\n  return (\r\n    <div className=\"statsSection\">\r\n      <div className=\"stat\"><b>❤️ HP:</b> {stats.hpMax}</div>\r\n      <div className=\"stat\"><b>🏃 Speed: </b>{stats.speed}</div>\r\n      <div className=\"stat\"><b>⚔️ Attack: </b>{stats.attackLow}-{stats.attackHigh}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerSummary;\r\n","import ItemDropdown from './ItemDropdown.js';\r\nimport LoadPlayerSection from './LoadPlayerSection.js';\r\nimport MonumentsSection from './MonumentsSection.js';\r\nimport PlayerSummary from './PlayerSummary.js';\r\nimport './PlayerForm.css';\r\n\r\nfunction PlayerForm(props) {\r\n  function maybeAddDisabledClassName(className) {\r\n    return className + (props.player.username === \"\" ? \" disabled\" : \"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"playerForm\">\r\n      <LoadPlayerSection\r\n        player={props.player}\r\n        onPlayerChanged={props.onPlayerChanged}\r\n      />\r\n      <div className={maybeAddDisabledClassName(\"profile\")}>\r\n        Username:\r\n        <input\r\n          className=\"usernameInput\"\r\n          value={props.player.username}\r\n          onChange={(event) => {\r\n            props.onPlayerChanged(event.target.value, props.player.items, props.player.monuments);\r\n          }}\r\n        />\r\n        {props.player.items.map((item, index) =>\r\n          <ItemDropdown\r\n            key={index}\r\n            item={item}\r\n            onItemChanged={(name, tier) => {\r\n              let newItems = [...props.player.items];\r\n              newItems[index] = { name: name, tier: parseInt(tier) };\r\n              props.onPlayerChanged(props.player.username, newItems, props.player.monuments);\r\n            }}\r\n          />\r\n        )}\r\n        <MonumentsSection\r\n          monuments={props.player.monuments}\r\n          onMonumentsChanged={\r\n            (newMonuments) =>\r\n              props.onPlayerChanged(props.player.username, props.player.items, newMonuments)\r\n          }\r\n        />\r\n        <PlayerSummary player={props.player}></PlayerSummary>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerForm;\r\n","import * as data from '../data.js';\r\nimport Dropdown from './Dropdown.js';\r\nimport * as dungeonUtils from '../dungeonUtils.js';\r\nimport * as localStorageUtils from '../localStorageUtils.js';\r\nimport { outputTest } from '../test.js';\r\nimport OutputLogs from './OutputLogs.js';\r\nimport PlayerForm from './PlayerForm.js';\r\nimport { useState } from 'react';\r\nimport * as utils from '../utils.js';\r\nimport './Simulator.css';\r\n\r\nfunction Simulator() {\r\n  const dungeonList = data.getDungeonList();\r\n  const [numRuns, setNumRuns] = localStorageUtils.useStateWithLocalStorage(\"numRuns\", 100);\r\n  const [selectedDungeon, setSelectedDungeon] = localStorageUtils.useStateWithLocalStorage(\r\n    \"selectedDungeon\",\r\n    dungeonList[0]);\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [rawInput, setRawInput] = useState('');\r\n\r\n  const [players, setPlayers] = localStorageUtils.useStateWithLocalStorage(\"players\", [\r\n    getInitialPlayer(),\r\n    getInitialPlayer(),\r\n    getInitialPlayer(),\r\n    getInitialPlayer(),\r\n    getInitialPlayer()\r\n  ]);\r\n\r\n  function getInitialPlayer() {\r\n    return {\r\n      username: \"\",\r\n      items: [\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem()\r\n      ],\r\n      monuments: {\r\n        Health: 0,\r\n        Power: 0,\r\n        Speed: 0,\r\n        Angel: false\r\n      }\r\n    };\r\n  }\r\n\r\n  function parsePlayers(input) {\r\n    if (!input.startsWith('BDSM.partyStart')) {\r\n      return null;\r\n    }\r\n    const players = []\r\n    for (const rawPlayer of input.split('BDSM.playerDivider')) {\r\n      const newPlayer = getInitialPlayer();\r\n      Object.assign(newPlayer, dungeonUtils.parseInventory(rawPlayer));\r\n      Object.assign(newPlayer.monuments, dungeonUtils.parseMonuments(rawPlayer));\r\n      players.push(newPlayer);\r\n    }\r\n    while (players.length < 5) {\r\n      players.push(getInitialPlayer());\r\n    }\r\n    return players;\r\n  }\r\n\r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunTest() {\r\n    try {\r\n      const output = outputTest(players, selectedDungeon, numRuns);\r\n      setOutputText(output);\r\n    } catch(err) {\r\n      setOutputText(utils.format('An error has occurred: {0}', err.message));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"simulator\">\r\n      <button onClick={() => {\r\n        localStorageUtils.clear();\r\n        window.location.reload();\r\n      }}>Clear Cache</button>\r\n      <br />\r\n      Load BDSM party profile:&nbsp;\r\n      <textarea value={rawInput} onChange={(event) => {\r\n        const newParty = parsePlayers(event.target.value);\r\n        if (newParty !== null) {\r\n          setPlayers(newParty);\r\n        }\r\n        setRawInput('');\r\n      }} />\r\n      <br />\r\n      <button onClick={() => {\r\n        navigator.clipboard.writeText(dungeonUtils.serializePlayers(players))\r\n      }}> Copy BDSM party profile </button>\r\n      <br />\r\n      <div className=\"party\">\r\n        {players.map((player, index) =>\r\n          <PlayerForm\r\n            key={index}\r\n            player={player}\r\n            onPlayerChanged={(username, items, monuments) => {\r\n              let newPlayers = [...players];\r\n              newPlayers[index] = {\r\n                username: username,\r\n                items: items,\r\n                monuments: monuments\r\n              };\r\n              setPlayers(newPlayers);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      [Season, Dungeon]:\r\n      <Dropdown\r\n        selectedOption={selectedDungeon}\r\n        onChange={(event) => { setSelectedDungeon(event.target.value); }}\r\n        options={dungeonList}\r\n      />\r\n      <br />\r\n      Number of runs:\r\n      <input type=\"number\" min={0} value={numRuns} onChange={(event) => {\r\n        setNumRuns(parseInt(event.target.value));\r\n      }} />\r\n      <br />\r\n      <button onClick={onRunTest}>\r\n        Run Test\r\n      </button>\r\n      <OutputLogs value={outputText}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import Simulator from \"./components/Simulator.js\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Boxbox Dungeon SiMulator (BDSM)</h1>\r\n      <div><i>Created by Zethorix#1064 and Oof#4389 (qaisklyi)</i></div>\r\n      <div><i><strong>(The pity system is currently not implemented)</strong></i></div>\r\n      <p>Enter your party's items and monuments.</p>\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}