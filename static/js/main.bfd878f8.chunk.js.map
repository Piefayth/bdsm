{"version":3,"sources":["utils.js","global.js","dungeonUtils.js","data sync /^/.//season_.*/.json$","data sync /^/.//season_.*//items//passive_items/.json$","data sync /^/.//season_.*//items//energy_items/.json$","data sync /^/.//season_.*//mobs//summon_templates/.json$","data.js","components/Dropdown.js","items.js","character.js","battle.js","simulator.js","test.js","components/ItemDropdown.js","components/PlayerForm.js","components/Simulator.js","App.js","index.js"],"names":["format","args","arguments","replace","match","number","index","parseInt","log","global","toLog","console","push","extend","iterable1","iterable2","sum","iterable","key","total","i","currentValue","withProbability","p","Math","random","pickRandom","weightKey","r","floor","weight","pickRandomWithinRange","lower","upper","deepCopyJson","obj","JSON","parse","stringify","verbose","setVerbose","val","output","setOutput","season","setSeason","formatDescriptionWithTier","description","tier","re","current","m","eval","parseMonuments","input","monumentLevels","empty","split","matches","parseInventory","player","username","items","line","matchUsername","matchItem","name","length","_mutateTemplate","template","scale","base","scaling","getScaledTemplate","utils","processedInitCharacter","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getItems","passive","require","energy","Dropdown","props","value","selectedOption","onChange","options","option","ABILITY_FOR_ITEM","params","phase","enemyTeam","item","target","takeDamage","source","character","amount","battle","changeSpeed","_throwInvalidPhaseError","changeAttack","changeHpMax","changeHp","usedCannon","damageFinal","round","damageBase","allyTeam","c","summoned","allyTeamIndex","summonedChicken","addSummonToTeam","activeTeamIndex","ally","currentTarget","changeEnergy","hp","Infinity","attackIncrease","hpMax","damage","max","teams","getTeamOf","poison","enemy","missingHpProportion","addedEnergy","useItemAbility","data","originalEnergy","cost","_checkEnergy","_extractParam","param","defaultValue","Character","this","speed","attackLow","attackHigh","angelAvailable","canBeSaved","_preprocessTriggers","allItems","triggers","triggerTypes","triggerType","originalHpMax","originalHp","min","originalSpeed","originalAttackLow","originalAttackHigh","amountToGain","phaseParams","triggerPhase","ret","assign","prototype","toString","Battle","team1","team2","initTeams","allCharacters","addCopyOfCharacterToTeam","teamIndex","originalName","copyNum","toAdd","addCharacterToTeam","summon","dungeonUtils","team","pos","position","_findPositionWithinTeam","splice","kill","teamHasLost","teamlength","activeCharacter","activeName","defendingTeam","changeAllEnergy","checkAllHp","targetParams","blockParams","preDamageParams","runDungeon","waves","currTeam","wave","tick","outputTest","players","selectedDungeon","numRuns","toEquip","monuments","Health","Speed","Power","Angel","dungeon","dungeonsForSeason","j","numWins","winsForTeam0","simulator","winratePercentage","join","ItemDropdown","itemNames","obtainableItems","unobtainableItems","type","obtainable","sort","getAllItemNamesAndBlank","event","onItemChanged","PlayerForm","useState","setItems","setMonuments","rawInput","setRawInput","newPlayer","newMonuments","onPlayerChanged","newItems","checked","Simulator","dungeonList","dungeonsBySeason","reverse","setNumRuns","setSelectedDungeon","outputText","setOutputText","getInitialPlayer","setPlayers","newPlayers","onClick","style","whiteSpace","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfd878f8.chunk.js","sourcesContent":["import * as global from './global.js'\r\n\r\nexport function format() {\r\n  const args = arguments;\r\n  return args[0].replace(/{(\\d+)}/g, function(match, number) {\r\n      const index = parseInt(number) + 1;\r\n      return typeof[args[index]] !== 'undefined'\r\n        ? args[index]\r\n        : match;\r\n  });\r\n}\r\n\r\nexport function log() {\r\n  if (!global.verbose && global.output === null) {\r\n    return;\r\n  }\r\n  const toLog = typeof arguments[0] === 'string'\r\n      ? format(...arguments)\r\n      : arguments[0];\r\n  if (global.verbose) {\r\n    console.log(toLog);\r\n  }\r\n  if (global.output !== null) {\r\n    global.output.push(toLog);\r\n  }\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key == null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n    total++;\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  const total = sum(iterable, weightKey);\r\n  var r = Math.floor(Math.random() * total);\r\n\r\n  for (const key in iterable) {\r\n    var weight = 1;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(iterable[key]);\r\n    } else if (weightKey != null) {\r\n      weight = iterable[key][weightKey];\r\n    }\r\n    if (r < weight) {\r\n      return iterable[key];\r\n    }\r\n    r -= weight;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","export var verbose = false;\r\nexport function setVerbose(val) {\r\n  verbose = val;\r\n}\r\n\r\nexport var output = null;\r\nexport function setOutput(val) {\r\n  output = val;\r\n}\r\n\r\nexport var season = 3;\r\nexport function setSeason(val) {\r\n  season = val;\r\n}\r\n","import * as utils from './utils.js';\n\nexport function formatDescriptionWithTier(description, tier) {\n  const re = /\\{([\\dt+\\-*]+)\\}/;\n  var current = description;\n  var m = current.match(re);\n  while (m != null) {\n    current = current.replace(\n        m[0],\n        eval(m[1].replace('t', tier))\n    );\n    m = current.match(re);\n  }\n  return current;\n}\n\nexport function parseMonuments(input) {\n  const monumentLevels = {\n    'Health': 0,\n    'Power': 0,\n    'Speed': 0\n  };\n  var empty = true;\n  for (const line of input.split('\\n')) {\n    const matches = line.match(/\\|\\s*(Health|Power|Speed)\\s*\\|\\s*(\\d+)\\s*\\|/);\n    if (matches === null) {\n      continue;\n    }\n    empty = false;\n    monumentLevels[matches[1]] = parseInt(matches[2]);\n  }\n  if (empty) {\n    return null;\n  }\n  return monumentLevels;\n}\n\nexport function parseInventory(input) {\n  const player = {username: '', items: []};\n  var empty = true;\n  for (const line of input.split('\\n')) {\n    const matchUsername = line.match(/(.*)'s Inventory/);\n    const matchItem = line.match(/\\d-\\s[\\w:]+\\s([\\w'\\s]+)\\s(\\d+):/);\n    if (matchUsername !== null) {\n      empty = false;\n      player.username = matchUsername[1];\n    }\n    if (matchItem !== null) {\n      empty = false;\n      player.items.push({name: matchItem[1], tier: parseInt(matchItem[2])});\n    }\n  }\n  if (empty) {\n    return null;\n  }\n  if (player.items.length > 4) {\n    return null;\n  }\n  for (var i = player.items.length; i < 4; i++) {\n    player.items.push({name: '', tier: 1});\n  }\n  return player;\n}\n\nfunction _mutateTemplate(template, scale) {\n  if (typeof template != 'object') {\n    return template;\n  }\n\n  if ('base' in template && 'scaling' in template) {\n    return template.base + template.scaling * scale;\n  }\n\n  // recursive check\n  for (const key in template) {\n    template[key] = _mutateTemplate(template[key], scale);\n  }\n  return template;\n}\n\nexport function getScaledTemplate(template, scale) {\n  const obj = utils.deepCopyJson(template);\n  _mutateTemplate(obj, scale);\n  obj.processedInitCharacter = false;\n  return obj;\n}\n","var map = {\n\t\"./season_2/items/energy_items.json\": 14,\n\t\"./season_2/items/passive_items.json\": 15,\n\t\"./season_2/mobs/dungeon_0.json\": 26,\n\t\"./season_2/mobs/dungeon_1.json\": 27,\n\t\"./season_2/mobs/dungeon_10.json\": 28,\n\t\"./season_2/mobs/dungeon_2.json\": 29,\n\t\"./season_2/mobs/dungeon_3.json\": 30,\n\t\"./season_2/mobs/dungeon_4.json\": 31,\n\t\"./season_2/mobs/dungeon_5.json\": 32,\n\t\"./season_2/mobs/dungeon_6.json\": 33,\n\t\"./season_2/mobs/dungeon_7.json\": 34,\n\t\"./season_2/mobs/dungeon_8.json\": 35,\n\t\"./season_2/mobs/dungeon_9.json\": 36,\n\t\"./season_2/mobs/summon_templates.json\": 16,\n\t\"./season_3/items/energy_items.json\": 17,\n\t\"./season_3/items/passive_items.json\": 18,\n\t\"./season_3/mobs/dungeon_0.json\": 37,\n\t\"./season_3/mobs/dungeon_1.json\": 38,\n\t\"./season_3/mobs/dungeon_10.json\": 39,\n\t\"./season_3/mobs/dungeon_11.json\": 40,\n\t\"./season_3/mobs/dungeon_2.json\": 41,\n\t\"./season_3/mobs/dungeon_3.json\": 42,\n\t\"./season_3/mobs/dungeon_4.json\": 43,\n\t\"./season_3/mobs/dungeon_5.json\": 44,\n\t\"./season_3/mobs/dungeon_6.json\": 45,\n\t\"./season_3/mobs/dungeon_7.json\": 46,\n\t\"./season_3/mobs/dungeon_8.json\": 47,\n\t\"./season_3/mobs/dungeon_9.json\": 48,\n\t\"./season_3/mobs/summon_templates.json\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;","var map = {\n\t\"./season_2/items/passive_items.json\": 15,\n\t\"./season_3/items/passive_items.json\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50;","var map = {\n\t\"./season_2/items/energy_items.json\": 14,\n\t\"./season_3/items/energy_items.json\": 17\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 51;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 16,\n\t\"./season_3/mobs/summon_templates.json\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 52;","import * as global from './global.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require(\r\n        './data/season_' + season + '/mobs/dungeon_' + dungeon + '.json');\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getDungeonList() {\r\n  const dungeonsBySeason = require('./data/dungeons.json');\r\n  const dungeonList = [];\r\n\r\n  const keys = Object.keys(dungeonsBySeason);\r\n  keys.sort().reverse();\r\n  for (const season of keys) {\r\n    for (const dungeon of dungeonsBySeason[season]) {\r\n      dungeonList.push(JSON.stringify([parseInt(season), dungeon]));\r\n    }\r\n  }\r\n  return dungeonList;\r\n}\r\n\r\nexport function getItems() {\r\n  if (!(global.season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[global.season] = {\r\n      passive: require(\r\n          './data/season_' + global.season + '/items/passive_items.json'),\r\n      energy: require(\r\n          './data/season_' + global.season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank() {\r\n  if (!(global.season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems();\r\n    const itemNames = [''];\r\n    const obtainableItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['energy', 'passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item].obtainable) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    unobtainableItems.sort();\r\n    utils.extend(itemNames, obtainableItems);\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[global.season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getTemplates() {\r\n  if (!(global.season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[global.season] = require(\r\n        './data/season_' + global.season + '/mobs/summon_templates.json');\r\n  }\r\n  return TEMPLATES_BY_SEASON[global.season];\r\n}\r\n","function Dropdown(props) {\r\n  return (\r\n    <select value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option) => <option key={option}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst ABILITY_FOR_ITEM = {\r\n  'Avalanche': avalanche,\r\n  'BF Cannon': bfCannon,\r\n  'Big Club': bigClub,\r\n  'Boosting Bugle': boostingBugle,\r\n  'Chumby Chicken': chumbyChicken,\r\n  'Challenger Arrow': challengerArrow,\r\n  'Chicken Dinner': chickenDinner,\r\n  'Cleansing Flames': cleansingFlames,\r\n  'Draining Dagger': drainingDagger,\r\n  'Energetic Ally': energeticAlly,\r\n  'Explosion Powder': explosionPowder,\r\n  'Festive Feast': festiveFeast,\r\n  'Fire Sword': fireSword,\r\n  'Freezeman': freezeman,\r\n  'Halberd': halberd,\r\n  'Healing Pendant': healingPendant,\r\n  'Imp Whistle': impWhistle,\r\n  'Knight\\'s Lance': knightsLance,\r\n  'Last Resort': lastResort,\r\n  'Love Letter': loveLetter,\r\n  'Machete': machete,\r\n  'Magic Parasol': magicParasol,\r\n  'Martyr Armor': martyrArmor,\r\n  'Pet Imp': petImp,\r\n  'Poison Dagger': poisonDagger,\r\n  'Quickening Death': quickeningDeath,\r\n  'Quickening Death: Focused': quickeningDeathFocused,\r\n  'Rock Companion': rockCompanion,\r\n  'Rough Skin': roughSkin,\r\n  'Rousing Death': rousingDeath,\r\n  'Seeking Missiles': seekingMissiles,\r\n  'Survival Kit': survivalKit,\r\n  'Thorns': thorns,\r\n  'Trusty Steed': trustySteed,\r\n  'Whirlwind Axe': whirlwindAxe\r\n}\r\n\r\nexport function useItemAbility(params) {\r\n  if (params.item.name in data.getItems().energy && !_checkEnergy(params)) {\r\n    return;\r\n  }\r\n  return ABILITY_FOR_ITEM[params.item.name](params);\r\n}\r\n\r\nfunction _checkEnergy(params) {\r\n  const originalEnergy = params.character.energy;\r\n  const cost = data.getItems().energy[params.item.name].cost;\r\n  if (originalEnergy < cost) {\r\n    return false;\r\n  }\r\n  utils.log('Activating {0}', params.item.name);\r\n  params.character.changeEnergy({amount: -cost});\r\n  return true;\r\n}\r\n\r\nfunction _throwInvalidPhaseError(params) {\r\n  throw Error(utils.format('InternalError: Item {0} does not have phase {1}',\r\n                           params.item.name, params.phase));\r\n}\r\n\r\nfunction avalanche(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const tier = params.item.tier;\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(enemyTeam);\r\n        target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 5 * tier),\r\n          battle: params.battle\r\n        });\r\n        target.changeSpeed({\r\n          amount: -utils.pickRandomWithinRange(0, tier)\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bfCannon(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: 6 + 6 * tier});\r\n      params.character.changeHpMax({amount: 10 * tier});\r\n      params.character.changeHp({amount: 10 * tier});\r\n      break;\r\n    }\r\n    case 'SkipTurn': {\r\n      if (params.character.usedCannon) {\r\n        utils.log('Activating {0}: Skipping Turn', params.item.name);\r\n        params.character.usedCannon = false;\r\n        return true;\r\n      }\r\n      params.character.usedCannon = true;\r\n      return false;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction bigClub(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activated {0}', params.item.name);\r\n      params.damageFinal += Math.round(1.5 * params.damageBase);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction boostingBugle(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeam = params.allyTeam;\r\n      if (allyTeam.length === 1) {\r\n        break;\r\n      }\r\n      for (var i = 0; i < 2; i++) {\r\n        const target = utils.pickRandom(\r\n            allyTeam,\r\n            (c) => {\r\n              if (c.summoned) {\r\n                return 0;\r\n              }\r\n              if (c.character === params.character.character) {\r\n                return 0;\r\n              }\r\n              return 1;\r\n            }\r\n        );\r\n        if (target === null) {\r\n          break;\r\n        }\r\n        target.changeHp({amount: tier + tier});\r\n        target.changeAttack({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chumbyChicken(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeamIndex = params.allyTeamIndex;\r\n      if (params.character.character in params.battle.summonedChicken) {\r\n        break;\r\n      }\r\n      params.battle.summonedChicken[params.character.character] = 0;\r\n      params.battle.addSummonToTeam(params.item, allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction challengerArrow(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const target = utils.pickRandom(enemyTeam);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: 10 * tier,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeAttack({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction chickenDinner(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeHp({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleansingFlames(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      const allyTeam = params.allyTeam;\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const ally of allyTeam) {\r\n        ally.changeHp({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drainingDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.changeAttack({amount: -tier});\r\n      if (utils.withProbability(0.2)) {\r\n        params.currentTarget.changeEnergy({amount: -tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction energeticAlly(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const allyTeam = params.allyTeam;\r\n      var target = {hp: Infinity};\r\n      for (const ally of allyTeam) {\r\n        if (ally.summoned) {\r\n          continue;\r\n        }\r\n        if (ally.hp >= target.hp) {\r\n          continue;\r\n        }\r\n        target = ally;\r\n      }\r\n      if (target.hp === Infinity) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: 5 * tier});\r\n      target.changeEnergy({amount: 20});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction explosionPowder(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        const target = enemyTeam[Object.keys(enemyTeam)[0]];\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 20 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      for (const enemy of enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(5 * tier, 10 * tier),\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction festiveFeast(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: 3 * tier,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        ally.changeHp({amount: 3 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction fireSword(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var attackIncrease = 0;\r\n      for (var i = 0; i < tier; i++) {\r\n        if (!utils.withProbability(0.3)) {\r\n          continue;\r\n        }\r\n        attackIncrease++;\r\n      }\r\n      params.character.changeAttack({amount: attackIncrease});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction freezeman(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeSpeed({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction halberd(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeAttack({amount: tier + tier});\r\n      params.character.changeHpMax({amount: 4 * tier});\r\n      params.character.changeHp({amount: 4 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction healingPendant(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.character.changeHp({amount: 5 * tier});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction impWhistle(params) {\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction knightsLance(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      const enemyTeam = params.enemyTeam;\r\n      const target = utils.pickRandom(enemyTeam);\r\n      if (params.character.hp === params.character.hpMax) {\r\n        target.takeDamage({\r\n            source: params.character,\r\n            amount: utils.pickRandomWithinRange(10 * tier, 14 * tier),\r\n            battle: params.battle\r\n        });\r\n        break;\r\n      }\r\n      const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: amount,\r\n          battle: params.battle\r\n      });\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction lastResort(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      if (params.source === null) {\r\n        break;\r\n      }\r\n      params.source.takeDamage({\r\n        amount: 10 * tier,\r\n        battle: params.battle,\r\n        source: params.character\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction loveLetter(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostDamage': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const allyTeam = params.allyTeam;\r\n      const target = utils.pickRandom(\r\n          allyTeam,\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction machete(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const enemyTeam = params.enemyTeam;\r\n      if (enemyTeam.length === 1) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(\r\n          enemyTeam,\r\n          (c) => {\r\n            if (c.character === params.currentTarget.character) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      target.takeDamage({\r\n          source: params.character,\r\n          amount: utils.pickRandomWithinRange(3 * tier, 4 * tier),\r\n          battle: params.battle\r\n      });\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction magicParasol(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.17 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - 2 - 3 * tier);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction martyrArmor(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.66)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      const target = utils.pickRandom(\r\n          params.battle.teams[\r\n              params.battle.getTeamOf[params.character.character]\r\n          ],\r\n          (c) => {\r\n            if (c.character === params.character.character) {\r\n              return 0;\r\n            }\r\n            if (c.summoned) {\r\n              return 0;\r\n            }\r\n            return 1;\r\n          }\r\n      );\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeHp({amount: tier + tier});\r\n      target.changeEnergy({amount: tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction petImp(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction poisonDagger(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PostTarget': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.currentTarget.poison += tier;\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeSpeed({amount: tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction quickeningDeathFocused(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      const target = utils.pickRandom(params.allyTeam, (c) => {\r\n        if (c.character === params.character.character) {\r\n          return 0;\r\n        }\r\n        return 1;\r\n      });\r\n      if (target === null) {\r\n        break;\r\n      }\r\n      target.changeSpeed({amount: 5 * tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rockCompanion(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction roughSkin(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'EnemyDamage': {\r\n      if (!utils.withProbability(0.5)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damage = Math.max(0, params.damage - tier - tier);\r\n      params.source.changeHp({amount: -tier - tier});\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction rousingDeath(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Death': {\r\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\r\n        break;\r\n      }\r\n      for (const ally of params.allyTeam) {\r\n        if (ally.character === params.character.character) {\r\n          continue;\r\n        }\r\n        ally.changeEnergy({amount: 10 * tier});\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction seekingMissiles(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'Target': {\r\n      var target = {hp: Infinity};\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.hp < target.hp) {\r\n          target = enemy;\r\n        }\r\n      }\r\n      if (target.hp === Infinity) {\r\n        throw Error('InternalError: No target in enemy team');\r\n      }\r\n      utils.log('{0} selected target {1}', params.item.name, target.character);\r\n      params.currentTarget = target;\r\n      break;\r\n    }\r\n    case 'PreDamage': {\r\n      const missingHpProportion =\r\n          1 - params.currentTarget.hp / params.currentTarget.hpMax;\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.damageFinal += Math.floor(5 * missingHpProportion * tier);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction survivalKit(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      const amount = 20 * tier;\r\n      params.character.changeHpMax({amount: amount});\r\n      params.character.changeHp({amount: amount});\r\n      break;\r\n    }\r\n    case 'Block': {\r\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.character === params.character.character) {\r\n        break;\r\n      }\r\n      if (params.currentTarget.hp < params.character.hp) {\r\n        utils.log(\r\n            '{0} blocks for {1}',\r\n            params.character.character,\r\n            params.currentTarget.character\r\n        );\r\n        params.currentTarget = params.character;\r\n        break;\r\n      }\r\n      utils.log(\r\n          '{0} is a coward',\r\n          params.character.character,\r\n      );\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction thorns(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'TurnStart': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      var addedEnergy = false;\r\n      for (const enemy of params.enemyTeam) {\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: tier,\r\n            battle: params.battle\r\n        });\r\n        if (addedEnergy) {\r\n          continue;\r\n        }\r\n        if (!utils.withProbability(0.25)) {\r\n          continue;\r\n        }\r\n        params.character.changeEnergy({amount: tier});\r\n        addedEnergy = true;\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction trustySteed(params) {\r\n  switch (params.phase) {\r\n    case 'InitCharacter': {\r\n      utils.log('Activating {0}', params.item.name);\r\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n\r\nfunction whirlwindAxe(params) {\r\n  const tier = params.item.tier;\r\n  switch (params.phase) {\r\n    case 'PreDamage': {\r\n      if (!utils.withProbability(0.11 * tier)) {\r\n        break;\r\n      }\r\n      utils.log('Activating {0}', params.item.name);\r\n      for (const enemy of params.enemyTeam) {\r\n        if (enemy.character === params.currentTarget.character) {\r\n          continue;\r\n        }\r\n        enemy.takeDamage({\r\n            source: params.character,\r\n            amount: params.damageBase,\r\n            battle: params.battle\r\n        });\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      _throwInvalidPhaseError(params);\r\n    }\r\n  }\r\n}\r\n","import * as data from './data.js';\nimport * as items from './items.js';\nimport * as utils from './utils.js';\n\nfunction _extractParam(params, param, defaultValue) {\n  if (param in params) {\n    return params[param];\n  }\n  return defaultValue;\n}\n\nexport class Character {\n  constructor(params) {\n    this.character = _extractParam(params, 'character', 'Unknown');\n    this.hpMax = _extractParam(params, 'hpMax', 100);\n    this.hp = _extractParam(params, 'hp', this.hpMax);\n    this.speed = _extractParam(params, 'speed', 10);\n    this.attackLow = _extractParam(params, 'attackLow', 1);\n    this.attackHigh = _extractParam(params, 'attackHigh', 10);\n    this.energy = _extractParam(params, 'energy', 0);\n    this.summoned = _extractParam(params, 'summoned', false);\n    this.items = _extractParam(params, 'items', []);\n\n    this.angelAvailable = _extractParam(params, 'angelAvailable', false);\n    this.canBeSaved = _extractParam(params, 'canBeSaved', true);\n    this.poison = _extractParam(params, 'poison', 0);\n    this.usedCannon = _extractParam(params, 'usedCannon', false);\n    this._preprocessTriggers();\n    this.processedInitCharacter =\n        _extractParam(params, 'processedInitCharacter', true);\n  }\n\n  _preprocessTriggers() {\n    if ('triggers' in this) {\n      return;\n    }\n    const allItems = data.getItems();\n    const triggers = {};\n    for (const item of this.items) {\n      const triggerTypes = item.name in allItems.energy\n          ? ['TurnStart']\n          : allItems.passive[item.name].triggers;\n      for (const triggerType of triggerTypes) {\n        if (!(triggerType in triggers)) {\n          triggers[triggerType] = [item];\n          continue;\n        }\n        triggers[triggerType].push(item);\n      }\n    }\n    this.triggers = triggers;\n  }\n\n  deepCopy() {\n    const params = utils.deepCopyJson(this);\n    return new Character(params);\n  }\n\n  changeHpMax(params) {\n    const originalHpMax = this.hpMax;\n    this.hpMax += params.amount;\n    utils.log('{0} max hp changed by {1}: {2} -> {3}',\n              this.character, params.amount, originalHpMax, this.hpMax);\n  }\n\n  changeHp(params) {\n    const originalHp = this.hp;\n    this.hp = Math.min(this.hp + params.amount, this.hpMax);\n    utils.log('{0} hp changed by {1}: {2} -> {3}',\n              this.character, params.amount, originalHp, this.hp);\n  }\n\n  changeSpeed(params) {\n    const originalSpeed = this.speed;\n    this.speed = Math.max(this.speed + params.amount, 1);\n    utils.log('{0} speed changed by {1}: {2} -> {3}',\n              this.character, params.amount, originalSpeed, this.speed);\n  }\n\n  changeAttack(params) {\n    const originalAttackLow = this.attackLow;\n    const originalAttackHigh = this.attackHigh;\n    const amountToGain = Math.max(-originalAttackLow, params.amount);\n    this.attackLow += amountToGain;\n    this.attackHigh += amountToGain;\n    utils.log('{0} attack changed by {1}: {2} -> {3}',\n              this.character,\n              params.amount,\n              [originalAttackLow, originalAttackHigh],\n              [this.attackLow, this.attackHigh]);\n  }\n\n  changeEnergy(params) {\n    const originalEnergy = this.energy;\n    this.energy = Math.max(this.energy + params.amount, 0);\n    utils.log('{0} energy changed by {1}: {2} -> {3}',\n              this.character,\n              params.amount,\n              originalEnergy,\n              this.energy);\n  }\n\n  takeDamage(params) {\n    const phaseParams = {\n        battle: params.battle,\n        damage: params.amount,\n        phase: 'EnemyDamage',\n        source: params.source\n    };\n    this.triggerPhase(phaseParams);\n    this.changeHp({\n        amount: -phaseParams.damage\n    });\n    if (this.hp > 0) {\n      return;\n    }\n    const allyTeamIndex = params.battle.getTeamOf[this.character];\n    this.triggerPhase({\n      allyTeam: params.battle.teams[allyTeamIndex],\n      allyTeamIndex: allyTeamIndex,\n      battle: params.battle,\n      character: this,\n      phase: 'Death',\n      source: params.source\n    });\n  }\n\n  triggerPhase(params) {\n    if (!(params.phase in this.triggers)) {\n      return false;\n    }\n    if (params.phase === 'InitCharacter' && this.processedInitCharacter) {\n      return false;\n    }\n\n    params.character = this;\n    var ret = false;\n    for (const item of this.triggers[params.phase]) {\n      if (items.useItemAbility(Object.assign(params, {\n            item: item\n        })) === true) {\n        ret = true;\n      }\n    }\n    if (params.phase === 'InitCharacter') {\n      this.processedInitCharacter = true;\n    }\n    return ret;\n  }\n}\n\nCharacter.prototype.toString = function() {\n  return this.character;\n}\n","import {Character} from './character.js';\nimport * as data from './data.js';\nimport * as utils from './utils.js';\nimport * as dungeonUtils from './dungeonUtils.js';\n\nfunction _findPositionWithinTeam(name, team) {\n  for (const position in team) {\n    const c = team[position];\n    if (c.character === name) {\n      return position;\n    }\n  }\n  return -1;\n}\n\n\nexport class Battle {\n  constructor(team1, team2) {\n    this.summonedChicken = {};\n    this.initTeams(team1, team2);\n  }\n\n  initTeams(team1, team2) {\n    this.teams = [[], []];\n    this.allCharacters = {};\n    this.getTeamOf = {};\n    for (const i in team1) {\n      this.addCopyOfCharacterToTeam(team1[i], 0);\n    }\n    for (const i in team2) {\n      this.addCopyOfCharacterToTeam(team2[i], 1);\n    }\n  }\n\n  addCharacterToTeam(character, teamIndex) {\n    var name = character.character;\n    const originalName = name;\n    var copyNum = 1;\n    while (name in this.allCharacters) {\n      copyNum++;\n      name = originalName + ' ' + copyNum;\n    }\n    character.character = name;\n    this.getTeamOf[name] = teamIndex;\n    this.allCharacters[name] = character;\n    character.triggerPhase({\n        allyTeamIndex: teamIndex,\n        battle: this,\n        character: character,\n        phase: 'InitCharacter'\n    });\n    this.teams[teamIndex].push(character);\n  }\n\n  addCopyOfCharacterToTeam(character, teamIndex) {\n    const toAdd = new Character(character);\n    this.addCharacterToTeam(toAdd, teamIndex);\n  }\n\n  addSummonToTeam(item, teamIndex) {\n    const template = data.getTemplates()[item.name];\n    const summon = new Character(dungeonUtils.getScaledTemplate(template, item.tier));\n    utils.log('Summoning {0} for team {1}', summon.character, teamIndex);\n    this.addCharacterToTeam(summon, teamIndex);\n  }\n\n  kill(character) {\n    const name = character.character;\n    if (character.angelAvailable) {\n      utils.log('reviving: {0}', name);\n      character.hp = Math.floor(character.hpMax * 0.33);\n      character.angelAvailable = false;\n      return;\n    }\n    utils.log('killing: {0}', name);\n    const team = this.teams[this.getTeamOf[name]];\n    const pos = _findPositionWithinTeam(name, team);\n    if (pos < 0) {\n      throw Error(utils.format('InternalError: {0} is not in team {1}',\n                               name, team));\n    }\n    delete this.allCharacters[name];\n    delete this.getTeamOf[name];\n    team.splice(pos, 1);\n    if (name in this.summonedChicken) {\n      delete this.summonedChicken[name];\n    }\n  }\n\n  changeAllEnergy(iterable, amount) {\n    for (const key in iterable) {\n      iterable[key].changeEnergy({amount: amount});\n    }\n  }\n\n  checkAllHp() {\n    for (const name in this.allCharacters) {\n      const character = this.allCharacters[name];\n      if (character.hp <= 0) {\n        this.kill(character);\n      }\n    }\n  }\n\n  tick() {\n    for (const i in this.teams) {\n      if (this.teamHasLost(i)) {\n        return;\n      }\n    }\n    if (this.teamlength);\n    const activeCharacter = utils.pickRandom(this.allCharacters, 'speed');\n    const activeName = activeCharacter.character;\n    utils.log('\\n{0}\\'s turn:', activeName);\n    this.activeTeamIndex = this.getTeamOf[activeName];\n    const defendingTeam = this.teams[1 - this.activeTeamIndex];\n\n    this.changeAllEnergy(this.allCharacters, 2);\n\n    if (activeCharacter.triggerPhase({phase: 'SkipTurn'})) {\n      return;\n    }\n\n    activeCharacter.triggerPhase({\n        allyTeam: this.teams[this.activeTeamIndex],\n        allyTeamIndex: this.activeTeamIndex,\n        enemyTeam: defendingTeam,\n        battle: this,\n        phase: 'TurnStart'\n    });\n\n    this.checkAllHp();\n    for (const i in this.teams) {\n      if (this.teamHasLost(i)) {\n        return;\n      }\n    }\n\n    const targetParams = {\n        currentTarget: utils.pickRandom(defendingTeam),\n        enemyTeam: defendingTeam,\n        phase: 'Target'\n    };\n    activeCharacter.triggerPhase(targetParams);\n\n    var currentTarget = targetParams.currentTarget;\n    if (targetParams.currentTarget.canBeSaved) {\n      const blockParams = {\n          currentTarget: currentTarget,\n          phase: 'Block'\n      };\n      for (const defendingCharacter of defendingTeam) {\n        defendingCharacter.triggerPhase(blockParams);\n      }\n      currentTarget = blockParams.currentTarget;\n    }\n\n    activeCharacter.triggerPhase({\n        battle: this,\n        currentTarget: currentTarget, enemyTeam: defendingTeam,\n        phase: 'PostTarget'\n    });\n\n    utils.log('Main target: {0}', currentTarget.character);\n\n    const damageBase = utils.pickRandomWithinRange(\n        activeCharacter.attackLow,\n        activeCharacter.attackHigh\n    );\n    utils.log('Attack base damage: {0}', damageBase);\n\n    const preDamageParams = {\n        battle: this,\n        currentTarget: currentTarget,\n        damageBase: damageBase,\n        damageFinal: damageBase,\n        enemyTeam: defendingTeam,\n        phase: 'PreDamage'\n    };\n    activeCharacter.triggerPhase(preDamageParams);\n    if (preDamageParams.damageFinal !== damageBase) {\n      utils.log('Attack final damage: {0}', preDamageParams.damageFinal);\n    }\n\n    utils.log('Normal attack:');\n    currentTarget.takeDamage({\n        amount: preDamageParams.damageFinal,\n        battle: this,\n        source: activeCharacter\n    });\n\n    activeCharacter.triggerPhase({\n        allyTeam: this.teams[this.activeTeamIndex],\n        phase: 'PostDamage'\n    });\n\n    if (activeCharacter.poison > 0) {\n      utils.log('{0} takes poison damage', activeCharacter.character);\n      activeCharacter.changeHp({amount: -activeCharacter.poison});\n    }\n    this.checkAllHp();\n  }\n\n  teamHasLost(index) {\n    return this.teams[index].length === 0;\n  }\n}\n","import {Battle} from './battle.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function runDungeon(team, waves) {\r\n  var currTeam = team;\r\n  for (const character of currTeam) {\r\n    character.processedInitCharacter = false;\r\n  }\r\n  utils.log('\\nTeam 0: {0}', JSON.stringify(team));\r\n  utils.log('\\n\\nStarting dungeon');\r\n  for (const index in waves) {\r\n    utils.log('\\nloading wave {0}', index);\r\n    const wave = waves[index];\r\n    utils.log('Team 1: {0}', JSON.stringify(wave));\r\n    const battle = new Battle(currTeam, wave);\r\n    utils.log(utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.log(utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.teams[0];\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function runMany(team, waves, numRuns) {\r\n  var winsForTeam0 = 0;\r\n  for (var i = 0; i < numRuns; i++) {\r\n    if (runDungeon(team, waves) === 0) {\r\n      winsForTeam0++;\r\n    }\r\n  }\r\n  return winsForTeam0;\r\n}\r\n","import * as data from './data.js';\r\nimport * as global from './global.js';\r\nimport * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function outputTest(players, selectedDungeon, numRuns) {\r\n  const output = [];\r\n  const team = [];\r\n\r\n  for (const player of players) {\r\n    if (player.username === '') {\r\n      continue;\r\n    }\r\n    output.push(utils.format('Player found: {0}', player.username));\r\n\r\n    const toEquip = [];\r\n    for (const item of player.items) {\r\n      if (item.name === '') {\r\n        continue;\r\n      }\r\n      output.push(utils.format('Item found: {0} {1}', item.name, item.tier));\r\n      toEquip.push(item);\r\n    }\r\n    if (toEquip.length === 0) {\r\n      output.push('No items found');\r\n    }\r\n    output.push('');\r\n\r\n    team.push({\r\n      character: player.username,\r\n      hp: 100 + player.monuments.Health * 5,\r\n      hpMax: 100 + player.monuments.Health * 5,\r\n      speed: 10 + player.monuments.Speed * 1,\r\n      attackLow: 1 + player.monuments.Power * 1,\r\n      attackHigh: 10 + player.monuments.Power * 1,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip,\r\n      angelAvailable: player.monuments.Angel\r\n    });\r\n  }\r\n  \r\n  const [season, dungeon] = JSON.parse(selectedDungeon);\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  global.setSeason(3);\r\n  global.setVerbose(false);\r\n  global.setOutput(null);\r\n  const numWins = simulator.runMany(team, waves, numRuns * 1);\r\n\r\n  output.push(utils.format('Wins out of {0} runs: {1} ({2}%)',\r\n                           numRuns, numWins, numWins * 100 / numRuns));\r\n  const winratePercentage = Math.round((1 + numWins) * 1000 / (numRuns + 2));\r\n  output.push(utils.format('Estimated winrate: {0}%', winratePercentage / 10.0));\r\n  output.push('\\nExample Run:');\r\n  global.setOutput([]);\r\n  global.setVerbose(true);\r\n  output.push('\\nWinning team: ' + simulator.runDungeon(team, waves));\r\n  utils.extend(output, global.output);\r\n  return output.join('\\n');\r\n}\r\n","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank();\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;\r\n","import ItemDropdown from './ItemDropdown.js';\nimport { parseInventory, parseMonuments } from '../dungeonUtils.js';\nimport { useState } from 'react';\n\nfunction PlayerForm(props) {\n  const [items, setItems] = useState(props.player.items);\n  const [monuments, setMonuments] = useState(props.player.monuments);\n  const [rawInput, setRawInput] = useState('');\n\n  return (\n    <div>\n      Load from !api e or !appr:&nbsp;\n      <textarea value={rawInput} onChange={(event) => {\n        var newPlayer = parseInventory(event.target.value);\n        if (newPlayer === null) {\n          newPlayer = props.player;\n        }\n        var newMonuments = parseMonuments(event.target.value);\n        if (newMonuments === null) {\n          newMonuments = props.player.monuments;\n        }\n        props.onPlayerChanged(newPlayer.username, newPlayer.items, newMonuments)\n        setItems(newPlayer.items);\n        setMonuments(newMonuments);\n        setRawInput('');\n      }} />\n      <br />\n      Username:\n      <input value={props.player.username} onChange={(event) => {\n        props.onPlayerChanged(event.target.value, props.player.items, props.player.monuments);\n      }} />\n      {items.map((item, index) =>\n        <ItemDropdown\n          key={index}\n          item={item}\n          onItemChanged={(name, tier) => {\n            let newItems = [...items];\n            newItems[index] = {name: name, tier: parseInt(tier)};\n            setItems(newItems);\n            props.onPlayerChanged(props.player.username, newItems, props.player.monuments);\n          }}\n        />\n      )}\n      Monuments:\n      <br/>\n      Health:\n      <input type=\"number\" min={0} value={props.player.monuments.Health} onChange={(event) => {\n        let newMonuments = {...monuments};\n        newMonuments.Health = event.target.value;\n        setMonuments(newMonuments);\n        props.onPlayerChanged(\n            props.player.username,\n            props.player.items,\n            newMonuments);\n      }} />\n      &nbsp;\n      Power:\n      <input type=\"number\" min={0} value={props.player.monuments.Power} onChange={(event) => {\n        let newMonuments = {...monuments};\n        newMonuments.Power = event.target.value;\n        setMonuments(newMonuments);\n        props.onPlayerChanged(\n            props.player.username,\n            props.player.items,\n            newMonuments);\n      }} />\n      &nbsp;\n      Speed:\n      <input type=\"number\" min={0} value={props.player.monuments.Speed} onChange={(event) => {\n        let newMonuments = {...monuments};\n        newMonuments.Speed = event.target.value;\n        setMonuments(newMonuments);\n        props.onPlayerChanged(\n            props.player.username,\n            props.player.items,\n            newMonuments);\n      }} />\n      &nbsp;\n      Angel:\n      <input type=\"checkbox\" checked={props.player.monuments.Angel} onChange={(event) => {\n        let newMonuments = {...monuments};\n        newMonuments.Angel = event.target.checked;\n        setMonuments(newMonuments);\n        props.onPlayerChanged(\n            props.player.username,\n            props.player.items,\n            newMonuments);\n      }} />\n      <br/>\n      <br/>\n    </div>\n  );\n}\n\nexport default PlayerForm;\n","import * as data from '../data.js';\r\nimport Dropdown from './Dropdown.js';\r\nimport { outputTest } from '../test.js';\r\nimport PlayerForm from './PlayerForm.js';\r\nimport { useState } from 'react';\r\n\r\nfunction Simulator() {\r\n  const dungeonList = data.getDungeonList();\r\n  const [numRuns, setNumRuns] = useState(100);\r\n  const [selectedDungeon, setSelectedDungeon] = useState('[3,0]');\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [players, setPlayers] = useState([\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer()\r\n  ]);\r\n\r\n  function getInitialPlayer() {\r\n    return {\r\n      username: \"\",\r\n      items: [\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem()\r\n      ],\r\n      monuments: {\r\n        Health: 0,\r\n        Power: 0,\r\n        Speed: 0,\r\n        Angel: false\r\n      }\r\n    };\r\n  }\r\n  \r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunTest() {\r\n    const output = outputTest(players, selectedDungeon, numRuns);\r\n    setOutputText(output);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {players.map((player, index) =>\r\n        <PlayerForm\r\n          key={index}\r\n          player={player}\r\n          onPlayerChanged={(username, items, monuments) => {\r\n            let newPlayers = [...players];\r\n            newPlayers[index] = {\r\n              username: username,\r\n              items: items,\r\n              monuments: monuments\r\n            };\r\n            setPlayers(newPlayers);\r\n          }}\r\n        />\r\n      )}\r\n      [Season, Dungeon]:\r\n      <Dropdown\r\n        selectedOption={selectedDungeon}\r\n        onChange={(event) => {setSelectedDungeon(event.target.value);}}\r\n        options={dungeonList}\r\n      />\r\n      <br/>\r\n      Number of runs:\r\n      <input type=\"number\" min={0} value={numRuns} onChange={(event) => {\r\n        setNumRuns(parseInt(event.target.value));\r\n      }} />\r\n      <br/>\r\n      <button onClick={onRunTest}>\r\n        Run Test\r\n      </button>\r\n      <div style={{whiteSpace: 'pre-line'}}>{outputText}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import Simulator from \"./components/Simulator.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Boxbox Dungeon SiMulator (BDSM)</h1>\r\n      <h3>The simulator has been updated with known information from Season 3!</h3>\r\n      <h3>(The pity system is currently not implemented)</h3>\r\n      <p>Enter your party's items and monuments.</p>\r\n      <br />\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}