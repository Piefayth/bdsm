{"version":3,"sources":["utils.js","../data sync /^/.//season_.*/.json$","simulator.js","test.js","App.js","index.js"],"names":["logIf","bool","toLog","console","log","formatDescriptionWithTier","description","tier","re","current","m","match","replace","eval","extend","iterable1","iterable2","index","push","all","iterable","condition","reduce","accumulator","currentValue","sum","key","total","i","pickRandom","weightKey","r","Math","floor","random","weight","Error","pickRandomWithinRange","lower","upper","deepCopyJson","obj","JSON","parse","stringify","_mutateTemplate","template","scale","getScaledTemplate","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","resolve","module","exports","Battle","team1","team2","verbose","this","initTeams","teams","allCharacters","getTeamOf","addCopyOfCharacterToTeam","character","teamIndex","toAdd","utils","name","originalName","copyNum","team","pos","position","findPositionWithinTeam","splice","amount","originalHp","kill","characters","addEnergyTo","activePlayerName","activePlayer","activePlayerTeamIndex","defendingTeam","mainAttackTargetName","damageAmount","loseHp","MOBS_BY_SEASON","buttontest","waves","season","dungeon","dungeonsForSeason","require","_loadDungeon","currTeam","wave","battle","tick","teamHasLost","getTeam","simulator","App","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b80b9127.chunk.js","sourcesContent":["export function logIf(bool, toLog) {\r\n  if (bool) {\r\n    console.log(toLog);\r\n  }\r\n}\r\n\r\nexport function formatDescriptionWithTier(description, tier) {\r\n  const re = /\\{([\\dt\\+\\-\\*]+)\\}/;\r\n  var current = description;\r\n  var m = current.match(re);\r\n  while (m != null) {\r\n    current = current.replace(\r\n        m[0],\r\n        eval(m[1].replace('t', tier))\r\n    );\r\n    m = current.match(re);\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (key == null) {\r\n      if (typeof currentValue == 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n    total++;\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  const total = sum(iterable, weightKey);\r\n  var r = Math.floor(Math.random() * total);\r\n\r\n  for (const key in iterable) {\r\n    var weight = 1;\r\n    if (weightKey != null) {\r\n      weight = iterable[key][weightKey];\r\n    }\r\n    if (r < weight) {\r\n      return key;\r\n    }\r\n    r -= weight;\r\n  }\r\n\r\n  throw Error(\r\n      'Internal Error: Something went wrong while selecting random element from '\r\n      + iterable\r\n      + ' with weightKey '\r\n      + weightKey\r\n  );\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction _mutateTemplate(template, scale) {\r\n  if (typeof template != 'object') {\r\n    return template;\r\n  }\r\n\r\n  if ('Base' in template && 'Scaling' in template) {\r\n    return template['Base'] + template['Scaling'] * scale;\r\n  }\r\n\r\n  // recursive check\r\n  for (const key in template) {\r\n    template[key] = _mutateTemplate(template[key], scale);\r\n  }\r\n  return template;\r\n}\r\n\r\nexport function getScaledTemplate(template, scale) {\r\n  const obj = deepCopyJson(template);\r\n  return _mutateTemplate(obj, scale);\r\n}\r\n","var map = {\n\t\"./season_2/items/energy_items.json\": 12,\n\t\"./season_2/items/passive_items.json\": 13,\n\t\"./season_2/mobs/dungeon_0.json\": 14,\n\t\"./season_2/mobs/dungeon_1.json\": 15,\n\t\"./season_2/mobs/dungeon_2.json\": 16,\n\t\"./season_2/mobs/dungeon_3.json\": 17,\n\t\"./season_2/mobs/dungeon_4.json\": 18,\n\t\"./season_2/mobs/dungeon_5.json\": 19,\n\t\"./season_2/mobs/dungeon_6.json\": 20,\n\t\"./season_2/mobs/dungeon_7.json\": 21,\n\t\"./season_2/mobs/summon_templates.json\": 22\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 11;","import * as utils from './utils';\r\n\r\nexport function findPositionWithinTeam(name, team) {\r\n  for (const position in team) {\r\n    const c = team[position];\r\n    if (c['Character'] == name) {\r\n      return position;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport function runDungeon(team, waves, verbose=false) {\r\n  utils.logIf(verbose, '\\n\\n\\nStarting dungeon');\r\n  var currTeam = team;\r\n  for (const index in waves) {\r\n    utils.logIf(verbose, 'loading wave ' + index);\r\n    const wave = waves[index];\r\n    utils.logIf(verbose, wave);\r\n    const battle = new Battle(currTeam, wave, verbose);\r\n    utils.logIf(verbose, utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.logIf(verbose, utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.getTeam(0);\r\n  }\r\n  return 0;\r\n}\r\n\r\nclass Battle {\r\n  constructor(team1, team2, verbose=false) {\r\n    this.initTeams(team1, team2);\r\n    this.verbose = verbose;\r\n  }\r\n\r\n  initTeams(team1, team2) {\r\n    this.teams = [[], []];\r\n    this.allCharacters = {};\r\n    this.getTeamOf = {};\r\n    for (const i in team1) {\r\n      this.addCopyOfCharacterToTeam(team1[i], 0);\r\n    }\r\n    for (const i in team2) {\r\n      this.addCopyOfCharacterToTeam(team2[i], 1);\r\n    }\r\n  }\r\n\r\n  addCopyOfCharacterToTeam(character, teamIndex) {\r\n    const toAdd = utils.deepCopyJson(character);\r\n    var name = toAdd['Character'];\r\n    const originalName = name;\r\n    var copyNum = 1;\r\n    while (name in this.allCharacters) {\r\n      copyNum++;\r\n      name = originalName + ' ' + copyNum;\r\n    }\r\n    toAdd['Character'] = name;\r\n    this.getTeamOf[name] = teamIndex;\r\n    this.allCharacters[name] = toAdd;\r\n    this.teams[teamIndex].push(toAdd);\r\n  }\r\n\r\n  kill(name) {\r\n    utils.logIf(this.verbose, 'killing: ' + name);\r\n    const team = this.teams[this.getTeamOf[name]];\r\n    const pos = findPositionWithinTeam(name, team);\r\n    if (pos < 0) {\r\n      throw Error('Internal Error: ' + name + ' is not in team ' + team);\r\n    }\r\n    delete this.allCharacters[name];\r\n    delete this.getTeamOf[name];\r\n    team.splice(pos, 1);\r\n  }\r\n\r\n  loseHp(name, amount) {\r\n    const character = this.allCharacters[name];\r\n    const originalHp = character['HP'];\r\n    character['HP'] -= amount;\r\n    utils.logIf(this.verbose, name + ' lost hp: ' + originalHp + ' -> ' + character['HP']);\r\n    if (character['HP'] <= 0) {\r\n      character['HP'] = 0;\r\n      this.kill(name);\r\n    }\r\n  }\r\n\r\n  addEnergyTo(characters) {\r\n    for (const key in characters) {\r\n      characters[key]['Energy'] += 2;\r\n    }\r\n  }\r\n\r\n  tick() {\r\n    this.addEnergyTo(this.allCharacters);\r\n\r\n    const activePlayerName = utils.pickRandom(this.allCharacters, 'Speed');\r\n    utils.logIf(this.verbose, '\\n' + activePlayerName + '\\'s turn:');\r\n    const activePlayer = this.allCharacters[activePlayerName];\r\n\r\n    const activePlayerTeamIndex = this.getTeamOf[activePlayerName];\r\n    const attackingTeam = this.teams[activePlayerTeamIndex];\r\n    const defendingTeam = this.teams[1 - activePlayerTeamIndex];\r\n\r\n    const mainAttackTargetIndex = utils.pickRandom(defendingTeam);\r\n    const mainTarget = defendingTeam[mainAttackTargetIndex];\r\n    const mainAttackTargetName = mainTarget['Character'];\r\n    utils.logIf(this.verbose, 'main target: ' + mainAttackTargetName);\r\n\r\n    var damageAmount = utils.pickRandomWithinRange(\r\n        activePlayer['Attack Low'],\r\n        activePlayer['Attack High']\r\n    );\r\n    utils.logIf(this.verbose, 'main attack damage: ' + damageAmount);\r\n\r\n    this.loseHp(mainAttackTargetName, damageAmount);\r\n  }\r\n\r\n  teamHasLost(index) {\r\n    return utils.all(\r\n        this.teams[index],\r\n        (character) => {\r\n          return character['HP'] <= 0;\r\n        }\r\n    );\r\n  }\r\n\r\n  getTeam(index) {\r\n    return this.teams[index];\r\n  }\r\n}\r\n","import * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\n\r\nfunction _loadDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    dungeonsForSeason[dungeon] = require(\r\n        '../data/season_' + season + '/mobs/dungeon_' + dungeon + '.json'\r\n    );\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function buttontest() {\r\n  const season = 2;\r\n  const dungeon = 0;\r\n  const waves = _loadDungeon(season, dungeon);\r\n  console.log(waves);\r\n  const players = [\r\n    {\r\n      \"Character\": \"Zethorix\",\r\n      \"HP\": 100,\r\n      \"HP Max\": 100,\r\n      \"Speed\": 10,\r\n      \"Attack Low\": 1,\r\n      \"Attack High\": 10,\r\n      \"Energy\": 0,\r\n      \"Summoned\": false,\r\n      \"Items\": {}\r\n    },\r\n    {\r\n      \"Character\": \"Oof\",\r\n      \"HP\": 100,\r\n      \"HP Max\": 100,\r\n      \"Speed\": 10,\r\n      \"Attack Low\": 1,\r\n      \"Attack High\": 10,\r\n      \"Energy\": 0,\r\n      \"Summoned\": false,\r\n      \"Items\": {}\r\n    }\r\n  ];\r\n  console.log('winning team: ' + simulator.runDungeon(players, waves, true));\r\n}\r\n","import {buttontest} from \"./test.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      Hello World!\r\n      <br />\r\n      <button onClick={buttontest}>\r\n        Run Test\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}