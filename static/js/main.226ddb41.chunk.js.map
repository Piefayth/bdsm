{"version":3,"sources":["utils.js","../data sync /^/.//season_.*/.json$","../data sync /^/.//season_.*//items//passive_items/.json$","../data sync /^/.//season_.*//items//energy_items/.json$","../data sync /^/.//season_.*//mobs//summon_templates/.json$","data.js","simulator.js","components/Dropdown.js","components/ItemDropdown.js","components/Simulator.js","test.js","App.js","index.js"],"names":["logIf","bool","logs","toLog","console","log","push","formatDescriptionWithTier","description","tier","re","current","m","match","replace","eval","extend","iterable1","iterable2","index","all","iterable","condition","reduce","accumulator","currentValue","sum","key","total","i","withProbability","p","Math","random","pickRandom","weightKey","r","floor","weight","Error","pickRandomWithinRange","lower","upper","deepCopyJson","obj","JSON","parse","stringify","_mutateTemplate","template","scale","getScaledTemplate","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","resolve","module","exports","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getDungeon","season","dungeon","dungeonsForSeason","waves","require","wave","j","character","getItems","_preprocessCharacterItems","items","data","triggers","item","name","triggerTypes","triggerType","runDungeon","team","output","verbose","utils","currTeam","battle","Battle","tick","teamHasLost","getTeam","team1","team2","this","summonedChicken","initTeams","_items","_templates","teams","allCharacters","getTeamOf","addCopyOfCharacterToTeam","teamIndex","toAdd","originalName","copyNum","triggerPhase","getTemplates","summon","getCharacterAndName","pos","position","_findPositionWithinTeam","splice","amount","originalHp","target","source","damageAmount","changeHp","originalSpeed","max","originalAttackLow","originalAttackHigh","amountToGain","originalEnergy","kill","phase","activeCharacter","other","characterName","allyTeamIndex","allyTeam","enemyTeam","itemName","addSummonToTeam","cost","changeEnergy","dealDamage","changeSpeed","length","c","changeAttack","minHp","a","min","Infinity","addedEnergy","enemy","currentTarget","finalDamage","round","baseDamage","missingHpProportion","ally","attackIncrease","useItemAbility","activeName","activeTeamIndex","defendingTeam","_addEnergyTo","checkAllHp","defendingCharacter","Dropdown","props","value","selectedOption","onChange","options","option","ItemDropdown","itemNames","obtainableItems","unobtainableItems","type","sort","getAllItemNamesAndBlank","event","onItemChanged","Simulator","useState","outputText","setOutputText","setItems","newItems","onClick","toEquip","players","simulator","join","outputTest","style","whiteSpace","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAAO,SAASA,MAAMC,EAAMC,EAAMC,GAC5BF,GACFG,QAAQC,IAAIF,GAEF,MAARD,GAAiC,kBAAVC,GACzBD,EAAKI,KAAKH,GAIP,SAASI,0BAA0BC,YAAaC,MAIrD,IAHA,IAAMC,GAAK,mBACPC,QAAUH,YACVI,EAAID,QAAQE,MAAMH,IACV,MAALE,GACLD,QAAUA,QAAQG,QACdF,EAAE,GACFG,KAAKH,EAAE,GAAGE,QAAQ,IAAKL,QAE3BG,EAAID,QAAQE,MAAMH,IAEpB,OAAOC,QAGF,SAASK,OAAOC,EAAWC,GAChC,IAAK,IAAMC,KAASD,EAClBD,EAAUX,KAAKY,EAAUC,IAItB,SAASC,IAAIC,EAAUC,GAC5B,OAAOD,EAASE,QAAO,SAACC,EAAaC,GACnC,OAAOD,GAAeF,EAAUG,MAC/B,GAGE,SAASC,IAAIL,GAAqB,IAAXM,EAAU,uDAAN,KAC5BC,EAAQ,EACZ,IAAK,IAAMC,KAAKR,EAAU,CACxB,IAAMI,EAAeJ,EAASQ,GAC9B,GAAmB,oBAARF,EAIX,GAAW,MAAPA,EAQAA,KAAOF,EACTG,GAASH,EAAaE,GAGxBC,QAZA,CACE,GAA4B,kBAAjBH,EAA2B,CACpCG,GAASH,EACT,SAEFG,SARAA,GAASD,EAAIF,GAiBjB,OAAOG,EAGF,SAASE,gBAAgBC,GAC9B,OAAOC,KAAKC,SAAWF,EAGlB,SAASG,WAAWb,GAA2B,IAAjBc,EAAgB,uDAAN,KACvCP,EAAQF,IAAIL,EAAUc,GACxBC,EAAIJ,KAAKK,MAAML,KAAKC,SAAWL,GAEnC,IAAK,IAAMD,KAAON,EAAU,CAC1B,IAAIiB,EAAS,EAMb,GALyB,oBAAdH,EACTG,EAASH,EAAUd,EAASM,IACN,MAAbQ,IACTG,EAASjB,EAASM,GAAKQ,IAErBC,EAAIE,EACN,OAAOX,EAETS,GAAKE,EAGP,MAAMC,MACF,4EACElB,EACA,mBACAc,GAID,SAASK,sBAAsBC,EAAOC,GAC3C,OAAOD,EAAQT,KAAKK,MAAML,KAAKC,UAAYS,EAAQD,EAAQ,IAGtD,SAASE,aAAaC,GAC3B,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGnC,SAASI,gBAAgBC,EAAUC,GACjC,GAAuB,iBAAZD,EACT,OAAOA,EAGT,GAAI,SAAUA,GAAY,YAAaA,EACrC,OAAOA,EAAQ,KAAWA,EAAQ,QAAcC,EAIlD,IAAK,IAAMvB,KAAOsB,EAChBA,EAAStB,GAAOqB,gBAAgBC,EAAStB,GAAMuB,GAEjD,OAAOD,EAGF,SAASE,kBAAkBF,EAAUC,GAE1C,OAAOF,gBADKL,aAAaM,GACGC,GAnH9B,koB,4/LCAA,IAAIE,EAAM,CACT,qCAAsC,EACtC,sCAAuC,EACvC,iCAAkC,GAClC,iCAAkC,GAClC,kCAAmC,GACnC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,iCAAkC,GAClC,wCAAyC,IAI1C,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIpB,MAAM,uBAAyBe,EAAM,KAEjD,MADAK,EAAEC,KAAO,mBACHD,EAEP,OAAOP,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUP,EACzBQ,EAAOC,QAAUZ,EACjBA,EAAeE,GAAK,I,ythBCnCpB,IAAIH,EAAM,CACT,sCAAuC,GAIxC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIpB,MAAM,uBAAyBe,EAAM,KAEjD,MADAK,EAAEC,KAAO,mBACHD,EAEP,OAAOP,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUP,EACzBQ,EAAOC,QAAUZ,EACjBA,EAAeE,GAAK,I,gBCtBpB,IAAIH,EAAM,CACT,qCAAsC,GAIvC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIpB,MAAM,uBAAyBe,EAAM,KAEjD,MADAK,EAAEC,KAAO,mBACHD,EAEP,OAAOP,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUP,EACzBQ,EAAOC,QAAUZ,EACjBA,EAAeE,GAAK,I,gBCtBpB,IAAIH,EAAM,CACT,wCAAyC,IAI1C,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIpB,MAAM,uBAAyBe,EAAM,KAEjD,MADAK,EAAEC,KAAO,mBACHD,EAEP,OAAOP,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUP,EACzBQ,EAAOC,QAAUZ,EACjBA,EAAeE,GAAK,I,uGCpBdW,EAAiB,GACjBC,EAAkB,GAClBC,EAAuB,GACvBC,EAAsB,GAErB,SAASC,EAAWC,EAAQC,GAC3BD,KAAUL,IACdA,EAAeK,GAAU,IAE3B,IAAME,EAAoBP,EAAeK,GAEzC,KAAMC,KAAWC,GAAoB,CACnC,IAAMC,EAAQC,MACV,YAAoBJ,EAAS,iBAAmBC,EAAU,SAE9D,IAAK,IAAM3C,KAAK6C,EAAO,CACrB,IAAME,EAAOF,EAAM7C,GACnB,IAAK,IAAMgD,KAAKD,EAAM,CACpB,IAAME,EAAYF,EAAKC,GACnB,WAAYC,UACPA,EAAS,QAItBL,EAAkBD,GAAWE,EAG/B,OAAOD,EAAkBD,GAGpB,SAASO,EAASR,GAOvB,OANMA,KAAUJ,IACdA,EAAgBI,GAAU,CACxB,QAAWI,MAAQ,YAAoBJ,EAAS,6BAChD,OAAUI,MAAQ,YAAoBJ,EAAS,8BAG5CJ,EAAgBI,G,oBCpCzB,SAASS,EAA0BF,EAAWP,GAC5C,KAAI,cAAeO,GAAnB,CAGA,IAAMG,EAAQC,EAAcX,GACtBY,EAAW,GACjB/E,QAAQC,IAAIyE,GANwC,oBAOjCA,EAAS,OAPwB,IAOpD,2BAAuC,CAAC,IAAD,EAA5BM,EAA4B,QAC/BC,EAAOD,EAAI,KACXE,EAAeD,KAAQJ,EAAK,OAC5B,CAAC,aACDA,EAAK,QAAYI,GAAjB,SAJ+B,cAKXC,GALW,IAKrC,2BAAwC,CAAC,IAA9BC,EAA6B,QAChCA,KAAeJ,EAIrBA,EAASI,GAAajF,KAAK8E,GAHzBD,EAASI,GAAe,CAACH,IAPQ,gCAPa,8BAqBpD,OADAN,EAAS,UAAgBK,EAClBL,GAwBF,SAASU,EAAWC,EAAMf,EAAOH,GAAqC,IAA7BmB,EAA4B,uDAArB,KAAMC,EAAe,wDAC1EC,IAAYD,EAASD,EAAQ,0BAC7B,IAF0E,EAEtEG,EAAWJ,EAF2D,cAGlDA,GAHkD,IAG1E,2BAA8B,CAAC,IAApBX,EAAmB,QAC5BE,EAA0BF,EAAWP,IAJmC,8BAM1E,IAAK,IAAMpD,KAASuD,EAAO,CACzBkB,IAAYD,EAASD,EAAQ,gBAAkBvE,GAC/C,IAFyB,EAEnByD,EAAOF,EAAMvD,GAFM,cAGDyD,GAHC,IAGzB,2BAA8B,CAAC,IAApBE,EAAmB,QAC5BE,EAA0BF,EAAWP,IAJd,8BAMzBqB,IAAYD,EAASD,EAAQd,GAC7B,IAAMkB,EAAS,IAAIC,EAAOF,EAAUjB,EAAML,EAAQmB,EAAQC,GAE1D,IADAC,IAAYD,EAASD,EAAQE,IAAmBE,MACnC,CAKX,GAJAA,EAAOE,OAEPJ,IAAYD,EAASD,EAAQE,IAAmBE,IAE5CA,EAAOG,YAAY,GACrB,OAAO,EAGT,GAAIH,EAAOG,YAAY,GACrB,MAGJJ,EAAWC,EAAOI,QAAQ,GAE5B,OAAO,E,IAGHH,E,WACJ,WAAYI,EAAOC,EAAO7B,GAAqC,IAA7BmB,EAA4B,uDAArB,KAAMC,EAAe,4EAC5DU,KAAKV,QAAUA,EACfU,KAAK9B,OAASA,EACd8B,KAAKX,OAASA,EACdW,KAAKC,gBAAkB,GACvBD,KAAKE,UAAUJ,EAAOC,G,4CAGxB,WAIE,MAHM,WAAYC,OAChBA,KAAKG,OAAStB,EAAcmB,KAAK9B,SAE5B8B,KAAKG,S,0BAGd,WD/BK,IAAsBjC,ECmCzB,MAHM,eAAgB8B,OACpBA,KAAKI,aDjCkBlC,ECiCa8B,KAAK9B,UDhC7BF,IACdA,EAAoBE,GAAUI,MAAQ,YAAoBJ,EAAS,gCAE9DF,EAAoBE,KC+BlB8B,KAAKI,a,uBAGd,SAAUN,EAAOC,GAIf,IAAK,IAAMvE,KAHXwE,KAAKK,MAAQ,CAAC,GAAI,IAClBL,KAAKM,cAAgB,GACrBN,KAAKO,UAAY,GACDT,EACdE,KAAKQ,yBAAyBV,EAAMtE,GAAI,GAE1C,IAAK,IAAMA,KAAKuE,EACdC,KAAKQ,yBAAyBT,EAAMvE,GAAI,K,sCAI5C,SAAyBiD,EAAWgC,GAKlC,IAJA,IAAMC,EAAQnB,IAAmBd,GAC7BO,EAAO0B,EAAK,UACVC,EAAe3B,EACjB4B,EAAU,EACP5B,KAAQgB,KAAKM,eAElBtB,EAAO2B,EAAe,OADtBC,EAGFF,EAAK,UAAgB1B,EACrBgB,KAAKO,UAAUvB,GAAQyB,EACvBT,KAAKM,cAActB,GAAQ0B,EAC3BV,KAAKa,aAAa,cAAeH,GACjCV,KAAKK,MAAMI,GAAWxG,KAAKyG,K,6BAG7B,SAAgB3B,EAAM0B,GACpB,IAAM7D,EAAWoD,KAAKc,eAAe/B,EAAI,MACnCgC,EAASxB,IAAwB3C,EAAUmC,EAAI,MACrDQ,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,aAAe0B,EAAM,UAAgB,aAAeN,GAC3F9B,EAA0BoC,EAAQf,KAAK9B,QACvC8B,KAAKQ,yBAAyBO,EAAQN,K,iCAGxC,SAAoBvD,GAClB,MAAkB,kBAAPA,EACF,CAAC8C,KAAKM,cAAcpD,GAAKA,GAE3B,CAACA,EAAIA,EAAE,a,kBAGhB,SAAKA,GACH,MAA0B8C,KAAKgB,oBAAoB9D,GAAnD,mBAAkB8B,GAAlB,WACAO,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,YAAcL,GACrD,IAAMI,EAAOY,KAAKK,MAAML,KAAKO,UAAUvB,IACjCiC,EAjHV,SAAiCjC,EAAMI,GACrC,IAAK,IAAM8B,KAAY9B,EAErB,GADUA,EAAK8B,GACV,YAAkBlC,EACrB,OAAOkC,EAGX,OAAQ,EA0GMC,CAAwBnC,EAAMI,GAC1C,GAAI6B,EAAM,EACR,MAAM/E,MAAM,kBAAoB8C,EAAO,mBAAqBI,UAEvDY,KAAKM,cAActB,UACnBgB,KAAKO,UAAUvB,GACtBI,EAAKgC,OAAOH,EAAK,GACbjC,KAAQgB,KAAKC,wBACRD,KAAKC,gBAAgBjB,K,sBAIhC,SAAS9B,EAAImE,GACX,MAA0BrB,KAAKgB,oBAAoB9D,GAAnD,mBAAOuB,EAAP,KAAkBO,EAAlB,KACMsC,EAAa7C,EAAS,GAC5BA,EAAS,IAAU4C,EACf5C,EAAS,GAASA,EAAU,YAC9BA,EAAS,GAASA,EAAU,WAE1BA,EAAS,IAAU,GACrBuB,KAAKa,aAAa,QAASpC,GAE7Bc,IACIS,KAAKV,QACLU,KAAKX,OACLL,EAAO,kBAAoBqC,EAAS,KAAOC,EAAa,OAAS7C,EAAS,M,wBAIhF,SAAW8C,EAAQC,EAAQH,GACzB,IAAMI,EAAe,CAACJ,GACtBrB,KAAKa,aACD,cACAU,EACA,CAAC,OAAUC,EAAQ,OAAUC,IAEjCzB,KAAK0B,SAASH,GAASE,EAAa,M,yBAGtC,SAAYvE,EAAImE,GACd,MAA0BrB,KAAKgB,oBAAoB9D,GAAnD,mBAAOuB,EAAP,KAAkBO,EAAlB,KACM2C,EAAgBlD,EAAS,MAC/BA,EAAS,MAAY9C,KAAKiG,IAAInD,EAAS,MAAY4C,EAAQ,GAC3D9B,IACIS,KAAKV,QACLU,KAAKX,OACLL,EAAO,qBAAuBqC,EAAS,KAAOM,EAAgB,OAASlD,EAAS,S,0BAItF,SAAavB,EAAImE,GACf,MAA0BrB,KAAKgB,oBAAoB9D,GAAnD,mBAAOuB,EAAP,KAAkBO,EAAlB,KACM6C,EAAoBpD,EAAU,cAC9BqD,EAAqBrD,EAAU,eAC/BsD,EAAepG,KAAKiG,KAAKC,EAAmBR,GAClD5C,EAAU,eAAiBsD,EAC3BtD,EAAU,gBAAkBsD,EAC5BxC,IACIS,KAAKV,QACLU,KAAKX,OACLL,EACA,sBACAqC,EACA,KACA,CAACQ,EAAmBC,GACpB,OACA,CAACrD,EAAU,cAAeA,EAAU,mB,0BAI1C,SAAavB,EAAImE,GACf,MAA0BrB,KAAKgB,oBAAoB9D,GAAnD,mBAAOuB,EAAP,KAAkBO,EAAlB,KACMgD,EAAiBvD,EAAS,OAChCA,EAAS,OAAa9C,KAAKiG,IAAInD,EAAS,OAAa4C,EAAQ,GAC7D9B,IACIS,KAAKV,QACLU,KAAKX,OACLL,EAAO,sBAAwBqC,EAAS,KAAOW,EAAiB,OAASvD,EAAS,U,wBAIxF,WACE,IAAK,IAAMO,KAAQgB,KAAKM,cAAe,CACrC,IAAM7B,EAAYuB,KAAKM,cAActB,GACjCP,EAAS,IAAU,GACrBuB,KAAKiC,KAAKjD,GAERP,EAAS,GAASA,EAAU,YAC9BA,EAAS,GAASA,EAAU,c,4BAKlC,SAAeM,EAAMmD,EAAOC,GAA8B,IAAD,OAAZC,EAAY,uDAAN,KACjD7C,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,kBAAoBN,EAAI,MAC/D,MAAmCiB,KAAKgB,oBAAoBmB,GAA5D,mBAAO1D,EAAP,KAAkB4D,EAAlB,KACMC,EAAgBtC,KAAKO,UAAU8B,GAC/BE,EAAWvC,KAAKK,MAAMiC,GACtBE,EAAYxC,KAAKK,MAAM,EAAIiC,GAC3BG,EAAW1D,EAAI,KACf3E,EAAO2E,EAAI,KAEjB,OAAQmD,GACN,IAAK,cACH,OAAQO,GACN,IAAK,UACL,IAAK,iBACHzC,KAAK0C,gBAAgB3D,EAAMuD,GAC3B,MAEF,QACE,MAAMpG,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,IAAK,YACH,GAAIO,KAAYzC,KAAKtB,WAAL,OAA2B,CACzC,IAAMiE,EAAO3C,KAAKtB,WAAL,OAA0B+D,GAA1B,KACb,GAAIhE,EAAS,OAAakE,EACxB,OAEF3C,KAAK4C,aAAanE,GAAYkE,GAGhC,OAAQF,GACN,IAAK,YACH,IAAK,IAAIjH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAM+F,EAASiB,EAAUjD,IAAiBiD,IAC1CxC,KAAK6C,WACDtB,EACA9C,EACAc,IAA4B,EAAInF,EAAM,EAAIA,IAE9C4F,KAAK8C,YACDvB,EAAM,WACLhC,IAA4B,EAAGnF,IAGtC,MAEF,IAAK,iBACH,GAAwB,IAApBmI,EAASQ,OACX,MAEF,IAASvH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAM+F,EAASgB,EAAShD,IACpBgD,GACA,SAACS,GACC,OAAIA,EAAC,UAAgBA,EAAC,YAAkBX,EAC/B,EAEF,MAGbrC,KAAK0B,SAASH,EAAQnH,EAAOA,GAC7B4F,KAAKiD,aAAa1B,EAAQnH,GAE5B,MAEF,IAAK,mBACH,IAAMmH,EAASiB,EAAUjD,IAAiBiD,IAC1CxC,KAAK6C,WAAWtB,EAAQ9C,EAAW,GAAKrE,GACxC4F,KAAKiD,aAAaxE,EAAWrE,GAC7B,MAEF,IAAK,iBACH,IAAM8I,EAAQX,EAASrH,QACrB,SAACiI,EAAGH,GACF,OAAOrH,KAAKyH,IAAID,EAAGH,EAAC,MAEtBK,KAEI9B,EAASgB,EAAShD,IACpBgD,GACA,SAACS,GACC,OAAIA,EAAC,KAAWE,EACP,EAEF,MAGblD,KAAK0B,SAASH,EAAQ,EAAInH,GAC1B4F,KAAK4C,aAAarB,EAAQ,IAC1B,MAEF,IAAK,mBACH,GAAyB,IAArBiB,EAAUO,OAAc,CAC1B,IAAMxB,EAASiB,EAAU/E,OAAOD,KAAKgF,GAAW,IAChDxC,KAAK6C,WACDtB,EACA9C,EACAc,IAA4B,GAAKnF,EAAM,GAAKA,IAEhD,MAEF,IAAK,IAAMoB,KAAKgH,EAAW,CACzB,IAAMjB,EAASiB,EAAUhH,GACzBwE,KAAK6C,WACHtB,EACA9C,EACAc,IAA4B,EAAInF,EAAM,GAAKA,IAG/C,MAEF,IAAK,cACH4F,KAAK0C,gBAAgB3D,EAAMuD,GAC3B,MAEF,IAAK,iBACH,IAAMf,EAASiB,EAAUjD,IAAiBiD,IAC1C,GAAI/D,EAAS,KAAWA,EAAU,UAAW,CAC3CuB,KAAK6C,WACDtB,EACA9C,EACAc,IAA4B,GAAKnF,EAAM,GAAKA,IAEhD,MAEF,IAAMiH,EAAS9B,IAA4B,EAAInF,EAAM,EAAIA,GACzD4F,KAAK6C,WAAWtB,EAAQ9C,EAAW4C,GACnCrB,KAAK0B,SAASjD,EAAW4C,GACzB,MAEF,IAAK,0BACH,GAAIgB,KAAiBrC,KAAKC,gBACxB,MAEFD,KAAKC,gBAAgBoC,GAAiB,EACtCrC,KAAK0C,gBAAgB3D,EAAMuD,GAC3B,MAEF,IAAK,kBACC/C,IAAsB,KACxBS,KAAK0B,SAASjD,EAAW,EAAIrE,GAE/B,MAEF,IAAK,SACH,IADa,EACTkJ,GAAc,EADL,cAEOd,GAFP,IAEb,2BAA+B,CAAC,IAArBe,EAAoB,QAC7BvD,KAAK6C,WAAWU,EAAO9E,EAAWrE,IAC7BkJ,GAAe/D,IAAsB,OACxCS,KAAK4C,aAAanE,EAAWrE,GAC7BkJ,GAAc,IANL,8BASb,MAEF,QACE,MAAMpH,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,IAAK,SACH,GACO,qBADCO,EAgBJ,MAAMvG,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAd1E,IADuB,EACnBX,EAAS,CAAC,GAAM8B,KADG,cAECb,GAFD,IAEvB,2BAAmC,CAAC,IAAzB/D,EAAwB,QAC7BA,EAAS,GAAS8C,EAAM,KAC1BA,EAAS9C,IAJU,8BAOvB,GAAI8C,EAAM,KAAW8B,IACnB,MAAMnH,MAAM,gEAAkEsG,GAEhFxC,KAAKwD,cAAgBjC,EACrBhC,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,qCAAuCkC,EAAM,WAOxF,MAEF,IAAK,aACH,OAAQkB,GACN,IAAK,kBACHzC,KAAKiD,aAAajD,KAAKwD,eAAgBpJ,GACnCmF,IAAsB,IAAOnF,IAC/B4F,KAAK4C,aAAa5C,KAAKwD,eAAgB,GAEzC,MAEF,IAAK,UACH,GAAyB,IAArBhB,EAAUO,OACZ,MAEF,IAAMxB,EAASiB,EAAUjD,IACrBiD,GACA,SAACQ,GACC,OAAIA,EAAC,YAAkB,EAAKQ,cAAL,UACd,EAEF,MAGbxD,KAAK6C,WAAWtB,EAAQ9C,EAAWc,IAA4B,EAAInF,EAAM,EAAIA,IAC7E,MAEF,IAAK,gBACG,WAAY4F,KAAKwD,gBACrBxD,KAAKwD,cAAL,OAA+B,GAEjCxD,KAAKwD,cAAL,QAAgCpJ,EAChC,MAEF,QACE,MAAM8B,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,IAAK,QACH,OAAQO,GACN,IAAK,kBACL,IAAK,gBACL,IAAK,eACH,GAAIzC,KAAKwD,cAAL,YAAoCnB,EACtC,MAEF,IAAM9C,IAAsB,IAAO,IAAOnF,GACxC,MAEF,GAAI4F,KAAKwD,cAAL,GAA2B/E,EAAS,GAAQ,CAC9Cc,IACIS,KAAKV,QACLU,KAAKX,OACLgD,EAAgB,eAAiBrC,KAAKwD,cAAL,WAErCxD,KAAKwD,cAAgB/E,EACrB,MAEFc,IACIS,KAAKV,QACLU,KAAKX,OACLgD,EAAgB,gBAEpB,MAEF,QACE,MAAMnG,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,IAAK,YACH,OAAQO,GACN,IAAK,WACH,IAAKlD,IAAsB,IAAOnF,GAChC,MAEF4F,KAAKyD,aAAe9H,KAAK+H,MAAM,IAAM1D,KAAK2D,YAC1C,MAEF,IAAK,mBACH,IAAMC,EAAsB5D,KAAKwD,cAAL,GAA2BxD,KAAKwD,cAAc,UAC1ExD,KAAKyD,aAAe9H,KAAKK,MAAM,EAAI4H,EAAsBxJ,GACzD,MAEF,IAAK,gBAAkB,IAAD,gBACAoI,GADA,IACpB,2BAA+B,CAAC,IAArBe,EAAoB,QAC7BvD,KAAK6C,WAAWU,EAAO9E,EAAWuB,KAAK2D,aAFrB,8BAIpB,MAEF,QACE,MAAMzH,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,IAAK,cACH,OAAQO,GACN,IAAK,gBACH,IAAKlD,IAAsB,IAAO,IAAOnF,GACvC,MAEFmF,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,2BACvC+C,EAAK,OAAW,GAAK,EACrB,MAEF,IAAK,eACH,IAAK7C,IAAsB,KACzB,MAEF,IAAMH,EAAOY,KAAKO,UAAU8B,GACtBd,EAASvB,KAAKK,MAAMjB,GAAMG,IAC5BS,KAAKK,MAAMjB,IACX,SAAC4D,GACC,OAAIA,EAAC,WAAiBX,GAGlBW,EAAC,SAFI,EAKF,MAGb,GAAc,MAAVzB,EACF,MAEFvB,KAAK0B,SAASH,EAAQ,EAAInH,GAC1B4F,KAAK4C,aAAarB,EAAQnH,GAC1B,MAEF,IAAK,aACH,IAAKmF,IAAsB,IACzB,MAEFS,KAAK0B,SAASU,EAAK,QAAa,EAAIhI,GACpC,IAAMqH,EAAeW,EAAK,OAC1BX,EAAa,GAAK9F,KAAKiG,IAAI,EAAGH,EAAa,GAAM,EAAIrH,GACrD,MAEF,QACE,MAAM8B,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,IAAK,aACH,OAAQO,GACN,IAAK,mBACH,IAAKlD,IAAsB,IACzB,MAFqB,oBAIJgD,GAJI,IAIvB,2BAA6B,CAAC,IAAnBsB,EAAkB,QAC3B7D,KAAK0B,SAASmC,EAAMzJ,IALC,8BAOvB,MAEF,IAAK,aACH,IAAI0J,EAAiB,EACrB,IAAStI,EAAI,EAAGA,EAAIpB,EAAMoB,IACnB+D,IAAsB,KAG3BuE,IAEF9D,KAAKiD,aAAaxE,EAAWqF,GAC7B,MAEF,IAAK,cACH,IAAMvC,EAASgB,EAAShD,IACpBgD,GACA,SAACS,GACC,OAAIA,EAAC,YAAkBX,GAGnBW,EAAC,SAFI,EAKF,MAGb,GAAc,MAAVzB,EACF,MAEFvB,KAAK0B,SAASH,EAAQ,EAAInH,GAC1B4F,KAAK4C,aAAarB,EAAQnH,GAC1B,MAEF,QACE,MAAM8B,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,IAAK,QACH,OAAQO,GACN,IAAK,iBACH,GAAIzC,KAAKO,UAAUP,KAAKmC,mBAAqBG,EAC3C,MAFmB,oBAIFC,GAJE,IAIrB,2BAA6B,CAAC,IAAnBsB,EAAkB,QACvBA,EAAI,WAAiBxB,GAGzBrC,KAAK0B,SAASmC,EAAMzJ,IARD,8BAUrB,MAEF,QACE,MAAM8B,MAAM,uBAAyBuG,EAAW,wBAA0BP,GAG9E,MAEF,QACE,MAAMhG,MAAM,wBAA0BgG,EAAQ,e,0BAKpD,SAAaA,EAAOC,GAA8B,IAAbC,EAAY,uDAAN,KACzC,GAAMF,KAASC,EAAe,UAA9B,CAD+C,oBAK5BA,EAAe,UAAcD,IALD,IAK/C,2BAAwD,CAAC,IAA9CnD,EAA6C,QACtDiB,KAAK+D,eAAehF,EAAMmD,EAAOC,EAAiBC,IANL,kC,kBAUjD,WACE,IAAM4B,EAAazE,IAAiBS,KAAKM,cAAe,SACxDf,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,KAAO2E,EAAa,YAC3DhE,KAAKmC,gBAAkBnC,KAAKM,cAAc0D,GAC1C,IAAMC,EAAkBjE,KAAKO,UAAUyD,GACjCE,EAAgBlE,KAAKK,MAAM,EAAI4D,GAOrC,IAAK,IAAMzI,KApoBf,SAAsBe,EAAK8E,GACzB,GAAI,WAAY9E,EACdA,EAAG,QAAc8E,OAInB,IAAK,IAAM/F,KAAOiB,EAChBA,EAAIjB,GAAJ,QAAsB+F,EAwnBtB8C,CAAanE,KAAKM,cAAe,GAEjCN,KAAKa,aAAa,YAAab,KAAKmC,iBAEpCnC,KAAKoE,aACWpE,KAAKK,MACnB,GAAIL,KAAKJ,YAAYpE,GACnB,OAIJwE,KAAKwD,cAAgBU,EAAc3E,IAAiB2E,IACpDlE,KAAKa,aAAa,SAAUb,KAAKmC,iBAnB5B,oBAoB4B+B,GApB5B,IAoBL,2BAAgD,CAAC,IAAtCG,EAAqC,QAC9CrE,KAAKa,aAAa,QAASwD,IArBxB,8BAuBLrE,KAAKa,aAAa,aAAcb,KAAKmC,iBAErC5C,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,gBAAkBW,KAAKwD,cAAL,WAEzDxD,KAAK2D,WAAapE,IACdS,KAAKmC,gBAAgB,cACrBnC,KAAKmC,gBAAgB,gBAEzBnC,KAAKyD,YAAczD,KAAK2D,WACxBpE,IAAYS,KAAKV,QAASU,KAAKX,OAAQ,uBAAyBW,KAAK2D,YAErE3D,KAAKa,aAAa,YAAab,KAAKmC,iBACpC5C,IACIS,KAAKyD,cAAgBzD,KAAK2D,YAAc3D,KAAKV,QAC7CU,KAAKX,OACL,wBAA0BW,KAAK2D,YAGnC3D,KAAK6C,WAAW7C,KAAKwD,cAAexD,KAAKmC,gBAAiBnC,KAAKyD,aAE3D,WAAYzD,KAAKwD,gBACnBjE,IACIS,KAAKV,QACLU,KAAKX,OACLW,KAAKwD,cAAL,UAAkC,yBAEtCxD,KAAK0B,SAAS1B,KAAKwD,eAAgBxD,KAAKwD,cAAL,SAErCxD,KAAKoE,oBAEEpE,KAAA,oBACAA,KAAA,uBACAA,KAAA,kBACAA,KAAA,c,yBAGT,SAAYlF,GACV,OAAOyE,IACHS,KAAKK,MAAMvF,IACX,SAAC2D,GACC,OAAOA,EAAS,IAAU,O,qBAKlC,SAAQ3D,GACN,OAAOkF,KAAKK,MAAMvF,O,gBChtBPwJ,MARf,SAAkBC,GAChB,OACE,wBAAQC,MAAOD,EAAME,eAAgBC,SAAUH,EAAMG,SAArD,SACGH,EAAMI,QAAQ5H,KAAI,SAAC6H,GAAD,OAAY,iCAAsBA,GAATA,SCoBnCC,MApBf,SAAsBN,GACpB,IAAMO,EHsCD,SAAiC5G,GACtC,KAAMA,KAAUH,GAAuB,CAKrC,IAJA,IAAMa,EAAQF,EAASR,GACjB4G,EAAY,CAAC,IACbC,EAAkB,GAClBC,EAAoB,GAC1B,MAAmB,CAAC,SAAU,WAA9B,eAA0C,CAArC,IAAMC,EAAI,KACb,IAAK,IAAMlG,KAAQH,EAAMqG,GACnBrG,EAAMqG,GAAMlG,GAAZ,WACFgG,EAAgB9K,KAAK8E,GAGvBiG,EAAkB/K,KAAK8E,GAG3BgG,EAAgBG,OAChBF,EAAkBE,OAClB3F,IAAauF,EAAWC,GACxBxF,IAAauF,EAAWE,GACxBjH,EAAqBG,GAAU4G,EAEjC,OAAO/G,EAAqBG,GG3DViH,CAAwB,GAG1C,OACE,gCACE,cAAC,EAAD,CACEV,eAAgBF,EAAMxF,KAAKC,KAC3B0F,SAAU,SAACU,GAAD,OAAWb,EAAMc,cAAcD,EAAM7D,OAAOiD,MAAOD,EAAMxF,KAAK3E,OACxEuK,QAASG,IAEX,cAAC,EAAD,CACEL,eAAgBF,EAAMxF,KAAK3E,KAC3BsK,SAAU,SAACU,GAAD,OAAWb,EAAMc,cAAcd,EAAMxF,KAAKC,KAAMoG,EAAM7D,OAAOiD,QACvEG,QAZY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,SCkC9BW,MAnCf,WACE,MAAoCC,mBAAS,gFAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,CAG1B,CAAEvG,KAAM,GAAI5E,KAAM,GAAlB,CAAE4E,KAAM,GAAI5E,KAAM,GAAlB,CAAE4E,KAAM,GAAI5E,KAAM,GAAlB,CAAE4E,KAAM,GAAI5E,KAAM,KAH3B,mBAAOwE,EAAP,KAAc8G,EAAd,KAWA,OACE,gCACG9G,EAAM7B,KAAI,SAACgC,EAAMjE,GAAP,OACT,cAAC,EAAD,CAEEiE,KAAMA,EACNsG,cAAe,SAACrG,EAAM5E,GACpB,IAAIuL,EAAQ,YAAO/G,GACnB+G,EAAS7K,GAAS,CAACkE,KAAMA,EAAM5E,KAAMA,GACrCsL,EAASC,KALN7K,MAST,uBACA,wBAAQ8K,QAnBZ,WACE,IAAMvG,ECVH,SAAoBT,GACzB,IADgC,EAC1BiH,EAAU,GADgB,cAEbjH,GAFa,IAEhC,2BAA0B,CAAC,IAAhBG,EAAe,QACN,KAAdA,EAAKC,MACP6G,EAAQ5L,KAAK,CAAC,KAAQ8E,EAAKC,KAAM,KAAQD,EAAK3E,QAJlB,8BAOhC,IAEMiE,EAAQQ,EAFC,EACC,GAGViH,EAAU,CACd,CACE,UAAa,WACb,GAAM,IACN,SAAU,IACV,MAAS,GACT,aAAc,EACd,cAAe,GACf,OAAU,EACV,UAAY,EACZ,MAASD,IAIPxG,EAAS,CAAC,wBAA0B7C,KAAKE,UAAUmJ,IAEzD,OADAxG,EAAOpF,KAAK,GAAI,iBAAmB8L,EAAqBD,EAASzH,EAnBlD,EAmBiEgB,GAAQ,IACjFA,EAAO2G,KAAK,MDjBFC,CAAWrH,GAC1B6G,EAAcpG,IAiBZ,sBAGA,qBAAK6G,MAAO,CAACC,WAAY,YAAzB,SAAuCX,QEtB9BY,MAVf,WACE,OACE,+CAEE,uBACA,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.226ddb41.chunk.js","sourcesContent":["export function logIf(bool, logs, toLog) {\r\n  if (bool) {\r\n    console.log(toLog);\r\n  }\r\n  if (logs != null && typeof toLog === 'string') {\r\n    logs.push(toLog);\r\n  }\r\n}\r\n\r\nexport function formatDescriptionWithTier(description, tier) {\r\n  const re = /\\{([\\dt+\\-*]+)\\}/;\r\n  var current = description;\r\n  var m = current.match(re);\r\n  while (m != null) {\r\n    current = current.replace(\r\n        m[0],\r\n        eval(m[1].replace('t', tier))\r\n    );\r\n    m = current.match(re);\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key == null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n    total++;\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  const total = sum(iterable, weightKey);\r\n  var r = Math.floor(Math.random() * total);\r\n\r\n  for (const key in iterable) {\r\n    var weight = 1;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(iterable[key]);\r\n    } else if (weightKey != null) {\r\n      weight = iterable[key][weightKey];\r\n    }\r\n    if (r < weight) {\r\n      return key;\r\n    }\r\n    r -= weight;\r\n  }\r\n\r\n  throw Error(\r\n      'Internal Error: Something went wrong while selecting random element from '\r\n      + iterable\r\n      + ' with weightKey '\r\n      + weightKey\r\n  );\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction _mutateTemplate(template, scale) {\r\n  if (typeof template != 'object') {\r\n    return template;\r\n  }\r\n\r\n  if ('Base' in template && 'Scaling' in template) {\r\n    return template['Base'] + template['Scaling'] * scale;\r\n  }\r\n\r\n  // recursive check\r\n  for (const key in template) {\r\n    template[key] = _mutateTemplate(template[key], scale);\r\n  }\r\n  return template;\r\n}\r\n\r\nexport function getScaledTemplate(template, scale) {\r\n  const obj = deepCopyJson(template);\r\n  return _mutateTemplate(obj, scale);\r\n}\r\n","var map = {\n\t\"./season_2/items/energy_items.json\": 8,\n\t\"./season_2/items/passive_items.json\": 9,\n\t\"./season_2/mobs/dungeon_0.json\": 20,\n\t\"./season_2/mobs/dungeon_1.json\": 21,\n\t\"./season_2/mobs/dungeon_10.json\": 22,\n\t\"./season_2/mobs/dungeon_2.json\": 23,\n\t\"./season_2/mobs/dungeon_3.json\": 24,\n\t\"./season_2/mobs/dungeon_4.json\": 25,\n\t\"./season_2/mobs/dungeon_5.json\": 26,\n\t\"./season_2/mobs/dungeon_6.json\": 27,\n\t\"./season_2/mobs/dungeon_7.json\": 28,\n\t\"./season_2/mobs/dungeon_8.json\": 29,\n\t\"./season_2/mobs/dungeon_9.json\": 30,\n\t\"./season_2/mobs/summon_templates.json\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","var map = {\n\t\"./season_2/items/passive_items.json\": 9\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31;","var map = {\n\t\"./season_2/items/energy_items.json\": 8\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 32;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","import * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require(\r\n        '../data/season_' + season + '/mobs/dungeon_' + dungeon + '.json'\r\n    );\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getItems(season) {\r\n  if (!(season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[season] = {\r\n      'Passive': require('../data/season_' + season + '/items/passive_items.json'),\r\n      'Energy': require('../data/season_' + season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank(season) {\r\n  if (!(season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems(season);\r\n    const itemNames = [''];\r\n    const obtainableItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['Energy', 'Passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item]['Obtainable']) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    unobtainableItems.sort();\r\n    utils.extend(itemNames, obtainableItems);\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[season];\r\n}\r\n\r\nexport function getTemplates(season) {\r\n  if (!(season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[season] = require('../data/season_' + season + '/mobs/summon_templates.json')\r\n  }\r\n  return TEMPLATES_BY_SEASON[season];\r\n}\r\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nfunction _preprocessCharacterItems(character, season) {\r\n  if ('_triggers' in character) {\r\n    return;\r\n  }\r\n  const items = data.getItems(season);\r\n  const triggers = {};\r\n  console.log(character);\r\n  for (const item of character['Items']) {\r\n    const name = item['Name'];\r\n    const triggerTypes = name in items['Energy']\r\n        ? [\"TurnStart\"]\r\n        : items['Passive'][name]['Triggers'];\r\n    for (const triggerType of triggerTypes) {\r\n      if (!(triggerType in triggers)) {\r\n        triggers[triggerType] = [item];\r\n        continue;\r\n      }\r\n      triggers[triggerType].push(item);\r\n    }\r\n  }\r\n  character['_triggers'] = triggers;\r\n  return character;\r\n}\r\n\r\nfunction _addEnergyTo(obj, amount) {\r\n  if ('Energy' in obj) {\r\n    obj['Energy'] += amount;\r\n    return;\r\n  }\r\n\r\n  for (const key in obj) {\r\n    obj[key]['Energy'] += amount;\r\n  }\r\n}\r\n\r\nfunction _findPositionWithinTeam(name, team) {\r\n  for (const position in team) {\r\n    const c = team[position];\r\n    if (c['Character'] === name) {\r\n      return position;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport function runDungeon(team, waves, season, output=null, verbose=false) {\r\n  utils.logIf(verbose, output, '\\n\\n\\nStarting dungeon');\r\n  var currTeam = team;\r\n  for (const character of team) {\r\n    _preprocessCharacterItems(character, season);\r\n  }\r\n  for (const index in waves) {\r\n    utils.logIf(verbose, output, 'loading wave ' + index);\r\n    const wave = waves[index];\r\n    for (const character of wave) {\r\n      _preprocessCharacterItems(character, season);\r\n    }\r\n    utils.logIf(verbose, output, wave);\r\n    const battle = new Battle(currTeam, wave, season, output, verbose);\r\n    utils.logIf(verbose, output, utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.logIf(verbose, output, utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.getTeam(0);\r\n  }\r\n  return 0;\r\n}\r\n\r\nclass Battle {\r\n  constructor(team1, team2, season, output=null, verbose=false) {\r\n    this.verbose = verbose;\r\n    this.season = season;\r\n    this.output = output;\r\n    this.summonedChicken = {};\r\n    this.initTeams(team1, team2);\r\n  }\r\n\r\n  getItems() {\r\n    if (!('_items' in this)) {\r\n      this._items = data.getItems(this.season);\r\n    }\r\n    return this._items;\r\n  }\r\n\r\n  getTemplates() {\r\n    if (!('_templates' in this)) {\r\n      this._templates = data.getTemplates(this.season);\r\n    }\r\n    return this._templates;\r\n  }\r\n\r\n  initTeams(team1, team2) {\r\n    this.teams = [[], []];\r\n    this.allCharacters = {};\r\n    this.getTeamOf = {};\r\n    for (const i in team1) {\r\n      this.addCopyOfCharacterToTeam(team1[i], 0);\r\n    }\r\n    for (const i in team2) {\r\n      this.addCopyOfCharacterToTeam(team2[i], 1);\r\n    }\r\n  }\r\n\r\n  addCopyOfCharacterToTeam(character, teamIndex) {\r\n    const toAdd = utils.deepCopyJson(character);\r\n    var name = toAdd['Character'];\r\n    const originalName = name;\r\n    var copyNum = 1;\r\n    while (name in this.allCharacters) {\r\n      copyNum++;\r\n      name = originalName + ' ' + copyNum;\r\n    }\r\n    toAdd['Character'] = name;\r\n    this.getTeamOf[name] = teamIndex;\r\n    this.allCharacters[name] = toAdd;\r\n    this.triggerPhase('BattleStart', toAdd);\r\n    this.teams[teamIndex].push(toAdd);\r\n  }\r\n\r\n  addSummonToTeam(item, teamIndex) {\r\n    const template = this.getTemplates()[item['Name']];\r\n    const summon = utils.getScaledTemplate(template, item['Tier']);\r\n    utils.logIf(this.verbose, this.output, 'Summoning ' + summon['Character'] + ' for team ' + teamIndex);\r\n    _preprocessCharacterItems(summon, this.season);\r\n    this.addCopyOfCharacterToTeam(summon, teamIndex);\r\n  }\r\n\r\n  getCharacterAndName(id) {\r\n    if (typeof id === 'string') {\r\n      return [this.allCharacters[id], id];\r\n    }\r\n    return [id, id['Character']];\r\n  }\r\n\r\n  kill(id) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    utils.logIf(this.verbose, this.output, 'killing: ' + name);\r\n    const team = this.teams[this.getTeamOf[name]];\r\n    const pos = _findPositionWithinTeam(name, team);\r\n    if (pos < 0) {\r\n      throw Error('InternalError: ' + name + ' is not in team ' + team);\r\n    }\r\n    delete this.allCharacters[name];\r\n    delete this.getTeamOf[name];\r\n    team.splice(pos, 1);\r\n    if (name in this.summonedChicken) {\r\n      delete this.summonedChicken[name];\r\n    }\r\n  }\r\n\r\n  changeHp(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalHp = character['HP'];\r\n    character['HP'] += amount;\r\n    if (character['HP'] > character['HP Max']) {\r\n      character['HP'] = character['HP Max'];\r\n    }\r\n    if (character['HP'] <= 0) {\r\n      this.triggerPhase('Death', character);\r\n    }\r\n    utils.logIf(\r\n        this.verbose,\r\n        this.output,\r\n        name + ' hp changed by ' + amount + ': ' + originalHp + ' -> ' + character['HP']\r\n    );\r\n  }\r\n\r\n  dealDamage(target, source, amount) {\r\n    const damageAmount = [amount];\r\n    this.triggerPhase(\r\n        'EnemyDamage',\r\n        target,\r\n        {'Source': source, 'Damage': damageAmount}\r\n    );\r\n    this.changeHp(target, -damageAmount[0]);\r\n  }\r\n\r\n  changeSpeed(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalSpeed = character['Speed'];\r\n    character['Speed'] = Math.max(character['Speed'] + amount, 1);\r\n    utils.logIf(\r\n        this.verbose,\r\n        this.output,\r\n        name + ' speed changed by ' + amount + ': ' + originalSpeed + ' -> ' + character['Speed']\r\n    );\r\n  }\r\n\r\n  changeAttack(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalAttackLow = character['Attack Low'];\r\n    const originalAttackHigh = character['Attack High'];\r\n    const amountToGain = Math.max(-originalAttackLow, amount);\r\n    character['Attack Low'] += amountToGain;\r\n    character['Attack High'] += amountToGain;\r\n    utils.logIf(\r\n        this.verbose,\r\n        this.output,\r\n        name +\r\n        ' attack changed by ' +\r\n        amount +\r\n        ': ' +\r\n        [originalAttackLow, originalAttackHigh] +\r\n        ' -> ' +\r\n        [character['Attack Low'], character['Attack High']]\r\n    );\r\n  }\r\n\r\n  changeEnergy(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalEnergy = character['Energy'];\r\n    character['Energy'] = Math.max(character['Energy'] + amount, 0);\r\n    utils.logIf(\r\n        this.verbose,\r\n        this.output,\r\n        name + ' energy changed by ' + amount + ': ' + originalEnergy + ' -> ' + character['Energy']\r\n    );\r\n  }\r\n\r\n  checkAllHp() {\r\n    for (const name in this.allCharacters) {\r\n      const character = this.allCharacters[name];\r\n      if (character['HP'] <= 0) {\r\n        this.kill(name);\r\n      }\r\n      if (character['HP'] > character['HP Max']) {\r\n        character['HP'] = character['HP Max'];\r\n      }\r\n    }\r\n  }\r\n\r\n  useItemAbility(item, phase, activeCharacter, other=null) {\r\n    utils.logIf(this.verbose, this.output, 'Checking item: ' + item['Name']);\r\n    const [character, characterName] = this.getCharacterAndName(activeCharacter);\r\n    const allyTeamIndex = this.getTeamOf[characterName];\r\n    const allyTeam = this.teams[allyTeamIndex];\r\n    const enemyTeam = this.teams[1 - allyTeamIndex];\r\n    const itemName = item[\"Name\"];\r\n    const tier = item[\"Tier\"];\r\n\r\n    switch (phase) {\r\n      case 'BattleStart': {\r\n        switch (itemName) {\r\n          case 'Pet Imp':\r\n          case 'Rock Companion': {\r\n            this.addSummonToTeam(item, allyTeamIndex);\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'TurnStart': {\r\n        if (itemName in this.getItems()['Energy']) {\r\n          const cost = this.getItems()['Energy'][itemName]['Cost'];\r\n          if (character['Energy'] < cost) {\r\n            return;\r\n          }\r\n          this.changeEnergy(character, -cost);\r\n        }\r\n\r\n        switch (itemName) {\r\n          case 'Avalanche': {\r\n            for (var i = 0; i < 2; i++) {\r\n              const target = enemyTeam[utils.pickRandom(enemyTeam)];\r\n              this.dealDamage(\r\n                  target,\r\n                  character,\r\n                  utils.pickRandomWithinRange(3 * tier, 5 * tier)\r\n              );\r\n              this.changeSpeed(\r\n                  target['Character'],\r\n                  -utils.pickRandomWithinRange(0, tier)\r\n              );\r\n            }\r\n            break;\r\n          }\r\n          case 'Boosting Bugle': {\r\n            if (allyTeam.length === 1) {\r\n              break;\r\n            }\r\n            for (var i = 0; i < 2; i++) {\r\n              const target = allyTeam[utils.pickRandom(\r\n                  allyTeam,\r\n                  (c) => {\r\n                    if (c['Summoned'] || c['Character'] === characterName) {\r\n                      return 0;\r\n                    }\r\n                    return 1;\r\n                  }\r\n              )];\r\n              this.changeHp(target, tier + tier);\r\n              this.changeAttack(target, tier);\r\n            }\r\n            break;\r\n          }\r\n          case 'Challenger Arrow': {\r\n            const target = enemyTeam[utils.pickRandom(enemyTeam)];\r\n            this.dealDamage(target, character, 10 * tier);\r\n            this.changeAttack(character, tier);\r\n            break;\r\n          }\r\n          case 'Energetic Ally': {\r\n            const minHp = allyTeam.reduce(\r\n              (a, c) => {\r\n                return Math.min(a, c['HP']);\r\n              },\r\n              Infinity\r\n            );\r\n            const target = allyTeam[utils.pickRandom(\r\n                allyTeam,\r\n                (c) => {\r\n                  if (c['HP'] === minHp) {\r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                }\r\n            )];\r\n            this.changeHp(target, 5 * tier);\r\n            this.changeEnergy(target, 20);\r\n            break;\r\n          }\r\n          case 'Explosion Powder': {\r\n            if (enemyTeam.length === 1) {\r\n              const target = enemyTeam[Object.keys(enemyTeam)[0]];\r\n              this.dealDamage(\r\n                  target,\r\n                  character,\r\n                  utils.pickRandomWithinRange(10 * tier, 20 * tier)\r\n              );\r\n              break;\r\n            }\r\n            for (const i in enemyTeam) {\r\n              const target = enemyTeam[i];\r\n              this.dealDamage(\r\n                target,\r\n                character,\r\n                utils.pickRandomWithinRange(5 * tier, 10 * tier)\r\n              );\r\n            }\r\n            break;\r\n          }\r\n          case 'Imp Whistle': {\r\n            this.addSummonToTeam(item, allyTeamIndex);\r\n            break;\r\n          }\r\n          case 'Knight\\'s Lance': {\r\n            const target = enemyTeam[utils.pickRandom(enemyTeam)];\r\n            if (character['HP'] === character['HP Max']) {\r\n              this.dealDamage(\r\n                  target,\r\n                  character,\r\n                  utils.pickRandomWithinRange(10 * tier, 14 * tier)\r\n              );\r\n              break;\r\n            }\r\n            const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\r\n            this.dealDamage(target, character, amount);\r\n            this.changeHp(character, amount);\r\n            break;\r\n          }\r\n          case 'Celine\\'s Chumby Chicken': {\r\n            if (characterName in this.summonedChicken) {\r\n              break;\r\n            }\r\n            this.summonedChicken[characterName] = 0;\r\n            this.addSummonToTeam(item, allyTeamIndex);\r\n            break;\r\n          }\r\n          case 'Healing Pendant': {\r\n            if (utils.withProbability(0.5)) {\r\n              this.changeHp(character, 5 * tier);\r\n            }\r\n            break;\r\n          }\r\n          case 'Thorns': {\r\n            var addedEnergy = false;\r\n            for (const enemy of enemyTeam) {\r\n              this.dealDamage(enemy, character, tier);\r\n              if (!addedEnergy && utils.withProbability(0.25)) {\r\n                this.changeEnergy(character, tier);\r\n                addedEnergy = true;\r\n              }\r\n            }\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'Target': {\r\n        switch (itemName) {\r\n          case 'Seeking Missiles': {\r\n            var target = {'HP': Infinity};\r\n            for (const character of enemyTeam) {\r\n              if (character['HP'] < target['HP']) {\r\n                target = character;\r\n              }\r\n            }\r\n            if (target['HP'] === Infinity) {\r\n              throw Error('InternalError: Seeking Missiles could not find a target from ' + enemyTeam);\r\n            }\r\n            this.currentTarget = target;\r\n            utils.logIf(this.verbose, this.output, 'Seeking Missiles selected target: ' + target['Character']);\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'PostTarget': {\r\n        switch (itemName) {\r\n          case 'Draining Dagger': {\r\n            this.changeAttack(this.currentTarget, -tier);\r\n            if (utils.withProbability(0.05 * tier)) {\r\n              this.changeEnergy(this.currentTarget, -1);\r\n            }\r\n            break;\r\n          }\r\n          case 'Machete': {\r\n            if (enemyTeam.length === 1) {\r\n              break;\r\n            }\r\n            const target = enemyTeam[utils.pickRandom(\r\n                enemyTeam,\r\n                (c) => {\r\n                  if (c['Character'] === this.currentTarget['Character']) {\r\n                    return 0;\r\n                  }\r\n                  return 1;\r\n                }\r\n            )];\r\n            this.dealDamage(target, character, utils.pickRandomWithinRange(3 * tier, 4 * tier));\r\n            break;\r\n          }\r\n          case 'Poison Dagger': {\r\n            if (!('Poison' in this.currentTarget)) {\r\n              this.currentTarget['Poison'] = 0;\r\n            }\r\n            this.currentTarget['Poison'] += tier;\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'Block': {\r\n        switch (itemName) {\r\n          case 'Healing Pendant':\r\n          case 'Magic Parasol':\r\n          case 'Survival Kit': {\r\n            if (this.currentTarget['Character'] === characterName) {\r\n              break;\r\n            }\r\n            if (!(utils.withProbability(0.07 + 0.03 * tier))) {\r\n              break;\r\n            }\r\n            if (this.currentTarget['HP'] < character['HP']) {\r\n              utils.logIf(\r\n                  this.verbose,\r\n                  this.output,\r\n                  characterName + ' blocks for ' + this.currentTarget['Character']\r\n              );\r\n              this.currentTarget = character;\r\n              break;\r\n            }\r\n            utils.logIf(\r\n                this.verbose,\r\n                this.output,\r\n                characterName + ' is a coward'\r\n            );\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'PreDamage': {\r\n        switch (itemName) {\r\n          case 'Big Club': {\r\n            if (!utils.withProbability(0.11 * tier)) {\r\n              break;\r\n            }\r\n            this.finalDamage += Math.round(1.5 * this.baseDamage);\r\n            break;\r\n          }\r\n          case 'Seeking Missiles': {\r\n            const missingHpProportion = this.currentTarget['HP'] / this.currentTarget['HP Max'];\r\n            this.finalDamage += Math.floor(5 * missingHpProportion * tier);\r\n            break;\r\n          }\r\n          case 'Whirlwind Axe': {\r\n            for (const enemy of enemyTeam) {\r\n              this.dealDamage(enemy, character, this.baseDamage);\r\n            }\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'EnemyDamage': {\r\n        switch (itemName) {\r\n          case 'Magic Parasol': {\r\n            if (!utils.withProbability(0.05 + 0.05 * tier)) {\r\n              break;\r\n            }\r\n            utils.logIf(this.verbose, this.output, 'Magic Parasol triggered');\r\n            other['Damage'][0] = 0;\r\n            break;\r\n          }\r\n          case 'Martyr Armor': {\r\n            if (!utils.withProbability(0.66)) {\r\n              break;\r\n            }\r\n            const team = this.getTeamOf[characterName];\r\n            const target = this.teams[team][utils.pickRandom(\r\n                this.teams[team],\r\n                (c) => {\r\n                  if (c['Character'] == characterName) {\r\n                    return 0;\r\n                  }\r\n                  if (c['Summoned']) {\r\n                    return 0;\r\n                  }\r\n                  return 1;\r\n                }\r\n            )];\r\n            if (target == null) {\r\n              break;\r\n            }\r\n            this.changeHp(target, 2 * tier);\r\n            this.changeEnergy(target, tier);\r\n            break;\r\n          }\r\n          case 'Rough Skin': {\r\n            if (!utils.withProbability(0.5)) {\r\n              break;\r\n            }\r\n            this.changeHp(other['Source'], -2 * tier);\r\n            const damageAmount = other['Damage'];\r\n            damageAmount[0] = Math.max(0, damageAmount[0] - (2 * tier));\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'PostDamage': {\r\n        switch (itemName) {\r\n          case 'Cleansing Flames': {\r\n            if (!utils.withProbability(0.5)) {\r\n              break;\r\n            }\r\n            for (const ally of allyTeam) {\r\n              this.changeHp(ally, tier);\r\n            }\r\n            break;\r\n          }\r\n          case 'Fire Sword': {\r\n            var attackIncrease = 0;\r\n            for (var i = 0; i < tier; i++) {\r\n              if (!utils.withProbability(0.3)) {\r\n                continue;\r\n              }\r\n              attackIncrease++;\r\n            }\r\n            this.changeAttack(character, attackIncrease);\r\n            break;\r\n          }\r\n          case 'Love Letter': {\r\n            const target = allyTeam[utils.pickRandom(\r\n                allyTeam,\r\n                (c) => {\r\n                  if (c['Character'] === characterName) {\r\n                    return 0;\r\n                  }\r\n                  if (c['Summoned']) {\r\n                    return 0;\r\n                  }\r\n                  return 1;\r\n                }\r\n            )];\r\n            if (target == null) {\r\n              break;\r\n            }\r\n            this.changeHp(target, 2 * tier);\r\n            this.changeEnergy(target, tier);\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'Death': {\r\n        switch (itemName) {\r\n          case 'Chicken Dinner': {\r\n            if (this.getTeamOf[this.activeCharacter] === allyTeamIndex) {\r\n              break;\r\n            }\r\n            for (const ally of allyTeam) {\r\n              if (ally['Character'] == characterName) {\r\n                continue;\r\n              }\r\n              this.changeHp(ally, tier);\r\n            }\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        throw Error('InternalError: Phase ' + phase + ' unknown');\r\n      }\r\n    }\r\n  }\r\n\r\n  triggerPhase(phase, activeCharacter, other=null) {\r\n    if (!(phase in activeCharacter['_triggers'])) {\r\n      return;\r\n    }\r\n\r\n    for (const item of activeCharacter['_triggers'][phase]) {\r\n      this.useItemAbility(item, phase, activeCharacter, other);\r\n    }\r\n  }\r\n\r\n  tick() {\r\n    const activeName = utils.pickRandom(this.allCharacters, 'Speed');\r\n    utils.logIf(this.verbose, this.output, '\\n' + activeName + '\\'s turn:');\r\n    this.activeCharacter = this.allCharacters[activeName];\r\n    const activeTeamIndex = this.getTeamOf[activeName];\r\n    const defendingTeam = this.teams[1 - activeTeamIndex];\r\n\r\n    _addEnergyTo(this.allCharacters, 2);\r\n\r\n    this.triggerPhase('TurnStart', this.activeCharacter);\r\n\r\n    this.checkAllHp();\r\n    for (const i in this.teams) {\r\n      if (this.teamHasLost(i)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.currentTarget = defendingTeam[utils.pickRandom(defendingTeam)];\r\n    this.triggerPhase('Target', this.activeCharacter);\r\n    for (const defendingCharacter of defendingTeam) {\r\n      this.triggerPhase('Block', defendingCharacter);\r\n    }\r\n    this.triggerPhase('PostTarget', this.activeCharacter);\r\n\r\n    utils.logIf(this.verbose, this.output, 'main target: ' + this.currentTarget['Character']);\r\n\r\n    this.baseDamage = utils.pickRandomWithinRange(\r\n        this.activeCharacter['Attack Low'],\r\n        this.activeCharacter['Attack High']\r\n    );\r\n    this.finalDamage = this.baseDamage;\r\n    utils.logIf(this.verbose, this.output, 'main attack damage: ' + this.baseDamage);\r\n\r\n    this.triggerPhase('PreDamage', this.activeCharacter);\r\n    utils.logIf(\r\n        this.finalDamage !== this.baseDamage && this.verbose,\r\n        this.output,\r\n        'final attack damage: ' + this.baseDamage\r\n    );\r\n\r\n    this.dealDamage(this.currentTarget, this.activeCharacter, this.finalDamage);\r\n\r\n    if ('Poison' in this.currentTarget) {\r\n      utils.logIf(\r\n          this.verbose,\r\n          this.output,\r\n          this.currentTarget['Character'] + ' takes poison damage.'\r\n      );\r\n      this.changeHp(this.currentTarget, -this.currentTarget['Poison']);\r\n    }\r\n    this.checkAllHp();\r\n\r\n    delete this['curentTarget'];\r\n    delete this['activeCharacter'];\r\n    delete this['baseDamage'];\r\n    delete this['finalDamage'];\r\n  }\r\n\r\n  teamHasLost(index) {\r\n    return utils.all(\r\n        this.teams[index],\r\n        (character) => {\r\n          return character['HP'] <= 0;\r\n        }\r\n    );\r\n  }\r\n\r\n  getTeam(index) {\r\n    return this.teams[index];\r\n  }\r\n}\r\n","function Dropdown(props) {\r\n  return (\r\n    <select value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option) => <option key={option}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank(2);\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;","import { outputTest } from '../test.js';\r\nimport ItemDropdown from './ItemDropdown.js';\r\nimport { useState } from 'react';\r\n\r\nfunction Simulator() {\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [items, setItems] = useState([getInitialItem(), getInitialItem(), getInitialItem(), getInitialItem()]);\r\n\r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunTest() {\r\n    const output = outputTest(items);\r\n    setOutputText(output);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {items.map((item, index) =>\r\n        <ItemDropdown\r\n          key={index}\r\n          item={item}\r\n          onItemChanged={(name, tier) => {\r\n            let newItems = [...items];\r\n            newItems[index] = {name: name, tier: tier};\r\n            setItems(newItems);\r\n          }}\r\n        />\r\n      )}\r\n      <br />\r\n      <button onClick={onRunTest}>\r\n        Run Test\r\n      </button>\r\n      <div style={{whiteSpace: 'pre-line'}}>{outputText}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import * as data from './data.js';\r\nimport * as simulator from './simulator.js';\r\n\r\nexport function outputTest(items) {\r\n  const toEquip = [];\r\n  for (const item of items) {\r\n    if (item.name !== '') {\r\n      toEquip.push({'Name': item.name, 'Tier': item.tier});\r\n    }\r\n  }\r\n  const season = 2;\r\n  const dungeon = 0;\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  const players = [\r\n    {\r\n      \"Character\": \"Zethorix\",\r\n      \"HP\": 100,\r\n      \"HP Max\": 100,\r\n      \"Speed\": 10,\r\n      \"Attack Low\": 1,\r\n      \"Attack High\": 10,\r\n      \"Energy\": 0,\r\n      \"Summoned\": false,\r\n      \"Items\": toEquip\r\n    }\r\n  ]\r\n\r\n  const output = ['Test run with items: ' + JSON.stringify(toEquip)];\r\n  output.push('', 'Winning team: ' + simulator.runDungeon(players, waves, season, output, true));\r\n  return output.join('\\n');\r\n}\r\n\r\nexport function buttontest() {\r\n  const season = 2;\r\n  const dungeon = 0;\r\n  const waves = data.getDungeon(season, dungeon);\r\n  console.log(waves);\r\n  const players = [\r\n    {\r\n      \"Character\": \"Zethorix\",\r\n      \"HP\": 100,\r\n      \"HP Max\": 100,\r\n      \"Speed\": 10,\r\n      \"Attack Low\": 1,\r\n      \"Attack High\": 10,\r\n      \"Energy\": 0,\r\n      \"Summoned\": false,\r\n      \"Items\": [\r\n        {\r\n          \"Name\": 'Avalanche',\r\n          \"Tier\": 1\r\n        },\r\n        {\r\n          \"Name\": 'Rock Companion',\r\n          \"Tier\": 9\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"Character\": \"Oof\",\r\n      \"HP\": 100,\r\n      \"HP Max\": 100,\r\n      \"Speed\": 10,\r\n      \"Attack Low\": 1,\r\n      \"Attack High\": 10,\r\n      \"Energy\": 0,\r\n      \"Summoned\": false,\r\n      \"Items\": [\r\n        {\r\n          \"Name\": 'Seeking Missiles',\r\n          \"Tier\": 1\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  console.log('winning team: ' + simulator.runDungeon(players, waves, season, true));\r\n}\r\n","import Simulator from \"./components/Simulator.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      Hello World!\r\n      <br />\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}