{"version":3,"sources":["utils.js","global.js","dungeonUtils.js","data sync /^/.//season_.*/.json$","data sync /^/.//season_.*//items//passive_items/.json$","data sync /^/.//season_.*//items//energy_items/.json$","data sync /^/.//season_.*//mobs//summon_templates/.json$","data.js","components/Dropdown.js","items.js","character.js","battle.js","simulator.js","test.js","components/ItemDropdown.js","components/PlayerForm.js","components/Simulator.js","App.js","index.js"],"names":["format","args","arguments","replace","match","number","index","parseInt","log","global","toLog","console","push","extend","iterable1","iterable2","sum","iterable","key","total","i","currentValue","withProbability","p","Math","random","pickRandom","weightKey","r","floor","weight","pickRandomWithinRange","lower","upper","deepCopyJson","obj","JSON","parse","stringify","verbose","setVerbose","val","output","setOutput","season","setSeason","formatDescriptionWithTier","description","tier","re","current","m","eval","parseMonuments","input","monumentLevels","split","matches","parsePlayer","player","username","items","line","matchUsername","matchItem","name","_mutateTemplate","template","scale","base","scaling","getScaledTemplate","utils","processedInitCharacter","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getItems","passive","require","energy","Dropdown","props","value","selectedOption","onChange","options","option","ABILITY_FOR_ITEM","params","phase","enemyTeam","item","target","takeDamage","source","character","amount","battle","changeSpeed","_throwInvalidPhaseError","damageFinal","round","damageBase","allyTeam","length","c","summoned","changeHp","changeAttack","allyTeamIndex","summonedChicken","addSummonToTeam","activeTeamIndex","ally","currentTarget","changeEnergy","hp","Infinity","charcter","attackIncrease","hpMax","damage","teams","getTeamOf","poison","max","enemy","missingHpProportion","addedEnergy","useItemAbility","data","originalEnergy","cost","_checkEnergy","_extractParam","param","defaultValue","Character","this","speed","attackLow","attackHigh","_preprocessTriggers","allItems","triggers","triggerTypes","triggerType","originalHp","min","originalSpeed","originalAttackLow","originalAttackHigh","amountToGain","phaseParams","triggerPhase","assign","prototype","toString","Battle","team1","team2","initTeams","allCharacters","addCopyOfCharacterToTeam","teamIndex","originalName","copyNum","toAdd","addCharacterToTeam","summon","dungeonUtils","team","pos","position","_findPositionWithinTeam","splice","kill","teamHasLost","teamlength","activeCharacter","activeName","defendingTeam","changeAllEnergy","checkAllHp","targetParams","blockParams","preDamageParams","runDungeon","waves","currTeam","wave","tick","outputTest","players","selectedDungeon","numRuns","toEquip","monuments","Health","Speed","Power","dungeon","dungeonsForSeason","j","numWins","winsForTeam0","simulator","join","ItemDropdown","itemNames","obtainableItems","unobtainableItems","type","obtainable","sort","getAllItemNamesAndBlank","event","onItemChanged","PlayerForm","useState","setItems","setMonuments","onPlayerChanged","newItems","newMonuments","Simulator","dungeonList","dungeonsBySeason","setNumRuns","setSelectedDungeon","outputText","setOutputText","getInitialPlayer","setPlayers","newPlayers","onClick","style","whiteSpace","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99070e57.chunk.js","sourcesContent":["import * as global from './global.js'\r\n\r\nexport function format() {\r\n  const args = arguments;\r\n  return args[0].replace(/{(\\d+)}/g, function(match, number) {\r\n      const index = parseInt(number) + 1;\r\n      return typeof[args[index]] !== 'undefined'\r\n        ? args[index]\r\n        : match;\r\n  });\r\n}\r\n\r\nexport function log() {\r\n  if (!global.verbose && global.output === null) {\r\n    return;\r\n  }\r\n  const toLog = typeof arguments[0] === 'string'\r\n      ? format(...arguments)\r\n      : arguments[0];\r\n  if (global.verbose) {\r\n    console.log(toLog);\r\n  }\r\n  if (global.output !== null) {\r\n    global.output.push(toLog);\r\n  }\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key == null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n    total++;\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  const total = sum(iterable, weightKey);\r\n  var r = Math.floor(Math.random() * total);\r\n\r\n  for (const key in iterable) {\r\n    var weight = 1;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(iterable[key]);\r\n    } else if (weightKey != null) {\r\n      weight = iterable[key][weightKey];\r\n    }\r\n    if (r < weight) {\r\n      return iterable[key];\r\n    }\r\n    r -= weight;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n","export var verbose = false;\r\nexport function setVerbose(val) {\r\n  verbose = val;\r\n}\r\n\r\nexport var output = null;\r\nexport function setOutput(val) {\r\n  output = val;\r\n}\r\n\r\nexport var season = 2;\r\nexport function setSeason(val) {\r\n  season = val;\r\n}\r\n","import * as utils from './utils.js';\n\nexport function formatDescriptionWithTier(description, tier) {\n  const re = /\\{([\\dt+\\-*]+)\\}/;\n  var current = description;\n  var m = current.match(re);\n  while (m != null) {\n    current = current.replace(\n        m[0],\n        eval(m[1].replace('t', tier))\n    );\n    m = current.match(re);\n  }\n  return current;\n}\n\nexport function parseMonuments(input) {\n  const monumentLevels = {};\n  for (const line of input.split('\\n')) {\n    const matches = line.match(/\\|\\s*(Health|Power|Speed)\\s*\\|\\s*(\\d+)\\s*\\|/);\n    if (matches === null) {\n      continue;\n    }\n    monumentLevels[matches[1]] = parseInt(matches[2]);\n  }\n  return monumentLevels;\n}\n\nexport function parsePlayer(input) {\n  const player = {username: '', items: []};\n  for (const line of input.split('\\n')) {\n    const matchUsername = line.match(/(.*)'s Inventory/);\n    const matchItem = line.match(/:[^\\s]+:\\s+(.*)\\s+(\\d+):/);\n    if (matchUsername !== null) {\n      player.username = matchUsername[1];\n    }\n    if (matchItem !== null) {\n      player.items.push({name: matchItem[1], tier: parseInt(matchItem[2])});\n    }\n  }\n  console.log(player);\n  return player;\n}\n\nfunction _mutateTemplate(template, scale) {\n  if (typeof template != 'object') {\n    return template;\n  }\n\n  if ('base' in template && 'scaling' in template) {\n    return template.base + template.scaling * scale;\n  }\n\n  // recursive check\n  for (const key in template) {\n    template[key] = _mutateTemplate(template[key], scale);\n  }\n  return template;\n}\n\nexport function getScaledTemplate(template, scale) {\n  const obj = utils.deepCopyJson(template);\n  _mutateTemplate(obj, scale);\n  obj.processedInitCharacter = false;\n  return obj;\n}\n","var map = {\n\t\"./season_2/items/energy_items.json\": 13,\n\t\"./season_2/items/passive_items.json\": 14,\n\t\"./season_2/mobs/dungeon_0.json\": 23,\n\t\"./season_2/mobs/dungeon_1.json\": 24,\n\t\"./season_2/mobs/dungeon_10.json\": 25,\n\t\"./season_2/mobs/dungeon_2.json\": 26,\n\t\"./season_2/mobs/dungeon_3.json\": 27,\n\t\"./season_2/mobs/dungeon_4.json\": 28,\n\t\"./season_2/mobs/dungeon_5.json\": 29,\n\t\"./season_2/mobs/dungeon_6.json\": 30,\n\t\"./season_2/mobs/dungeon_7.json\": 31,\n\t\"./season_2/mobs/dungeon_8.json\": 32,\n\t\"./season_2/mobs/dungeon_9.json\": 33,\n\t\"./season_2/mobs/summon_templates.json\": 15\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","var map = {\n\t\"./season_2/items/passive_items.json\": 14\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35;","var map = {\n\t\"./season_2/items/energy_items.json\": 13\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 36;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 15\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","import * as global from './global.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require(\r\n        './data/season_' + season + '/mobs/dungeon_' + dungeon + '.json');\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getDungeonList() {\r\n  const dungeonsBySeason = require('./data/dungeons.json');\r\n  const dungeonList = [];\r\n  for (const season in dungeonsBySeason) {\r\n    for (const dungeon of dungeonsBySeason[season]) {\r\n      dungeonList.push(JSON.stringify([parseInt(season), dungeon]));\r\n    }\r\n  }\r\n  return dungeonList;\r\n}\r\n\r\nexport function getItems() {\r\n  if (!(global.season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[global.season] = {\r\n      passive: require(\r\n          './data/season_' + global.season + '/items/passive_items.json'),\r\n      energy: require(\r\n          './data/season_' + global.season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank() {\r\n  if (!(global.season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems();\r\n    const itemNames = [''];\r\n    const obtainableItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['energy', 'passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item].obtainable) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    unobtainableItems.sort();\r\n    utils.extend(itemNames, obtainableItems);\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[global.season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getTemplates() {\r\n  if (!(global.season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[global.season] = require(\r\n        './data/season_' + global.season + '/mobs/summon_templates.json');\r\n  }\r\n  return TEMPLATES_BY_SEASON[global.season];\r\n}\r\n","function Dropdown(props) {\r\n  return (\r\n    <select value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option) => <option key={option}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;","import * as data from './data.js';\nimport * as utils from './utils.js';\n\nconst ABILITY_FOR_ITEM = {\n  'Avalanche': avalanche,\n  'Big Club': bigClub,\n  'Boosting Bugle': boostingBugle,\n  'Celine\\'s Chumby Chicken': celinesChumbyChicken,\n  'Challenger Arrow': challengerArrow,\n  'Chicken Dinner': chickenDinner,\n  'Cleansing Flames': cleansingFlames,\n  'Draining Dagger': drainingDagger,\n  'Energetic Ally': energeticAlly,\n  'Explosion Powder': explosionPowder,\n  'Fire Sword': fireSword,\n  'Freezeman': freezeman,\n  'Halberd': halberd,\n  'Healing Pendant': healingPendant,\n  'Imp Whistle': impWhistle,\n  'Knight\\'s Lance': knightsLance,\n  'Love Letter': loveLetter,\n  'Machete': machete,\n  'Magic Parasol': magicParasol,\n  'Martyr Armor': martyrArmor,\n  'Pet Imp': petImp,\n  'Poison Dagger': poisonDagger,\n  'Rock Companion': rockCompanion,\n  'Rough Skin': roughSkin,\n  'Seeking Missiles': seekingMissiles,\n  'Survival Kit': survivalKit,\n  'Thorns': thorns,\n  'Whirlwind Axe': whirlwindAxe\n}\n\nexport function useItemAbility(params) {\n  if (params.item.name in data.getItems().energy && !_checkEnergy(params)) {\n    return;\n  }\n  return ABILITY_FOR_ITEM[params.item.name](params);\n}\n\nfunction _checkEnergy(params) {\n  const originalEnergy = params.character.energy;\n  const cost = data.getItems().energy[params.item.name].cost;\n  if (originalEnergy < cost) {\n    return false;\n  }\n  utils.log('Activating {0}', params.item.name);\n  params.character.changeEnergy({amount: -cost});\n  return true;\n}\n\nfunction _throwInvalidPhaseError(params) {\n  throw Error(utils.format('InternalError: Item {0} does not have phase {1}',\n                           params.item.name, params.phase));\n}\n\nfunction avalanche(params) {\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      const tier = params.item.tier;\n      for (var i = 0; i < 2; i++) {\n        const target = utils.pickRandom(enemyTeam);\n        target.takeDamage({\n          source: params.character,\n          amount: utils.pickRandomWithinRange(3 * tier, 5 * tier),\n          battle: params.battle\n        });\n        target.changeSpeed({\n          amount: -utils.pickRandomWithinRange(0, tier)\n        });\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction bigClub(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PreDamage': {\n      if (!utils.withProbability(0.11 * tier)) {\n        break;\n      }\n      utils.log('Activated {0}', params.item.name);\n      params.damageFinal += Math.round(1.5 * params.damageBase);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction boostingBugle(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const allyTeam = params.allyTeam;\n      if (allyTeam.length === 1) {\n        break;\n      }\n      for (var i = 0; i < 2; i++) {\n        const target = utils.pickRandom(\n            allyTeam,\n            (c) => {\n              if (c.summoned) {\n                return 0;\n              }\n              if (c.character === params.character.character) {\n                return 0;\n              }\n              return 1;\n            }\n        );\n        target.changeHp({amount: tier + tier});\n        target.changeAttack({amount: tier});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction celinesChumbyChicken(params) {\n  switch (params.phase) {\n    case 'TurnStart': {\n      const allyTeamIndex = params.allyTeamIndex;\n      if (params.character.character in params.battle.summonedChicken) {\n        break;\n      }\n      params.battle.summonedChicken[params.character.character] = 0;\n      params.battle.addSummonToTeam(params.item, allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction challengerArrow(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      const target = utils.pickRandom(enemyTeam);\n      target.takeDamage({\n          source: params.character,\n          amount: 10 * tier,\n          battle: params.battle\n      });\n      params.character.changeAttack({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction chickenDinner(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'Death': {\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\n        break;\n      }\n      for (const ally of params.allyTeam) {\n        if (ally.character === params.character.character) {\n          continue;\n        }\n        ally.changeHp({amount: tier});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction cleansingFlames(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostDamage': {\n      const allyTeam = params.allyTeam;\n      if (!utils.withProbability(0.5)) {\n        break;\n      }\n      utils.log('Activating {0}', params.item.name);\n      for (const ally of allyTeam) {\n        ally.changeHp({amount: tier});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction drainingDagger(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostTarget': {\n      utils.log('Activating {0}', params.item.name);\n      params.currentTarget.changeAttack({amount: -tier});\n      if (utils.withProbability(0.05 * tier)) {\n        params.currentTarget.changeEnergy({amount: -1});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction energeticAlly(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const allyTeam = params.allyTeam;\n      var target = {hp: Infinity};\n      for (const ally of allyTeam) {\n        if (ally.hp < target.hp) {\n          target = ally;\n        }\n      }\n      if (target.hp === Infinity) {\n        throw Error('InternalError: Ally team has no members');\n      }\n      target.changeHp({amount: 5 * tier});\n      target.changeEnergy({amount: 20});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction explosionPowder(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      if (enemyTeam.length === 1) {\n        const target = enemyTeam[Object.keys(enemyTeam)[0]];\n        target.takeDamage({\n            source: params.charcter,\n            amount: utils.pickRandomWithinRange(10 * tier, 20 * tier),\n            battle: params.battle\n        });\n        break;\n      }\n      for (const enemy of enemyTeam) {\n        enemy.takeDamage({\n            source: params.character,\n            amount: utils.pickRandomWithinRange(5 * tier, 10 * tier),\n            battle: params.battle\n        });\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction fireSword(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostDamage': {\n      utils.log('Activating {0}', params.item.name);\n      var attackIncrease = 0;\n      for (var i = 0; i < tier; i++) {\n        if (!utils.withProbability(0.3)) {\n          continue;\n        }\n        attackIncrease++;\n      }\n      params.character.changeAttack({amount: attackIncrease});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction freezeman(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'InitCharacter': {\n      utils.log('Activating {0}', params.item.name);\n      params.character.changeSpeed({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction halberd(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'InitCharacter': {\n      utils.log('Activating {0}', params.item.name);\n      params.character.changeAttack({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction healingPendant(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      if (!utils.withProbability(0.5)) {\n        break;\n      }\n      utils.log('Activating {0}', params.item.name);\n      params.character.changeHp({amount: 5 * tier});\n      break;\n    }\n    case 'Block': {\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\n        break;\n      }\n      if (params.currentTarget.hp < params.character.hp) {\n        utils.log(\n            '{0} blocks for {1}',\n            params.character.character,\n            params.currentTarget.character\n        );\n        params.currentTarget = params.character;\n        break;\n      }\n      utils.log(\n          '{0} is a coward',\n          params.character.character,\n      );\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction impWhistle(params) {\n  switch (params.phase) {\n    case 'TurnStart': {\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction knightsLance(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      const target = utils.pickRandom(enemyTeam);\n      if (params.character.hp === params.character.hpMax) {\n        target.takeDamage({\n            source: params.character,\n            amount: utils.pickRandomWithinRange(10 * tier, 14 * tier),\n            battle: params.battle\n        });\n        break;\n      }\n      const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\n      target.takeDamage({\n          source: params.character,\n          amount: amount,\n          battle: params.battle\n      });\n      params.character.changeHp({amount: amount});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction loveLetter(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostDamage': {\n      utils.log('Activating {0}', params.item.name);\n      const allyTeam = params.allyTeam;\n      const target = utils.pickRandom(\n          allyTeam,\n          (c) => {\n            if (c.character === params.character.character) {\n              return 0;\n            }\n            if (c.summoned) {\n              return 0;\n            }\n            return 1;\n          }\n      );\n      if (target === null) {\n        break;\n      }\n      target.changeHp({amount: tier + tier});\n      target.changeEnergy({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction machete(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostTarget': {\n      utils.log('Activating {0}', params.item.name);\n      const enemyTeam = params.enemyTeam;\n      if (enemyTeam.length === 1) {\n        break;\n      }\n      const target = utils.pickRandom(\n          enemyTeam,\n          (c) => {\n            if (c.character === params.currentTarget.character) {\n              return 0;\n            }\n            return 1;\n          }\n      );\n      target.takeDamage({\n          source: params.character,\n          amount: utils.pickRandomWithinRange(3 * tier, 4 * tier),\n          battle: params.battle\n      });\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction magicParasol(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'Block': {\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\n        break;\n      }\n      if (params.currentTarget.hp < params.character.hp) {\n        utils.log(\n            '{0} blocks for {1}',\n            params.character.character,\n            params.currentTarget.character\n        );\n        params.currentTarget = params.character;\n        break;\n      }\n      utils.log(\n          '{0} is a coward',\n          params.character.character,\n      );\n      break;\n    }\n    case 'EnemyDamage': {\n      if (!utils.withProbability(0.05 + 0.05 * tier)) {\n        break;\n      }\n      utils.log('Activating {0}', params.item.name);\n      params.damage = 0;\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction martyrArmor(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'EnemyDamage': {\n      if (!utils.withProbability(0.66)) {\n        break;\n      }\n      utils.log('Activating {0}', params.item.name);\n      const target = utils.pickRandom(\n          params.battle.teams[\n              params.battle.getTeamOf[params.character.character]\n          ],\n          (c) => {\n            if (c.character === params.character.character) {\n              return 0;\n            }\n            if (c.summoned) {\n              return 0;\n            }\n            return 1;\n          }\n      );\n      if (target === null) {\n        break;\n      }\n      target.changeHp({amount: tier + tier});\n      target.changeEnergy({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction petImp(params) {\n  switch (params.phase) {\n    case 'InitCharacter': {\n      utils.log('Activating {0}', params.item.name);\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction poisonDagger(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostTarget': {\n      utils.log('Activating {0}', params.item.name);\n      params.currentTarget.poison += tier;\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction rockCompanion(params) {\n  switch (params.phase) {\n    case 'InitCharacter': {\n      utils.log('Activating {0}', params.item.name);\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction roughSkin(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'EnemyDamage': {\n      if (!utils.withProbability(0.5)) {\n        break;\n      }\n      utils.log('Activating {0}', params.item.name);\n      params.damage = Math.max(0, params.damage - tier - tier);\n      params.source.changeHp({amount: -tier - tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction seekingMissiles(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'Target': {\n      var target = {hp: Infinity};\n      for (const enemy of params.enemyTeam) {\n        if (enemy.hp < target.hp) {\n          target = enemy;\n        }\n      }\n      if (target.hp === Infinity) {\n        throw Error('InternalError: No target in enemy team');\n      }\n      utils.log('{0} selected target {1}', params.item.name, target.character);\n      params.currentTarget = target;\n      break;\n    }\n    case 'PreDamage': {\n      const missingHpProportion =\n          1 - params.currentTarget.hp / params.currentTarget.hpMax;\n      utils.log('Activating {0}', params.item.name);\n      params.damageFinal += Math.floor(5 * missingHpProportion * tier);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction survivalKit(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'InitCharacter': {\n      utils.log('Activating {0}', params.item.name);\n      const amount = 20 * tier;\n      params.character.hpMax += amount;\n      params.character.changeHp({amount: amount});\n      break;\n    }\n    case 'Block': {\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\n        break;\n      }\n      if (params.currentTarget.hp < params.character.hp) {\n        utils.log(\n            '{0} blocks for {1}',\n            params.character.character,\n            params.currentTarget.character\n        );\n        params.currentTarget = params.character;\n        break;\n      }\n      utils.log(\n          '{0} is a coward',\n          params.character.character,\n      );\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction thorns(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      utils.log('Activating {0}', params.item.name);\n      var addedEnergy = false;\n      for (const enemy of params.enemyTeam) {\n        enemy.takeDamage({\n            source: params.character,\n            amount: tier,\n            battle: params.battle\n        });\n        if (addedEnergy) {\n          continue;\n        }\n        if (!utils.withProbability(0.25)) {\n          continue;\n        }\n        params.character.changeEnergy({amount: tier});\n        addedEnergy = true;\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction whirlwindAxe(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PreDamage': {\n      if (!utils.withProbability(0.11 * tier)) {\n        break;\n      }\n      utils.log('Activating {0}', params.item.name);\n      for (const enemy of params.enemyTeam) {\n        if (enemy.character === params.currentTarget.character) {\n          continue;\n        }\n        enemy.takeDamage({\n            source: params.character,\n            amount: params.damageBase,\n            battle: params.battle\n        });\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n","import * as data from './data.js';\nimport * as items from './items.js';\nimport * as utils from './utils.js';\n\nfunction _extractParam(params, param, defaultValue) {\n  if (param in params) {\n    return params[param];\n  }\n  return defaultValue;\n}\n\nexport class Character {\n  constructor(params) {\n    this.character = _extractParam(params, 'character', 'Unknown');\n    this.hpMax = _extractParam(params, 'hpMax', 100);\n    this.hp = _extractParam(params, 'hp', this.hpMax);\n    this.speed = _extractParam(params, 'speed', 10);\n    this.attackLow = _extractParam(params, 'attackLow', 1);\n    this.attackHigh = _extractParam(params, 'attackHigh', 10);\n    this.energy = _extractParam(params, 'energy', 0);\n    this.summoned = _extractParam(params, 'summoned', false);\n    this.items = _extractParam(params, 'items', []);\n\n    this.poison = _extractParam(params, 'poison', 0);\n    this._preprocessTriggers();\n    this.processedInitCharacter =\n        _extractParam(params, 'processedInitCharacter', true);\n  }\n\n  _preprocessTriggers() {\n    if ('triggers' in this) {\n      return;\n    }\n    const allItems = data.getItems();\n    const triggers = {};\n    for (const item of this.items) {\n      const triggerTypes = item.name in allItems.energy\n          ? ['TurnStart']\n          : allItems.passive[item.name].triggers;\n      for (const triggerType of triggerTypes) {\n        if (!(triggerType in triggers)) {\n          triggers[triggerType] = [item];\n          continue;\n        }\n        triggers[triggerType].push(item);\n      }\n    }\n    this.triggers = triggers;\n  }\n\n  deepCopy() {\n    const params = utils.deepCopyJson(this);\n    return new Character(params);\n  }\n\n  changeHp(params) {\n    const originalHp = this.hp;\n    this.hp = Math.min(this.hp + params.amount, this.hpMax);\n    utils.log('{0} hp changed by {1}: {2} -> {3}',\n              this.character, params.amount, originalHp, this.hp);\n  }\n\n  changeSpeed(params) {\n    const originalSpeed = this.speed;\n    this.speed = Math.max(this.speed + params.amount, 1);\n    utils.log('{0} speed changed by {1}: {2} -> {3}',\n              this.character, params.amount, originalSpeed, this.speed);\n  }\n\n  changeAttack(params) {\n    const originalAttackLow = this.attackLow;\n    const originalAttackHigh = this.attackHigh;\n    const amountToGain = Math.max(-originalAttackLow, params.amount);\n    this.attackLow += amountToGain;\n    this.attackHigh += amountToGain;\n    utils.log('{0} attack changed by {1}: {2} -> {3}',\n              this.character,\n              params.amount,\n              [originalAttackLow, originalAttackHigh],\n              [this.attackLow, this.attackHigh]);\n  }\n\n  changeEnergy(params) {\n    const originalEnergy = this.energy;\n    this.energy = Math.max(this.energy + params.amount, 0);\n    utils.log('{0} energy changed by {1}: {2} -> {3}',\n              this.character,\n              params.amount,\n              originalEnergy,\n              this.energy);\n  }\n\n  takeDamage(params) {\n    const phaseParams = {\n        battle: params.battle,\n        damage: params.amount,\n        phase: 'EnemyDamage',\n        source: params.source\n    };\n    this.triggerPhase(phaseParams);\n    this.changeHp({\n        amount: -phaseParams.damage\n    });\n    if (this.hp > 0) {\n      return;\n    }\n    const allyTeamIndex = params.battle.getTeamOf[this.character];\n    this.triggerPhase({\n      allyTeam: params.battle.teams[allyTeamIndex],\n      allyTeamIndex: allyTeamIndex,\n      battle: params.battle,\n      character: this,\n      phase: 'Death'\n    });\n  }\n\n  triggerPhase(params) {\n    if (!(params.phase in this.triggers)) {\n      return;\n    }\n    if (params.phase === 'InitCharacter' && this.processedInitCharacter) {\n      return;\n    }\n\n    params.character = this;\n    for (const item of this.triggers[params.phase]) {\n      items.useItemAbility(Object.assign(params, {\n          item: item\n      }));\n    }\n    if (params.phase === 'InitCharacter') {\n      this.processedInitCharacter = true;\n    }\n  }\n}\n\nCharacter.prototype.toString = function() {\n  return this.character;\n}\n","import {Character} from './character.js';\nimport * as data from './data.js';\nimport * as utils from './utils.js';\nimport * as dungeonUtils from './dungeonUtils.js';\n\nfunction _findPositionWithinTeam(name, team) {\n  for (const position in team) {\n    const c = team[position];\n    if (c.character === name) {\n      return position;\n    }\n  }\n  return -1;\n}\n\n\nexport class Battle {\n  constructor(team1, team2) {\n    this.summonedChicken = {};\n    this.initTeams(team1, team2);\n  }\n\n  initTeams(team1, team2) {\n    this.teams = [[], []];\n    this.allCharacters = {};\n    this.getTeamOf = {};\n    for (const i in team1) {\n      this.addCopyOfCharacterToTeam(team1[i], 0);\n    }\n    for (const i in team2) {\n      this.addCopyOfCharacterToTeam(team2[i], 1);\n    }\n  }\n\n  addCharacterToTeam(character, teamIndex) {\n    var name = character.character;\n    const originalName = name;\n    var copyNum = 1;\n    while (name in this.allCharacters) {\n      copyNum++;\n      name = originalName + ' ' + copyNum;\n    }\n    character.character = name;\n    this.getTeamOf[name] = teamIndex;\n    this.allCharacters[name] = character;\n    character.triggerPhase({\n        allyTeamIndex: teamIndex,\n        battle: this,\n        character: character,\n        phase: 'InitCharacter'\n    });\n    this.teams[teamIndex].push(character);\n  }\n\n  addCopyOfCharacterToTeam(character, teamIndex) {\n    const toAdd = new Character(character);\n    this.addCharacterToTeam(toAdd, teamIndex);\n  }\n\n  addSummonToTeam(item, teamIndex) {\n    const template = data.getTemplates()[item.name];\n    const summon = new Character(dungeonUtils.getScaledTemplate(template, item.tier));\n    utils.log('Summoning {0} for team {1}', summon.character, teamIndex);\n    this.addCharacterToTeam(summon, teamIndex);\n  }\n\n  kill(character) {\n    const name = character.character;\n    utils.log('killing: {0}', name);\n    const team = this.teams[this.getTeamOf[name]];\n    const pos = _findPositionWithinTeam(name, team);\n    if (pos < 0) {\n      throw Error(utils.format('InternalError: {0} is not in team {1}',\n                               name, team));\n    }\n    delete this.allCharacters[name];\n    delete this.getTeamOf[name];\n    team.splice(pos, 1);\n    if (name in this.summonedChicken) {\n      delete this.summonedChicken[name];\n    }\n  }\n\n  changeAllEnergy(iterable, amount) {\n    for (const key in iterable) {\n      iterable[key].changeEnergy({amount: amount});\n    }\n  }\n\n  checkAllHp() {\n    for (const name in this.allCharacters) {\n      const character = this.allCharacters[name];\n      if (character.hp <= 0) {\n        this.kill(character);\n      }\n    }\n  }\n\n  tick() {\n    for (const i in this.teams) {\n      if (this.teamHasLost(i)) {\n        return;\n      }\n    }\n    if (this.teamlength);\n    const activeCharacter = utils.pickRandom(this.allCharacters, 'speed');\n    const activeName = activeCharacter.character;\n    utils.log('\\n{0}\\'s turn:', activeName);\n    this.activeTeamIndex = this.getTeamOf[activeName];\n    const defendingTeam = this.teams[1 - this.activeTeamIndex];\n\n    this.changeAllEnergy(this.allCharacters, 2);\n\n    activeCharacter.triggerPhase({\n        allyTeam: this.teams[this.activeTeamIndex],\n        allyTeamIndex: this.activeTeamIndex,\n        enemyTeam: defendingTeam,\n        battle: this,\n        phase: 'TurnStart'\n    });\n\n    this.checkAllHp();\n    for (const i in this.teams) {\n      if (this.teamHasLost(i)) {\n        return;\n      }\n    }\n\n    const targetParams = {\n        currentTarget: utils.pickRandom(defendingTeam),\n        enemyTeam: defendingTeam,\n        phase: 'Target'\n    };\n    activeCharacter.triggerPhase(targetParams);\n\n    const blockParams = {\n        currentTarget: targetParams.currentTarget,\n        phase: 'Block'\n    };\n    for (const defendingCharacter of defendingTeam) {\n      defendingCharacter.triggerPhase(blockParams);\n    }\n\n    const currentTarget = blockParams.currentTarget;\n    activeCharacter.triggerPhase({\n        battle: this,\n        currentTarget: currentTarget, enemyTeam: defendingTeam,\n        phase: 'PostTarget'\n    });\n\n    utils.log('Main target: {0}', currentTarget.character);\n\n    const damageBase = utils.pickRandomWithinRange(\n        activeCharacter.attackLow,\n        activeCharacter.attackHigh\n    );\n    utils.log('Attack base damage: {0}', damageBase);\n\n    const preDamageParams = {\n        battle: this,\n        currentTarget: currentTarget,\n        damageBase: damageBase,\n        damageFinal: damageBase,\n        enemyTeam: defendingTeam,\n        phase: 'PreDamage'\n    };\n    activeCharacter.triggerPhase(preDamageParams);\n    if (preDamageParams.damageFinal !== damageBase) {\n      utils.log('Attack final damage: {0}', preDamageParams.damageFinal);\n    }\n\n    utils.log('Normal attack:');\n    currentTarget.takeDamage({\n        amount: preDamageParams.damageFinal,\n        battle: this,\n        source: activeCharacter\n    });\n\n    if (activeCharacter.poison > 0) {\n      utils.log('{0} takes poison damage', activeCharacter.character);\n      activeCharacter.changeHp({amount: -activeCharacter.poison});\n    }\n    this.checkAllHp();\n  }\n\n  teamHasLost(index) {\n    return this.teams[index].length === 0;\n  }\n}\n","import {Battle} from './battle.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function runDungeon(team, waves) {\r\n  var currTeam = team;\r\n  for (const character of currTeam) {\r\n    character.processedInitCharacter = false;\r\n  }\r\n  utils.log('\\nTeam 0: {0}', JSON.stringify(team));\r\n  utils.log('\\n\\nStarting dungeon');\r\n  for (const index in waves) {\r\n    utils.log('\\nloading wave {0}', index);\r\n    const wave = waves[index];\r\n    utils.log('Team 1: {0}', JSON.stringify(wave));\r\n    const battle = new Battle(currTeam, wave);\r\n    utils.log(utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.log(utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.teams[0];\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function runMany(team, waves, numRuns) {\r\n  var winsForTeam0 = 0;\r\n  for (var i = 0; i < numRuns; i++) {\r\n    if (runDungeon(team, waves) === 0) {\r\n      winsForTeam0++;\r\n    }\r\n  }\r\n  return winsForTeam0;\r\n}\r\n","import * as data from './data.js';\r\nimport * as global from './global.js';\r\nimport * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function outputTest(players, selectedDungeon, numRuns) {\r\n  const output = [];\r\n  const team = [];\r\n\r\n  for (const player of players) {\r\n    if (player.username === '') {\r\n      continue;\r\n    }\r\n    output.push(utils.format('Player found: {0}', player.username));\r\n\r\n    const toEquip = [];\r\n    for (const item of player.items) {\r\n      if (item.name === '') {\r\n        continue;\r\n      }\r\n      output.push(utils.format('Item found: {0} {1}', item.name, item.tier));\r\n      toEquip.push(item);\r\n    }\r\n    if (toEquip.length === 0) {\r\n      output.push('No items found');\r\n    }\r\n    output.push('');\r\n\r\n    team.push({\r\n      character: player.username,\r\n      hp: 100 + player.monuments.Health * 5,\r\n      hpMax: 100 + player.monuments.Health * 5,\r\n      speed: 10 + player.monuments.Speed * 1,\r\n      attackLow: 1 + player.monuments.Power * 1,\r\n      attackHigh: 10 + player.monuments.Power * 1,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip\r\n    });\r\n  }\r\n  \r\n  const [season, dungeon] = JSON.parse(selectedDungeon);\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  global.setSeason(2);\r\n  global.setVerbose(false);\r\n  global.setOutput(null);\r\n  const numWins = simulator.runMany(team, waves, numRuns * 1);\r\n\r\n  output.push(utils.format('Wins out of {0} runs: {1} ({2}%)',\r\n                           numRuns, numWins, numWins * 100 / numRuns));\r\n  output.push('\\nExample Run:');\r\n  global.setOutput([]);\r\n  global.setVerbose(true);\r\n  output.push('\\nWinning team: ' + simulator.runDungeon(team, waves));\r\n  utils.extend(output, global.output);\r\n  return output.join('\\n');\r\n}\r\n","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank();\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;\r\n","import ItemDropdown from './ItemDropdown.js';\nimport { useState } from 'react';\n\nfunction PlayerForm(props) {\n  const [items, setItems] = useState(props.player.items);\n  const [monuments, setMonuments] = useState(props.player.monuments);\n\n  return (\n    <div>\n      Username:\n      <input onChange={(event) => {\n        props.onPlayerChanged(event.target.value, props.player.items, props.player.monuments);\n      }} />\n      {items.map((item, index) =>\n        <ItemDropdown\n          key={index}\n          item={item}\n          onItemChanged={(name, tier) => {\n            let newItems = [...items];\n            newItems[index] = {name: name, tier: parseInt(tier)};\n            setItems(newItems);\n            props.onPlayerChanged(props.player.username, newItems, props.player.monuments);\n          }}\n        />\n      )}\n      Monuments:\n      <br/>\n      Health:\n      <input type=\"number\" min={0} value={props.player.Health} onChange={(event) => {\n        let newMonuments = {...monuments};\n        newMonuments.Health = event.target.value;\n        setMonuments(newMonuments);\n        props.onPlayerChanged(\n            props.player.username,\n            props.player.items,\n            newMonuments);\n      }} />\n      &nbsp;\n      Power:\n      <input type=\"number\" min={0} value={props.player.Power} onChange={(event) => {\n        let newMonuments = {...monuments};\n        newMonuments.Power = event.target.value;\n        setMonuments(newMonuments);\n        props.onPlayerChanged(\n            props.player.username,\n            props.player.items,\n            newMonuments);\n      }} />\n      &nbsp;\n      Speed:\n      <input type=\"number\" min={0} value={props.player.Speed} onChange={(event) => {\n        let newMonuments = {...monuments};\n        newMonuments.Speed = event.target.value;\n        setMonuments(newMonuments);\n        props.onPlayerChanged(\n            props.player.username,\n            props.player.items,\n            newMonuments);\n      }} />\n      <br/>\n      <br/>\n    </div>\n  );\n}\n\nexport default PlayerForm;\n","import * as data from '../data.js';\r\nimport Dropdown from './Dropdown.js';\r\nimport { outputTest } from '../test.js';\r\nimport PlayerForm from './PlayerForm.js';\r\nimport { useState } from 'react';\r\n\r\nfunction Simulator() {\r\n  const dungeonList = data.getDungeonList();\r\n  const [numRuns, setNumRuns] = useState(100);\r\n  const [selectedDungeon, setSelectedDungeon] = useState('[2,0]');\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [players, setPlayers] = useState([\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer(),\r\n      getInitialPlayer()\r\n  ]);\r\n\r\n  function getInitialPlayer() {\r\n    return {\r\n      username: \"\",\r\n      items: [\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem(),\r\n        getInitialItem()\r\n      ],\r\n      monuments: {\r\n        Health: 0,\r\n        Power: 0,\r\n        Speed: 0\r\n      }\r\n    };\r\n  }\r\n  \r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunTest() {\r\n    const output = outputTest(players, selectedDungeon, numRuns);\r\n    setOutputText(output);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {players.map((player, index) =>\r\n        <PlayerForm\r\n          key={index}\r\n          player={player}\r\n          onPlayerChanged={(username, items, monuments) => {\r\n            let newPlayers = [...players];\r\n            newPlayers[index] = {\r\n              username: username,\r\n              items: items,\r\n              monuments: monuments\r\n            };\r\n            setPlayers(newPlayers);\r\n          }}\r\n        />\r\n      )}\r\n      Dungeon:\r\n      <Dropdown\r\n        selectedOption={selectedDungeon}\r\n        onChange={(event) => {setSelectedDungeon(event.target.value);}}\r\n        options={dungeonList}\r\n      />\r\n      <br/>\r\n      Number of runs:\r\n      <input type=\"number\" value={numRuns} onChange={(event) => {\r\n        setNumRuns(event.target.value);\r\n      }} />\r\n      <br/>\r\n      <button onClick={onRunTest}>\r\n        Run Test\r\n      </button>\r\n      <div style={{whiteSpace: 'pre-line'}}>{outputText}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import Simulator from \"./components/Simulator.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Boxbox Dungeon SiMulator (BDSM)</h1>\r\n      <h3>(The pity system is currently not implemented)</h3>\r\n      <p>Enter your party's items and monuments.</p>\r\n      <br />\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}