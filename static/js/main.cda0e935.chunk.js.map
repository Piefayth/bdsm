{"version":3,"sources":["utils.js","../data sync /^/.//season_.*/.json$","../data sync /^/.//season_.*//items//passive_items/.json$","../data sync /^/.//season_.*//items//energy_items/.json$","../data sync /^/.//season_.*//mobs//summon_templates/.json$","data.js","simulator.js","components/Dropdown.js","components/ItemDropdown.js","components/Simulator.js","test.js","App.js","index.js"],"names":["logIf","bool","logs","toLog","console","log","push","formatDescriptionWithTier","description","tier","re","current","m","match","replace","eval","extend","iterable1","iterable2","index","all","iterable","condition","reduce","accumulator","currentValue","sum","key","total","i","withProbability","p","Math","random","pickRandom","weightKey","r","floor","weight","Error","pickRandomWithinRange","lower","upper","deepCopyJson","obj","JSON","parse","stringify","_mutateTemplate","template","scale","base","scaling","getScaledTemplate","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","resolve","module","exports","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getDungeon","season","dungeon","dungeonsForSeason","waves","require","wave","j","character","getItems","passive","energy","_preprocessCharacterItems","items","data","triggers","item","triggerTypes","name","triggerType","_triggers","runDungeon","team","output","verbose","currTeam","utils","battle","Battle","tick","teamHasLost","getTeam","team1","team2","this","summonedChicken","initTeams","_items","_templates","teams","allCharacters","getTeamOf","addCopyOfCharacterToTeam","teamIndex","toAdd","originalName","copyNum","triggerPhase","getTemplates","summon","getCharacterAndName","pos","position","_findPositionWithinTeam","splice","amount","originalHp","hp","hpMax","target","source","damageAmount","damage","changeHp","originalSpeed","speed","max","originalAttackLow","attackLow","originalAttackHigh","attackHigh","amountToGain","changeEnergy","originalEnergy","kill","phase","activeCharacter","other","characterName","allyTeamIndex","allyTeam","enemyTeam","itemName","addSummonToTeam","cost","dealDamage","changeSpeed","length","c","summoned","changeAttack","minHp","a","min","Infinity","addedEnergy","enemy","currentTarget","poison","finalDamage","round","baseDamage","missingHpProportion","originalDamage","ally","attackIncrease","useItemAbility","activeName","activeTeamIndex","defendingTeam","changeAllEnergy","checkAllHp","defendingCharacter","Dropdown","props","value","selectedOption","onChange","options","option","ItemDropdown","itemNames","obtainableItems","unobtainableItems","type","obtainable","sort","getAllItemNamesAndBlank","event","onItemChanged","Simulator","useState","outputText","setOutputText","setItems","newItems","onClick","toEquip","players","outputLogs","simulator","join","outputTest","style","whiteSpace","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cda0e935.chunk.js","sourcesContent":["export function logIf(bool, logs, toLog) {\r\n  if (bool) {\r\n    console.log(toLog);\r\n  }\r\n  if (logs != null && typeof toLog === 'string') {\r\n    logs.push(toLog);\r\n  }\r\n}\r\n\r\nexport function formatDescriptionWithTier(description, tier) {\r\n  const re = /\\{([\\dt+\\-*]+)\\}/;\r\n  var current = description;\r\n  var m = current.match(re);\r\n  while (m != null) {\r\n    current = current.replace(\r\n        m[0],\r\n        eval(m[1].replace('t', tier))\r\n    );\r\n    m = current.match(re);\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key == null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n    total++;\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  const total = sum(iterable, weightKey);\r\n  var r = Math.floor(Math.random() * total);\r\n\r\n  for (const key in iterable) {\r\n    var weight = 1;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(iterable[key]);\r\n    } else if (weightKey != null) {\r\n      weight = iterable[key][weightKey];\r\n    }\r\n    if (r < weight) {\r\n      return key;\r\n    }\r\n    r -= weight;\r\n  }\r\n\r\n  throw Error(\r\n      'Internal Error: Something went wrong while selecting random element from '\r\n      + iterable\r\n      + ' with weightKey '\r\n      + weightKey\r\n  );\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction _mutateTemplate(template, scale) {\r\n  if (typeof template != 'object') {\r\n    return template;\r\n  }\r\n\r\n  if ('base' in template && 'scaling' in template) {\r\n    return template.base + template.scaling * scale;\r\n  }\r\n\r\n  // recursive check\r\n  for (const key in template) {\r\n    template[key] = _mutateTemplate(template[key], scale);\r\n  }\r\n  return template;\r\n}\r\n\r\nexport function getScaledTemplate(template, scale) {\r\n  const obj = deepCopyJson(template);\r\n  return _mutateTemplate(obj, scale);\r\n}\r\n","var map = {\n\t\"./season_2/items/energy_items.json\": 8,\n\t\"./season_2/items/passive_items.json\": 9,\n\t\"./season_2/mobs/dungeon_0.json\": 20,\n\t\"./season_2/mobs/dungeon_1.json\": 21,\n\t\"./season_2/mobs/dungeon_10.json\": 22,\n\t\"./season_2/mobs/dungeon_2.json\": 23,\n\t\"./season_2/mobs/dungeon_3.json\": 24,\n\t\"./season_2/mobs/dungeon_4.json\": 25,\n\t\"./season_2/mobs/dungeon_5.json\": 26,\n\t\"./season_2/mobs/dungeon_6.json\": 27,\n\t\"./season_2/mobs/dungeon_7.json\": 28,\n\t\"./season_2/mobs/dungeon_8.json\": 29,\n\t\"./season_2/mobs/dungeon_9.json\": 30,\n\t\"./season_2/mobs/summon_templates.json\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","var map = {\n\t\"./season_2/items/passive_items.json\": 9\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31;","var map = {\n\t\"./season_2/items/energy_items.json\": 8\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 32;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","import * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require(\r\n        '../data/season_' + season + '/mobs/dungeon_' + dungeon + '.json'\r\n    );\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getItems(season) {\r\n  if (!(season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[season] = {\r\n      passive: require('../data/season_' + season + '/items/passive_items.json'),\r\n      energy: require('../data/season_' + season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank(season) {\r\n  if (!(season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems(season);\r\n    const itemNames = [''];\r\n    const obtainableItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['energy', 'passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item].obtainable) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    unobtainableItems.sort();\r\n    utils.extend(itemNames, obtainableItems);\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[season];\r\n}\r\n\r\nexport function getTemplates(season) {\r\n  if (!(season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[season] = require('../data/season_' + season + '/mobs/summon_templates.json')\r\n  }\r\n  return TEMPLATES_BY_SEASON[season];\r\n}\r\n","import * as data from './data.js';\r\nimport * as utils from './utils.js';\r\n\r\nfunction _preprocessCharacterItems(character, season) {\r\n  if ('_triggers' in character) {\r\n    return;\r\n  }\r\n  const items = data.getItems(season);\r\n  const triggers = {};\r\n  for (const item of character.items) {\r\n    const triggerTypes = item.name in items.energy\r\n        ? ['TurnStart']\r\n        : items.passive[item.name].triggers;\r\n    for (const triggerType of triggerTypes) {\r\n      if (!(triggerType in triggers)) {\r\n        triggers[triggerType] = [item];\r\n        continue;\r\n      }\r\n      triggers[triggerType].push(item);\r\n    }\r\n  }\r\n  character._triggers = triggers;\r\n  return character;\r\n}\r\n\r\nfunction _findPositionWithinTeam(name, team) {\r\n  for (const position in team) {\r\n    const c = team[position];\r\n    if (c.character === name) {\r\n      return position;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nexport function runDungeon(team, waves, season, output=null, verbose=false) {\r\n  var currTeam = team;\r\n  for (const character of team) {\r\n    _preprocessCharacterItems(character, season);\r\n  }\r\n  utils.logIf(verbose, output, '\\nTeam 0: ' + JSON.stringify(team));\r\n  utils.logIf(verbose, output, '\\n\\nStarting dungeon');\r\n  for (const index in waves) {\r\n    utils.logIf(verbose, output, '\\nloading wave ' + index);\r\n    const wave = waves[index];\r\n    for (const character of wave) {\r\n      _preprocessCharacterItems(character, season);\r\n    }\r\n    utils.logIf(verbose, output, 'Team 1: ' + JSON.stringify(wave));\r\n    const battle = new Battle(currTeam, wave, season, output, verbose);\r\n    utils.logIf(verbose, output, utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.logIf(verbose, output, utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.getTeam(0);\r\n  }\r\n  return 0;\r\n}\r\n\r\nclass Battle {\r\n  constructor(team1, team2, season, output=null, verbose=false) {\r\n    this.verbose = verbose;\r\n    this.season = season;\r\n    this.output = output;\r\n    this.summonedChicken = {};\r\n    this.initTeams(team1, team2);\r\n  }\r\n\r\n  log(obj) {\r\n    utils.logIf(this.verbose, this.output, obj);\r\n  }\r\n\r\n  getItems() {\r\n    if (!('_items' in this)) {\r\n      this._items = data.getItems(this.season);\r\n    }\r\n    return this._items;\r\n  }\r\n\r\n  getTemplates() {\r\n    if (!('_templates' in this)) {\r\n      this._templates = data.getTemplates(this.season);\r\n    }\r\n    return this._templates;\r\n  }\r\n\r\n  initTeams(team1, team2) {\r\n    this.teams = [[], []];\r\n    this.allCharacters = {};\r\n    this.getTeamOf = {};\r\n    for (const i in team1) {\r\n      this.addCopyOfCharacterToTeam(team1[i], 0);\r\n    }\r\n    for (const i in team2) {\r\n      this.addCopyOfCharacterToTeam(team2[i], 1);\r\n    }\r\n  }\r\n\r\n  addCopyOfCharacterToTeam(character, teamIndex) {\r\n    const toAdd = utils.deepCopyJson(character);\r\n    var name = toAdd.character;\r\n    const originalName = name;\r\n    var copyNum = 1;\r\n    while (name in this.allCharacters) {\r\n      copyNum++;\r\n      name = originalName + ' ' + copyNum;\r\n    }\r\n    toAdd.character = name;\r\n    this.getTeamOf[name] = teamIndex;\r\n    this.allCharacters[name] = toAdd;\r\n    this.triggerPhase('BattleStart', toAdd);\r\n    this.teams[teamIndex].push(toAdd);\r\n  }\r\n\r\n  addSummonToTeam(item, teamIndex) {\r\n    const template = this.getTemplates()[item.name];\r\n    const summon = utils.getScaledTemplate(template, item.tier);\r\n    this.log('Summoning ' + summon.character + ' for team ' + teamIndex);\r\n    _preprocessCharacterItems(summon, this.season);\r\n    this.addCopyOfCharacterToTeam(summon, teamIndex);\r\n  }\r\n\r\n  getCharacterAndName(id) {\r\n    if (typeof id === 'string') {\r\n      return [this.allCharacters[id], id];\r\n    }\r\n    return [id, id.character];\r\n  }\r\n\r\n  kill(id) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    this.log('killing: ' + name);\r\n    const team = this.teams[this.getTeamOf[name]];\r\n    const pos = _findPositionWithinTeam(name, team);\r\n    if (pos < 0) {\r\n      throw Error('InternalError: ' + name + ' is not in team ' + team);\r\n    }\r\n    delete this.allCharacters[name];\r\n    delete this.getTeamOf[name];\r\n    team.splice(pos, 1);\r\n    if (name in this.summonedChicken) {\r\n      delete this.summonedChicken[name];\r\n    }\r\n  }\r\n\r\n  changeHp(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalHp = character.hp;\r\n    character.hp += amount;\r\n    if (character.hp > character.hpMax) {\r\n      character.hp = character.hpMax;\r\n    }\r\n    if (character.hp <= 0) {\r\n      this.triggerPhase('Death', character);\r\n    }\r\n    this.log(name + ' HP changed by ' + amount + ': ' + originalHp + ' -> ' + character.hp);\r\n  }\r\n\r\n  dealDamage(target, source, amount) {\r\n    const damageAmount = [amount];\r\n    this.triggerPhase(\r\n        'EnemyDamage',\r\n        target,\r\n        {source: source, damage: damageAmount}\r\n    );\r\n    this.changeHp(target, -damageAmount[0]);\r\n  }\r\n\r\n  changeSpeed(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalSpeed = character.speed;\r\n    character.speed = Math.max(character.speed + amount, 1);\r\n    this.log(name + ' speed changed by ' + amount + ': ' + originalSpeed + ' -> ' + character.speed);\r\n  }\r\n\r\n  changeAttack(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalAttackLow = character.attackLow;\r\n    const originalAttackHigh = character.attackHigh;\r\n    const amountToGain = Math.max(-originalAttackLow, amount);\r\n    character.attackLow += amountToGain;\r\n    character.attackHigh += amountToGain;\r\n    this.log(\r\n        name +\r\n        ' attack changed by ' +\r\n        amount +\r\n        ': ' +\r\n        [originalAttackLow, originalAttackHigh] +\r\n        ' -> ' +\r\n        [character.attackLow, character.attackHigh]\r\n    );\r\n  }\r\n\r\n  changeAllEnergy(iterable, amount) {\r\n    for (const key in iterable) {\r\n      this.changeEnergy(iterable[key], amount);\r\n    }\r\n  }\r\n\r\n  changeEnergy(id, amount) {\r\n    const [character, name] = this.getCharacterAndName(id);\r\n    const originalEnergy = character.energy;\r\n    character.energy = Math.max(character.energy + amount, 0);\r\n    this.log(\r\n        name +\r\n        ' energy changed by ' +\r\n        amount +\r\n        ': ' +\r\n        originalEnergy +\r\n        ' -> ' +\r\n        character.energy\r\n    );\r\n  }\r\n\r\n  checkAllHp() {\r\n    for (const name in this.allCharacters) {\r\n      const character = this.allCharacters[name];\r\n      if (character.hp <= 0) {\r\n        this.kill(name);\r\n      }\r\n    }\r\n  }\r\n\r\n  useItemAbility(item, phase, activeCharacter, other=null) {\r\n    this.log('Checking item for phase ' + phase + ': ' + item.name);\r\n    const [character, characterName] = this.getCharacterAndName(activeCharacter);\r\n    const allyTeamIndex = this.getTeamOf[characterName];\r\n    const allyTeam = this.teams[allyTeamIndex];\r\n    const enemyTeam = this.teams[1 - allyTeamIndex];\r\n    const itemName = item.name;\r\n    const tier = item.tier;\r\n\r\n    switch (phase) {\r\n      case 'BattleStart': {\r\n        switch (itemName) {\r\n          case 'Pet Imp':\r\n          case 'Rock Companion': {\r\n            this.addSummonToTeam(item, allyTeamIndex);\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'TurnStart': {\r\n        if (itemName in this.getItems().energy) {\r\n          const cost = this.getItems().energy[itemName].cost;\r\n          if (character.energy < cost) {\r\n            return;\r\n          }\r\n          this.changeEnergy(character, -cost);\r\n        }\r\n\r\n        switch (itemName) {\r\n          case 'Avalanche': {\r\n            for (var i = 0; i < 2; i++) {\r\n              const target = enemyTeam[utils.pickRandom(enemyTeam)];\r\n              this.dealDamage(\r\n                  target,\r\n                  character,\r\n                  utils.pickRandomWithinRange(3 * tier, 5 * tier)\r\n              );\r\n              this.changeSpeed(\r\n                  target.character,\r\n                  -utils.pickRandomWithinRange(0, tier)\r\n              );\r\n            }\r\n            break;\r\n          }\r\n          case 'Boosting Bugle': {\r\n            if (allyTeam.length === 1) {\r\n              break;\r\n            }\r\n            for (var i = 0; i < 2; i++) {\r\n              const target = allyTeam[utils.pickRandom(\r\n                  allyTeam,\r\n                  (c) => {\r\n                    if (c.summoned || c.character === characterName) {\r\n                      return 0;\r\n                    }\r\n                    return 1;\r\n                  }\r\n              )];\r\n              this.changeHp(target, tier + tier);\r\n              this.changeAttack(target, tier);\r\n            }\r\n            break;\r\n          }\r\n          case 'Challenger Arrow': {\r\n            const target = enemyTeam[utils.pickRandom(enemyTeam)];\r\n            this.dealDamage(target, character, 10 * tier);\r\n            this.changeAttack(character, tier);\r\n            break;\r\n          }\r\n          case 'Energetic Ally': {\r\n            const minHp = allyTeam.reduce(\r\n              (a, c) => {\r\n                return Math.min(a, c.hp);\r\n              },\r\n              Infinity\r\n            );\r\n            const target = allyTeam[utils.pickRandom(\r\n                allyTeam,\r\n                (c) => {\r\n                  if (c.hp === minHp) {\r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                }\r\n            )];\r\n            this.changeHp(target, 5 * tier);\r\n            this.changeEnergy(target, 20);\r\n            break;\r\n          }\r\n          case 'Explosion Powder': {\r\n            if (enemyTeam.length === 1) {\r\n              const target = enemyTeam[Object.keys(enemyTeam)[0]];\r\n              this.dealDamage(\r\n                  target,\r\n                  character,\r\n                  utils.pickRandomWithinRange(10 * tier, 20 * tier)\r\n              );\r\n              break;\r\n            }\r\n            for (const i in enemyTeam) {\r\n              const target = enemyTeam[i];\r\n              this.dealDamage(\r\n                target,\r\n                character,\r\n                utils.pickRandomWithinRange(5 * tier, 10 * tier)\r\n              );\r\n            }\r\n            break;\r\n          }\r\n          case 'Imp Whistle': {\r\n            this.addSummonToTeam(item, allyTeamIndex);\r\n            break;\r\n          }\r\n          case 'Knight\\'s Lance': {\r\n            const target = enemyTeam[utils.pickRandom(enemyTeam)];\r\n            if (character.hp === character.hpMax) {\r\n              this.dealDamage(\r\n                  target,\r\n                  character,\r\n                  utils.pickRandomWithinRange(10 * tier, 14 * tier)\r\n              );\r\n              break;\r\n            }\r\n            const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\r\n            this.dealDamage(target, character, amount);\r\n            this.changeHp(character, amount);\r\n            break;\r\n          }\r\n          case 'Celine\\'s Chumby Chicken': {\r\n            if (characterName in this.summonedChicken) {\r\n              break;\r\n            }\r\n            this.summonedChicken[characterName] = 0;\r\n            this.addSummonToTeam(item, allyTeamIndex);\r\n            break;\r\n          }\r\n          case 'Healing Pendant': {\r\n            if (!utils.withProbability(0.5)) {\r\n              this.log(itemName + ' did not trigger');\r\n              break;\r\n            }\r\n            this.changeHp(character, 5 * tier);\r\n            break;\r\n          }\r\n          case 'Thorns': {\r\n            var addedEnergy = false;\r\n            for (const enemy of enemyTeam) {\r\n              this.dealDamage(enemy, character, tier);\r\n              if (!addedEnergy && utils.withProbability(0.25)) {\r\n                this.changeEnergy(character, tier);\r\n                addedEnergy = true;\r\n              }\r\n            }\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'Target': {\r\n        switch (itemName) {\r\n          case 'Seeking Missiles': {\r\n            var target = {hp: Infinity};\r\n            for (const character of enemyTeam) {\r\n              if (character.hp < target.hp) {\r\n                target = character;\r\n              }\r\n            }\r\n            if (target.hp === Infinity) {\r\n              throw Error('InternalError: Seeking Missiles could not find a target from ' + enemyTeam);\r\n            }\r\n            this.currentTarget = target;\r\n            this.log('Seeking Missiles selected target: ' + target.character);\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'PostTarget': {\r\n        switch (itemName) {\r\n          case 'Draining Dagger': {\r\n            this.changeAttack(this.currentTarget, -tier);\r\n            if (utils.withProbability(0.05 * tier)) {\r\n              this.changeEnergy(this.currentTarget, -1);\r\n            }\r\n            break;\r\n          }\r\n          case 'Machete': {\r\n            if (enemyTeam.length === 1) {\r\n              break;\r\n            }\r\n            const target = enemyTeam[utils.pickRandom(\r\n                enemyTeam,\r\n                (c) => {\r\n                  if (c.character === this.currentTarget.character) {\r\n                    return 0;\r\n                  }\r\n                  return 1;\r\n                }\r\n            )];\r\n            this.dealDamage(target, character, utils.pickRandomWithinRange(3 * tier, 4 * tier));\r\n            break;\r\n          }\r\n          case 'Poison Dagger': {\r\n            if (!('poison' in this.currentTarget)) {\r\n              this.currentTarget.poison = 0;\r\n            }\r\n            this.currentTarget.poison += tier;\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'Block': {\r\n        switch (itemName) {\r\n          case 'Healing Pendant':\r\n          case 'Magic Parasol':\r\n          case 'Survival Kit': {\r\n            if (this.currentTarget.character === characterName) {\r\n              break;\r\n            }\r\n            if (!(utils.withProbability(0.07 + 0.03 * tier))) {\r\n              this.log(itemName + ' did not trigger');\r\n              break;\r\n            }\r\n            if (this.currentTarget.hp < character.hp) {\r\n              this.log(characterName + ' blocks for ' + this.currentTarget.character);\r\n              this.currentTarget = character;\r\n              break;\r\n            }\r\n            this.log(characterName + ' is a coward');\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'PreDamage': {\r\n        switch (itemName) {\r\n          case 'Big Club': {\r\n            if (!utils.withProbability(0.11 * tier)) {\r\n              break;\r\n            }\r\n            this.finalDamage += Math.round(1.5 * this.baseDamage);\r\n            break;\r\n          }\r\n          case 'Seeking Missiles': {\r\n            const missingHpProportion = this.currentTarget.hp / this.currentTarget.hpMax;\r\n            this.finalDamage += Math.floor(5 * missingHpProportion * tier);\r\n            break;\r\n          }\r\n          case 'Whirlwind Axe': {\r\n            if (!(utils.withProbability(0.11 * tier))) {\r\n              break;\r\n            }\r\n            for (const enemy of enemyTeam) {\r\n              if (enemy.character === this.currentTarget.character) {\r\n                continue;\r\n              }\r\n              this.dealDamage(enemy, character, this.baseDamage);\r\n            }\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'EnemyDamage': {\r\n        switch (itemName) {\r\n          case 'Magic Parasol': {\r\n            if (!utils.withProbability(0.05 + 0.05 * tier)) {\r\n              this.log('Magic Parasol not triggered');\r\n              break;\r\n            }\r\n            this.log('Damage reduced from ' + other.damage[0] + ' -> 0');\r\n            other.damage[0] = 0;\r\n            break;\r\n          }\r\n          case 'Martyr Armor': {\r\n            const team = this.getTeamOf[characterName];\r\n            if (this.teams[team].length === 1) {\r\n              break;\r\n            }\r\n            if (!utils.withProbability(0.66)) {\r\n              break;\r\n            }\r\n            const target = this.teams[team][utils.pickRandom(\r\n                this.teams[team],\r\n                (c) => {\r\n                  if (c.character == characterName) {\r\n                    return 0;\r\n                  }\r\n                  if (c.summoned) {\r\n                    return 0;\r\n                  }\r\n                  return 1;\r\n                }\r\n            )];\r\n            if (target == null) {\r\n              break;\r\n            }\r\n            this.changeHp(target, 2 * tier);\r\n            this.changeEnergy(target, tier);\r\n            break;\r\n          }\r\n          case 'Rough Skin': {\r\n            if (!utils.withProbability(0.5)) {\r\n              this.log(itemName + ' did not trigger');\r\n              break;\r\n            }\r\n            this.log(itemName + ' triggered');\r\n            this.changeHp(other.source, -2 * tier);\r\n            const damageAmount = other.damage;\r\n            const originalDamage = damageAmount[0];\r\n            damageAmount[0] = Math.max(0, damageAmount[0] - (2 * tier));\r\n            this.log('Damage reduced by ' + 2 * tier + ': ' + originalDamage + ' -> ' + damageAmount[0]);\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'PostDamage': {\r\n        switch (itemName) {\r\n          case 'Cleansing Flames': {\r\n            if (!utils.withProbability(0.5)) {\r\n              break;\r\n            }\r\n            for (const ally of allyTeam) {\r\n              this.changeHp(ally, tier);\r\n            }\r\n            break;\r\n          }\r\n          case 'Fire Sword': {\r\n            var attackIncrease = 0;\r\n            for (var i = 0; i < tier; i++) {\r\n              if (!utils.withProbability(0.3)) {\r\n                continue;\r\n              }\r\n              attackIncrease++;\r\n            }\r\n            this.changeAttack(character, attackIncrease);\r\n            break;\r\n          }\r\n          case 'Love Letter': {\r\n            const target = allyTeam[utils.pickRandom(\r\n                allyTeam,\r\n                (c) => {\r\n                  if (c.character === characterName) {\r\n                    return 0;\r\n                  }\r\n                  if (c.summoned) {\r\n                    return 0;\r\n                  }\r\n                  return 1;\r\n                }\r\n            )];\r\n            if (target == null) {\r\n              break;\r\n            }\r\n            this.changeHp(target, 2 * tier);\r\n            this.changeEnergy(target, tier);\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case 'Death': {\r\n        switch (itemName) {\r\n          case 'Chicken Dinner': {\r\n            if (this.getTeamOf[this.activeCharacter] === allyTeamIndex) {\r\n              break;\r\n            }\r\n            for (const ally of allyTeam) {\r\n              if (ally.character == characterName) {\r\n                continue;\r\n              }\r\n              this.changeHp(ally, tier);\r\n            }\r\n            break;\r\n          }\r\n          default: {\r\n            throw Error('InternalError: Item ' + itemName + ' does not have phase ' + phase);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        throw Error('InternalError: Phase ' + phase + ' unknown');\r\n      }\r\n    }\r\n  }\r\n\r\n  triggerPhase(phase, activeCharacter, other=null) {\r\n    if (!(phase in activeCharacter._triggers)) {\r\n      return;\r\n    }\r\n\r\n    for (const item of activeCharacter._triggers[phase]) {\r\n      this.useItemAbility(item, phase, activeCharacter, other);\r\n    }\r\n  }\r\n\r\n  tick() {\r\n    const activeName = utils.pickRandom(this.allCharacters, 'speed');\r\n    this.log('\\n' + activeName + '\\'s turn:');\r\n    this.activeCharacter = this.allCharacters[activeName];\r\n    const activeTeamIndex = this.getTeamOf[activeName];\r\n    const defendingTeam = this.teams[1 - activeTeamIndex];\r\n\r\n    this.changeAllEnergy(this.allCharacters, 2);\r\n\r\n    this.triggerPhase('TurnStart', this.activeCharacter);\r\n\r\n    this.checkAllHp();\r\n    for (const i in this.teams) {\r\n      if (this.teamHasLost(i)) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.currentTarget = defendingTeam[utils.pickRandom(defendingTeam)];\r\n    this.triggerPhase('Target', this.activeCharacter);\r\n    for (const defendingCharacter of defendingTeam) {\r\n      this.triggerPhase('Block', defendingCharacter);\r\n    }\r\n    this.triggerPhase('PostTarget', this.activeCharacter);\r\n\r\n    this.log('Main target: ' + this.currentTarget.character);\r\n\r\n    this.baseDamage = utils.pickRandomWithinRange(\r\n        this.activeCharacter.attackLow,\r\n        this.activeCharacter.attackHigh\r\n    );\r\n    this.finalDamage = this.baseDamage;\r\n    this.log('Attack base damage: ' + this.baseDamage);\r\n\r\n    this.triggerPhase('PreDamage', this.activeCharacter);\r\n    if (this.finalDamage !== this.baseDamage) {\r\n      this.log('Attack final damage: ' + this.finalDamage);\r\n    }\r\n\r\n    this.log('Normal attack:');\r\n    this.dealDamage(this.currentTarget, this.activeCharacter, this.finalDamage);\r\n\r\n    if ('poison' in this.currentTarget) {\r\n      this.log(this.currentTarget.character + ' takes poison damage.');\r\n      this.changeHp(this.currentTarget, -this.currentTarget.poison);\r\n    }\r\n    this.checkAllHp();\r\n\r\n    delete this['curentTarget'];\r\n    delete this['activeCharacter'];\r\n    delete this['baseDamage'];\r\n    delete this['finalDamage'];\r\n  }\r\n\r\n  teamHasLost(index) {\r\n    return utils.all(\r\n        this.teams[index],\r\n        (character) => {\r\n          return character.hp <= 0;\r\n        }\r\n    );\r\n  }\r\n\r\n  getTeam(index) {\r\n    return this.teams[index];\r\n  }\r\n}\r\n","function Dropdown(props) {\r\n  return (\r\n    <select value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option) => <option key={option}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank(2);\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;","import { outputTest } from '../test.js';\r\nimport ItemDropdown from './ItemDropdown.js';\r\nimport { useState } from 'react';\r\n\r\nfunction Simulator() {\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [items, setItems] = useState([getInitialItem(), getInitialItem(), getInitialItem(), getInitialItem()]);\r\n\r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunTest() {\r\n    const output = outputTest(items);\r\n    setOutputText(output);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {items.map((item, index) =>\r\n        <ItemDropdown\r\n          key={index}\r\n          item={item}\r\n          onItemChanged={(name, tier) => {\r\n            let newItems = [...items];\r\n            newItems[index] = {name: name, tier: tier};\r\n            setItems(newItems);\r\n          }}\r\n        />\r\n      )}\r\n      <br />\r\n      <button onClick={onRunTest}>\r\n        Run Test\r\n      </button>\r\n      <div style={{whiteSpace: 'pre-line'}}>{outputText}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import * as data from './data.js';\r\nimport * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function outputTest(items) {\r\n  const toEquip = [];\r\n  for (const item of items) {\r\n    if (item.name !== '') {\r\n      toEquip.push(item);\r\n    }\r\n  }\r\n  const season = 2;\r\n  const dungeon = 0;\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  const players = [\r\n    {\r\n      character: \"Zethorix\",\r\n      hp: 100,\r\n      hpMax: 100,\r\n      speed: 10,\r\n      attackLow: 1,\r\n      attackHigh: 10,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip\r\n    }\r\n  ]\r\n\r\n  const output = ['Test run with items: ' + JSON.stringify(toEquip)];\r\n  const outputLogs = [];\r\n  output.push('\\nWinning team: ' + simulator.runDungeon(players, waves, season, outputLogs, true));\r\n  utils.extend(output, outputLogs);\r\n  return output.join('\\n');\r\n}\r\n\r\nexport function buttontest() {\r\n  const season = 2;\r\n  const dungeon = 0;\r\n  const waves = data.getDungeon(season, dungeon);\r\n  console.log(waves);\r\n  const players = [\r\n    {\r\n      character: \"Zethorix\",\r\n      hp: 100,\r\n      hpMax: 100,\r\n      speed: 10,\r\n      attackLow: 1,\r\n      attackHigh: 10,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: [\r\n        {\r\n          name: 'Avalanche',\r\n          tier: 1\r\n        },\r\n        {\r\n          name: 'Rock Companion',\r\n          tier: 9\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      character: \"Oof\",\r\n      hp: 100,\r\n      hpMax: 100,\r\n      speed: 10,\r\n      attackLow: 1,\r\n      attackHigh: 10,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: [\r\n        {\r\n          name: 'Seeking Missiles',\r\n          tier: 1\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n  console.log('winning team: ' + simulator.runDungeon(players, waves, season, true));\r\n}\r\n","import Simulator from \"./components/Simulator.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Boxbox Dungeon SiMulator (BDSM)</h1>\r\n      <p>Enter your party's items and monuments.</p>\r\n      <br />\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}