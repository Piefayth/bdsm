{"version":3,"sources":["utils.js","global.js","../data sync /^/.//season_.*/.json$","../data sync /^/.//season_.*//items//passive_items/.json$","../data sync /^/.//season_.*//items//energy_items/.json$","../data sync /^/.//season_.*//mobs//summon_templates/.json$","data.js","items.js","character.js","battle.js","simulator.js","test.js","components/Dropdown.js","components/ItemDropdown.js","components/Simulator.js","App.js","index.js"],"names":["format","args","arguments","replace","match","number","index","parseInt","log","global","toLog","console","push","formatDescriptionWithTier","description","tier","re","current","m","eval","extend","iterable1","iterable2","all","iterable","condition","reduce","accumulator","currentValue","sum","key","total","i","withProbability","p","Math","random","pickRandom","weightKey","r","floor","weight","pickRandomWithinRange","lower","upper","deepCopyJson","obj","JSON","parse","stringify","_mutateTemplate","template","scale","base","scaling","getScaledTemplate","processedInitCharacter","verbose","setVerbose","val","output","setOutput","season","setSeason","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","MOBS_BY_SEASON","ITEMS_BY_SEASON","ITEM_NAMES_BY_SEASON","TEMPLATES_BY_SEASON","getItems","passive","require","energy","ABILITY_FOR_ITEM","params","phase","enemyTeam","item","target","utils","takeDamage","source","character","amount","battle","changeSpeed","_throwInvalidPhaseError","name","damageFinal","round","damageBase","allyTeam","length","c","summoned","changeHp","changeAttack","allyTeamIndex","summonedChicken","addSummonToTeam","activeTeamIndex","ally","currentTarget","changeEnergy","hp","Infinity","charcter","attackIncrease","hpMax","damage","teams","getTeamOf","poison","max","enemy","missingHpProportion","addedEnergy","useItemAbility","data","originalEnergy","cost","_checkEnergy","_extractParam","param","defaultValue","Character","this","speed","attackLow","attackHigh","items","_preprocessTriggers","allItems","triggers","triggerTypes","triggerType","originalHp","min","originalSpeed","originalAttackLow","originalAttackHigh","amountToGain","phaseParams","triggerPhase","assign","prototype","toString","Battle","team1","team2","initTeams","allCharacters","addCopyOfCharacterToTeam","teamIndex","originalName","copyNum","toAdd","addCharacterToTeam","summon","team","pos","position","_findPositionWithinTeam","splice","kill","activeCharacter","activeName","defendingTeam","changeAllEnergy","checkAllHp","teamHasLost","targetParams","blockParams","preDamageParams","runDungeon","waves","currTeam","wave","tick","getTeam","outputTest","toEquip","dungeon","dungeonsForSeason","j","players","numWins","numRuns","winsForTeam0","simulator","join","Dropdown","props","value","selectedOption","onChange","options","option","ItemDropdown","itemNames","obtainableItems","unobtainableItems","type","obtainable","sort","getAllItemNamesAndBlank","event","onItemChanged","Simulator","useState","outputText","setOutputText","setItems","newItems","onClick","style","whiteSpace","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a651ea87.chunk.js","sourcesContent":["import * as global from './global.js'\r\n\r\nexport function format() {\r\n  const args = arguments;\r\n  return args[0].replace(/{(\\d+)}/g, function(match, number) {\r\n      const index = parseInt(number) + 1;\r\n      return typeof[args[index]] !== 'undefined'\r\n        ? args[index]\r\n        : match;\r\n  });\r\n}\r\n\r\nexport function log() {\r\n  if (!global.verbose && global.output === null) {\r\n    return;\r\n  }\r\n  const toLog = typeof arguments[0] === 'string'\r\n      ? format(...arguments)\r\n      : arguments[0];\r\n  if (global.verbose) {\r\n    console.log(toLog);\r\n  }\r\n  if (global.output !== null) {\r\n    global.output.push(toLog);\r\n  }\r\n}\r\n\r\nexport function formatDescriptionWithTier(description, tier) {\r\n  const re = /\\{([\\dt+\\-*]+)\\}/;\r\n  var current = description;\r\n  var m = current.match(re);\r\n  while (m != null) {\r\n    current = current.replace(\r\n        m[0],\r\n        eval(m[1].replace('t', tier))\r\n    );\r\n    m = current.match(re);\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function extend(iterable1, iterable2) {\r\n  for (const index in iterable2) {\r\n    iterable1.push(iterable2[index]);\r\n  }\r\n}\r\n\r\nexport function all(iterable, condition) {\r\n  return iterable.reduce((accumulator, currentValue) => {\r\n    return accumulator && condition(currentValue);\r\n  }, true);\r\n}\r\n\r\nexport function sum(iterable, key=null) {\r\n  var total = 0;\r\n  for (const i in iterable) {\r\n    const currentValue = iterable[i];\r\n    if (typeof key === 'function') {\r\n      total += key(currentValue);\r\n      continue;\r\n    }\r\n    if (key == null) {\r\n      if (typeof currentValue === 'number') {\r\n        total += currentValue;\r\n        continue;\r\n      }\r\n      total++;\r\n      continue;\r\n    }\r\n    if (key in currentValue) {\r\n      total += currentValue[key];\r\n      continue;\r\n    }\r\n    total++;\r\n  }\r\n  return total;\r\n}\r\n\r\nexport function withProbability(p) {\r\n  return Math.random() < p;\r\n}\r\n\r\nexport function pickRandom(iterable, weightKey=null) {\r\n  const total = sum(iterable, weightKey);\r\n  var r = Math.floor(Math.random() * total);\r\n\r\n  for (const key in iterable) {\r\n    var weight = 1;\r\n    if (typeof weightKey === 'function') {\r\n      weight = weightKey(iterable[key]);\r\n    } else if (weightKey != null) {\r\n      weight = iterable[key][weightKey];\r\n    }\r\n    if (r < weight) {\r\n      return iterable[key];\r\n    }\r\n    r -= weight;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function pickRandomWithinRange(lower, upper) {\r\n  return lower + Math.floor(Math.random() * (upper - lower + 1));\r\n}\r\n\r\nexport function deepCopyJson(obj) {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\nfunction _mutateTemplate(template, scale) {\r\n  if (typeof template != 'object') {\r\n    return template;\r\n  }\r\n\r\n  if ('base' in template && 'scaling' in template) {\r\n    return template.base + template.scaling * scale;\r\n  }\r\n\r\n  // recursive check\r\n  for (const key in template) {\r\n    template[key] = _mutateTemplate(template[key], scale);\r\n  }\r\n  return template;\r\n}\r\n\r\nexport function getScaledTemplate(template, scale) {\r\n  const obj = deepCopyJson(template);\r\n  _mutateTemplate(obj, scale);\r\n  obj.processedInitCharacter = false;\r\n  return obj;\r\n}\r\n","export var verbose = false;\nexport function setVerbose(val) {\n  verbose = val;\n}\n\nexport var output = null;\nexport function setOutput(val) {\n  output = val;\n}\n\nexport var season = 2;\nexport function setSeason(val) {\n  season = val;\n}\n","var map = {\n\t\"./season_2/items/energy_items.json\": 11,\n\t\"./season_2/items/passive_items.json\": 12,\n\t\"./season_2/mobs/dungeon_0.json\": 21,\n\t\"./season_2/mobs/dungeon_1.json\": 22,\n\t\"./season_2/mobs/dungeon_10.json\": 23,\n\t\"./season_2/mobs/dungeon_2.json\": 24,\n\t\"./season_2/mobs/dungeon_3.json\": 25,\n\t\"./season_2/mobs/dungeon_4.json\": 26,\n\t\"./season_2/mobs/dungeon_5.json\": 27,\n\t\"./season_2/mobs/dungeon_6.json\": 28,\n\t\"./season_2/mobs/dungeon_7.json\": 29,\n\t\"./season_2/mobs/dungeon_8.json\": 30,\n\t\"./season_2/mobs/dungeon_9.json\": 31,\n\t\"./season_2/mobs/summon_templates.json\": 13\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","var map = {\n\t\"./season_2/items/passive_items.json\": 12\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 32;","var map = {\n\t\"./season_2/items/energy_items.json\": 11\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","var map = {\n\t\"./season_2/mobs/summon_templates.json\": 13\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","import * as global from './global.js';\r\nimport * as utils from './utils.js';\r\n\r\nconst MOBS_BY_SEASON = {};\r\nconst ITEMS_BY_SEASON = {};\r\nconst ITEM_NAMES_BY_SEASON = {};\r\nconst TEMPLATES_BY_SEASON = {};\r\n\r\nexport function getDungeon(season, dungeon) {\r\n  if (!(season in MOBS_BY_SEASON)) {\r\n    MOBS_BY_SEASON[season] = {};\r\n  }\r\n  const dungeonsForSeason = MOBS_BY_SEASON[season];\r\n\r\n  if (!(dungeon in dungeonsForSeason)) {\r\n    const waves = require('../data/season_' + season + '/mobs/dungeon_' + dungeon + '.json');\r\n    for (const i in waves) {\r\n      const wave = waves[i];\r\n      for (const j in wave) {\r\n        const character = wave[j];\r\n        if ('_stats' in character) {\r\n          delete character['_stats'];\r\n        }\r\n      }\r\n    }\r\n    dungeonsForSeason[dungeon] = waves;\r\n  }\r\n\r\n  return dungeonsForSeason[dungeon];\r\n}\r\n\r\nexport function getItems() {\r\n  if (!(global.season in ITEMS_BY_SEASON)) {\r\n    ITEMS_BY_SEASON[global.season] = {\r\n      passive: require('../data/season_' + global.season + '/items/passive_items.json'),\r\n      energy: require('../data/season_' + global.season + '/items/energy_items.json')\r\n    };\r\n  }\r\n  return ITEMS_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getAllItemNamesAndBlank() {\r\n  if (!(global.season in ITEM_NAMES_BY_SEASON)) {\r\n    const items = getItems();\r\n    const itemNames = [''];\r\n    const obtainableItems = [];\r\n    const unobtainableItems = [];\r\n    for (const type of ['energy', 'passive']) {\r\n      for (const item in items[type]) {\r\n        if (items[type][item].obtainable) {\r\n          obtainableItems.push(item);\r\n          continue;\r\n        }\r\n        unobtainableItems.push(item);\r\n      }\r\n    }\r\n    obtainableItems.sort();\r\n    unobtainableItems.sort();\r\n    utils.extend(itemNames, obtainableItems);\r\n    utils.extend(itemNames, unobtainableItems);\r\n    ITEM_NAMES_BY_SEASON[global.season] = itemNames;\r\n  }\r\n  return ITEM_NAMES_BY_SEASON[global.season];\r\n}\r\n\r\nexport function getTemplates() {\r\n  if (!(global.season in TEMPLATES_BY_SEASON)) {\r\n    TEMPLATES_BY_SEASON[global.season] = require(\r\n        '../data/season_' + global.season + '/mobs/summon_templates.json');\r\n  }\r\n  return TEMPLATES_BY_SEASON[global.season];\r\n}\r\n","import * as data from './data.js';\nimport * as utils from './utils.js';\n\nconst ABILITY_FOR_ITEM = {\n  'Avalanche': avalanche,\n  'Big Club': bigClub,\n  'Boosting Bugle': boostingBugle,\n  'Celine\\'s Chumby Chicken': celinesChumbyChicken,\n  'Challenger Arrow': challengerArrow,\n  'Chicken Dinner': chickenDinner,\n  'Cleansing Flames': cleansingFlames,\n  'Draining Dagger': drainingDagger,\n  'Energetic Ally': energeticAlly,\n  'Explosion Powder': explosionPowder,\n  'Fire Sword': fireSword,\n  'Freezeman': freezeman,\n  'Halberd': halberd,\n  'Healing Pendant': healingPendant,\n  'Imp Whistle': impWhistle,\n  'Knight\\'s Lance': knightsLance,\n  'Love Letter': loveLetter,\n  'Machete': machete,\n  'Magic Parasol': magicParasol,\n  'Martyr Armor': martyrArmor,\n  'Pet Imp': petImp,\n  'Poison Dagger': poisonDagger,\n  'Rock Companion': rockCompanion,\n  'Rough Skin': roughSkin,\n  'Seeking Missiles': seekingMissiles,\n  'Survival Kit': survivalKit,\n  'Thorns': thorns,\n  'Whirlwind Axe': whirlwindAxe\n}\n\nexport function useItemAbility(params) {\n  if (params.item.name in data.getItems().energy && !_checkEnergy(params)) {\n    return;\n  }\n  return ABILITY_FOR_ITEM[params.item.name](params);\n}\n\nfunction _checkEnergy(params) {\n  const originalEnergy = params.character.energy;\n  const cost = data.getItems().energy[params.item.name].cost;\n  if (originalEnergy < cost) {\n    return false;\n  }\n  params.character.changeEnergy({amount: -cost});\n  return true;\n}\n\nfunction _throwInvalidPhaseError(params) {\n  throw Error(utils.format('InternalError: Item {0} does not have phase {1}',\n                           params.item.name, params.phase));\n}\n\nfunction avalanche(params) {\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      const tier = params.item.tier;\n      for (var i = 0; i < 2; i++) {\n        const target = utils.pickRandom(enemyTeam);\n        target.takeDamage({\n          source: params.character,\n          amount: utils.pickRandomWithinRange(3 * tier, 5 * tier),\n          battle: params.battle\n        });\n        target.changeSpeed({\n          amount: -utils.pickRandomWithinRange(0, tier)\n        });\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction bigClub(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PreDamage': {\n      if (!utils.withProbability(0.11 * tier)) {\n        utils.log('Did not use {0}', params.item.name);\n        break;\n      }\n      utils.log('Activated {0}', params.item.name);\n      params.damageFinal += Math.round(1.5 * params.damageBase);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction boostingBugle(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const allyTeam = params.allyTeam;\n      if (allyTeam.length === 1) {\n        break;\n      }\n      for (var i = 0; i < 2; i++) {\n        const target = utils.pickRandom(\n            allyTeam,\n            (c) => {\n              if (c.summoned) {\n                return 0;\n              }\n              if (c.character === params.character.character) {\n                return 0;\n              }\n              return 1;\n            }\n        );\n        target.changeHp({amount: tier + tier});\n        target.changeAttack({amount: tier});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction celinesChumbyChicken(params) {\n  switch (params.phase) {\n    case 'TurnStart': {\n      const allyTeamIndex = params.allyTeamIndex;\n      if (params.character.character in params.battle.summonedChicken) {\n        break;\n      }\n      params.battle.summonedChicken[params.character.character] = 0;\n      params.battle.addSummonToTeam(params.item, allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction challengerArrow(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      const target = utils.pickRandom(enemyTeam);\n      target.takeDamage({\n          source: params.character,\n          amount: 10 * tier,\n          battle: params.battle\n      });\n      params.character.changeAttack({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction chickenDinner(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'Death': {\n      if (params.battle.activeTeamIndex === params.allyTeamIndex) {\n        break;\n      }\n      for (const ally of params.allyTeam) {\n        if (ally.character === params.character.character) {\n          continue;\n        }\n        ally.changeHp({amount: tier});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction cleansingFlames(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostDamage': {\n      const allyTeam = params.allyTeam;\n      if (!utils.withProbability(0.5)) {\n        break;\n      }\n      for (const ally of allyTeam) {\n        ally.changeHp({amount: tier});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction drainingDagger(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostTarget': {\n      params.currentTarget.changeAttack({amount: -tier});\n      if (utils.withProbability(0.05 * tier)) {\n        params.currentTarget.changeEnergy({amount: -1});\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction energeticAlly(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const allyTeam = params.allyTeam;\n      var target = {hp: Infinity};\n      for (const ally of allyTeam) {\n        if (ally.hp < target.hp) {\n          target = ally;\n        }\n      }\n      if (target.hp === Infinity) {\n        throw Error(utils.format('InternalError: Ally team has no members'));\n      }\n      target.changeHp({amount: 5 * tier});\n      target.changeEnergy({amount: 20});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction explosionPowder(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      if (enemyTeam.length === 1) {\n        const target = enemyTeam[Object.keys(enemyTeam)[0]];\n        target.takeDamage({\n            source: params.charcter,\n            amount: utils.pickRandomWithinRange(10 * tier, 20 * tier),\n            battle: params.battle\n        });\n        break;\n      }\n      for (const enemy of enemyTeam) {\n        enemy.takeDamage({\n            source: params.character,\n            amount: utils.pickRandomWithinRange(5 * tier, 10 * tier),\n            battle: params.battle\n        });\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction fireSword(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostDamage': {\n      var attackIncrease = 0;\n      for (var i = 0; i < tier; i++) {\n        if (!utils.withProbability(0.3)) {\n          continue;\n        }\n        attackIncrease++;\n      }\n      params.character.changeAttack({amount: attackIncrease});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction freezeman(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'InitCharacter': {\n      params.character.changeSpeed({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction halberd(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'InitCharacter': {\n      params.character.changeAttack({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction healingPendant(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      if (!utils.withProbability(0.5)) {\n        break;\n      }\n      params.character.changeHp({amount: 5 * tier});\n      break;\n    }\n    case 'Block': {\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\n        break;\n      }\n      if (params.currentTarget.hp < params.character.hp) {\n        params.currentTarget = params.character;\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction impWhistle(params) {\n  switch (params.phase) {\n    case 'TurnStart': {\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction knightsLance(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      const enemyTeam = params.enemyTeam;\n      const target = utils.pickRandom(enemyTeam);\n      if (params.character.hp === params.character.hpMax) {\n        target.takeDamage({\n            source: params.character,\n            amount: utils.pickRandomWithinRange(10 * tier, 14 * tier),\n            battle: params.battle\n        });\n        break;\n      }\n      const amount = utils.pickRandomWithinRange(5 * tier, 7 * tier);\n      target.takeDamage({\n          source: params.character,\n          amount: amount,\n          battle: params.battle\n      });\n      params.character.changeHp({amount: amount});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction loveLetter(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostDamage': {\n      const allyTeam = params.allyTeam;\n      const target = utils.pickRandom(\n          allyTeam,\n          (c) => {\n            if (c.character === params.character.character) {\n              return 0;\n            }\n            if (c.summoned) {\n              return 0;\n            }\n            return 1;\n          }\n      );\n      if (target === null) {\n        break;\n      }\n      target.changeHp({amount: tier + tier});\n      target.changeEnergy({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction machete(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostTarget': {\n      const enemyTeam = params.enemyTeam;\n      if (enemyTeam.length === 1) {\n        break;\n      }\n      const target = utils.pickRandom(\n          enemyTeam,\n          (c) => {\n            if (c.character === params.currentTarget.character) {\n              return 0;\n            }\n            return 1;\n          }\n      );\n      target.takeDamage({\n          source: params.character,\n          amount: utils.pickRandomWithinRange(3 * tier, 4 * tier),\n          battle: params.battle\n      });\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction magicParasol(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'Block': {\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\n        break;\n      }\n      if (params.currentTarget.hp < params.character.hp) {\n        params.currentTarget = params.character;\n      }\n      break;\n    }\n    case 'EnemyDamage': {\n      if (!utils.withProbability(0.05 + 0.05 * tier)) {\n        params.damage = 0;\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction martyrArmor(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'EnemyDamage': {\n      if (!utils.withProbability(0.66)) {\n        break;\n      }\n      const target = utils.pickRandom(\n          params.battle.teams[\n              params.battle.getTeamOf[params.character.character]\n          ],\n          (c) => {\n            if (c.character === params.character.character) {\n              return 0;\n            }\n            if (c.summoned) {\n              return 0;\n            }\n            return 1;\n          }\n      );\n      if (target === null) {\n        break;\n      }\n      target.changeHp({amount: tier + tier});\n      target.changeEnergy({amount: tier});\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction petImp(params) {\n  switch (params.phase) {\n    case 'InitCharacter': {\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction poisonDagger(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PostTarget': {\n      params.currentTarget.poison += tier;\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction rockCompanion(params) {\n  switch (params.phase) {\n    case 'InitCharacter': {\n      params.battle.addSummonToTeam(params.item, params.allyTeamIndex);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction roughSkin(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'EnemyDamage': {\n      if (!utils.withProbability(0.5)) {\n        break;\n      }\n      params.damage = Math.max(0, params.damage - tier - tier);\n      params.source.changeHp(-tier - tier);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction seekingMissiles(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'Target': {\n      var target = {hp: Infinity};\n      for (const enemy of params.enemyTeam) {\n        if (enemy.hp < target.hp) {\n          target = enemy;\n        }\n      }\n      if (target.hp === Infinity) {\n        throw Error('InternalError: No target in enemy team');\n      }\n      params.currentTarget = target;\n      break;\n    }\n    case 'PreDamage': {\n      const missingHpProportion =\n          params.currentTarget.hp / params.currentTarget.hpMax;\n      params.damageFinal += Math.floor(5 * missingHpProportion * tier);\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction survivalKit(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'Block': {\n      if (!utils.withProbability(0.07 + 0.03 * tier)) {\n        break;\n      }\n      if (params.currentTarget.hp < params.character.hp) {\n        params.currentTarget = params.character;\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction thorns(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'TurnStart': {\n      var addedEnergy = false;\n      for (const enemy of params.enemyTeam) {\n        enemy.takeDamage({\n            source: params.character,\n            amount: tier,\n            battle: params.battle\n        });\n        if (addedEnergy) {\n          break;\n        }\n        if (!utils.withProbability(0.25)) {\n          break;\n        }\n        params.character.changeEnergy({amount: tier});\n        addedEnergy = true;\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n\nfunction whirlwindAxe(params) {\n  const tier = params.item.tier;\n  switch (params.phase) {\n    case 'PreDamage': {\n      if (!utils.withProbability(0.11 * tier)) {\n        break;\n      }\n      for (const enemy of params.enemyTeam) {\n        if (enemy.character === params.currentTarget.character) {\n          continue;\n        }\n        enemy.takeDamage({\n            source: params.character,\n            amount: params.damageBase,\n            battle: params.battle\n        });\n      }\n      break;\n    }\n    default: {\n      _throwInvalidPhaseError(params);\n    }\n  }\n}\n","import * as data from './data.js';\nimport * as items from './items.js';\nimport * as utils from './utils.js';\n\nfunction _extractParam(params, param, defaultValue) {\n  if (param in params) {\n    return params[param];\n  }\n  return defaultValue;\n}\n\nexport class Character {\n  constructor(params) {\n    this.character = _extractParam(params, 'character', 'Unknown');\n    this.hpMax = _extractParam(params, 'hpMax', 100);\n    this.hp = _extractParam(params, 'hp', this.hpMax);\n    this.speed = _extractParam(params, 'speed', 10);\n    this.attackLow = _extractParam(params, 'attackLow', 1);\n    this.attackHigh = _extractParam(params, 'attackHigh', 10);\n    this.energy = _extractParam(params, 'energy', 0);\n    this.summoned = _extractParam(params, 'summoned', false);\n    this.items = _extractParam(params, 'items', []);\n\n    this.poison = _extractParam(params, 'poison', 0);\n    this._preprocessTriggers();\n    this.processedInitCharacter =\n        _extractParam(params, 'processedInitCharacter', true);\n  }\n\n  _preprocessTriggers() {\n    if ('triggers' in this) {\n      return;\n    }\n    const allItems = data.getItems();\n    const triggers = {};\n    for (const item of this.items) {\n      const triggerTypes = item.name in allItems.energy\n          ? ['TurnStart']\n          : allItems.passive[item.name].triggers;\n      for (const triggerType of triggerTypes) {\n        if (!(triggerType in triggers)) {\n          triggers[triggerType] = [item];\n          continue;\n        }\n        triggers[triggerType].push(item);\n      }\n    }\n    this.triggers = triggers;\n  }\n\n  deepCopy() {\n    const params = utils.deepCopyJson(this);\n    return new Character(params);\n  }\n\n  changeHp(params) {\n    const originalHp = this.hp;\n    this.hp = Math.min(this.hp + params.amount, this.hpMax);\n    utils.log('{0} hp changed by {1}: {2} -> {3}',\n              this.character, params.amount, originalHp, this.hp);\n  }\n\n  changeSpeed(params) {\n    const originalSpeed = this.speed;\n    this.speed = Math.max(this.speed + params.amount, 1);\n    utils.log('{0} speed changed by {1}: {2} -> {3}',\n              this.character, params.amount, originalSpeed, this.speed);\n  }\n\n  changeAttack(params) {\n    const originalAttackLow = this.attackLow;\n    const originalAttackHigh = this.attackHigh;\n    const amountToGain = Math.max(-originalAttackLow, params.amount);\n    this.attackLow += amountToGain;\n    this.attackHigh += amountToGain;\n    utils.log('{0} attack changed by {1}: {2} -> {3}',\n              this.character,\n              params.amount,\n              [originalAttackLow, originalAttackHigh],\n              [this.attackLow, this.attackHigh]);\n  }\n\n  changeEnergy(params) {\n    const originalEnergy = this.energy;\n    this.energy = Math.max(this.energy + params.amount, 0);\n    utils.log('{0} energy changed by {1}: {2} -> {3}',\n              this.character,\n              params.amount,\n              originalEnergy,\n              this.energy);\n  }\n\n  takeDamage(params) {\n    const phaseParams = {\n        battle: params.battle,\n        damage: params.amount,\n        phase: 'EnemyDamage'\n    };\n    this.triggerPhase(phaseParams);\n    this.changeHp({\n        amount: -phaseParams.damage\n    });\n    if (this.hp > 0) {\n      return;\n    }\n    const allyTeamIndex = params.battle.getTeamOf[this.character];\n    this.triggerPhase({\n      allyTeam: params.battle.teams[allyTeamIndex],\n      allyTeamIndex: allyTeamIndex,\n      battle: params.battle,\n      character: this,\n      phase: 'Death'\n    });\n  }\n\n  triggerPhase(params) {\n    if (!(params.phase in this.triggers)) {\n      return;\n    }\n    if (params.phase === 'InitCharacter' && this.processedInitCharacter) {\n      return;\n    }\n\n    params.character = this;\n    for (const item of this.triggers[params.phase]) {\n      items.useItemAbility(Object.assign(params, {\n          item: item\n      }));\n    }\n    if (params.phase === 'InitCharacter') {\n      this.processedInitCharacter = true;\n    }\n  }\n}\n\nCharacter.prototype.toString = function() {\n  return this.character;\n}\n","import {Character} from './character.js';\nimport * as data from './data.js';\nimport * as utils from './utils.js';\n\nfunction _findPositionWithinTeam(name, team) {\n  for (const position in team) {\n    const c = team[position];\n    if (c.character === name) {\n      return position;\n    }\n  }\n  return -1;\n}\n\n\nexport class Battle {\n  constructor(team1, team2) {\n    this.summonedChicken = {};\n    this.initTeams(team1, team2);\n  }\n\n  initTeams(team1, team2) {\n    this.teams = [[], []];\n    this.allCharacters = {};\n    this.getTeamOf = {};\n    for (const i in team1) {\n      this.addCopyOfCharacterToTeam(team1[i], 0);\n    }\n    for (const i in team2) {\n      this.addCopyOfCharacterToTeam(team2[i], 1);\n    }\n  }\n\n  addCharacterToTeam(character, teamIndex) {\n    var name = character.character;\n    const originalName = name;\n    var copyNum = 1;\n    while (name in this.allCharacters) {\n      copyNum++;\n      name = originalName + ' ' + copyNum;\n    }\n    character.character = name;\n    this.getTeamOf[name] = teamIndex;\n    this.allCharacters[name] = character;\n    character.triggerPhase({\n        allyTeamIndex: teamIndex,\n        battle: this,\n        character: character,\n        phase: 'InitCharacter'\n    });\n    this.teams[teamIndex].push(character);\n  }\n\n  addCopyOfCharacterToTeam(character, teamIndex) {\n    const toAdd = new Character(character);\n    this.addCharacterToTeam(toAdd, teamIndex);\n  }\n\n  addSummonToTeam(item, teamIndex) {\n    const template = data.getTemplates()[item.name];\n    const summon = new Character(utils.getScaledTemplate(template, item.tier));\n    utils.log('Summoning {0} for team {1}', summon.character, teamIndex);\n    this.addCharacterToTeam(summon, teamIndex);\n  }\n\n  kill(character) {\n    const name = character.character;\n    utils.log('killing: {0}', name);\n    const team = this.teams[this.getTeamOf[name]];\n    const pos = _findPositionWithinTeam(name, team);\n    if (pos < 0) {\n      throw Error(utils.format('InternalError: {0} is not in team {1}',\n                               name, team));\n    }\n    delete this.allCharacters[name];\n    delete this.getTeamOf[name];\n    team.splice(pos, 1);\n    if (name in this.summonedChicken) {\n      delete this.summonedChicken[name];\n    }\n  }\n\n  changeAllEnergy(iterable, amount) {\n    for (const key in iterable) {\n      iterable[key].changeEnergy({amount: amount});\n    }\n  }\n\n  checkAllHp() {\n    for (const name in this.allCharacters) {\n      const character = this.allCharacters[name];\n      if (character.hp <= 0) {\n        this.kill(character);\n      }\n    }\n  }\n\n  tick() {\n    const activeCharacter = utils.pickRandom(this.allCharacters, 'speed');\n    const activeName = activeCharacter.character;\n    utils.log('\\n{0}\\'s turn:', activeName);\n    this.activeTeamIndex = this.getTeamOf[activeName];\n    const defendingTeam = this.teams[1 - this.activeTeamIndex];\n\n    this.changeAllEnergy(this.allCharacters, 2);\n\n    activeCharacter.triggerPhase({\n        allyTeam: this.teams[this.activeTeamIndex],\n        allyTeamIndex: this.activeTeamIndex,\n        enemyTeam: defendingTeam,\n        battle: this,\n        phase: 'TurnStart'\n    });\n\n    this.checkAllHp();\n    for (const i in this.teams) {\n      if (this.teamHasLost(i)) {\n        return;\n      }\n    }\n\n    const targetParams = {\n        currentTarget: utils.pickRandom(defendingTeam),\n        enemyTeam: defendingTeam,\n        phase: 'Target'\n    };\n    activeCharacter.triggerPhase(targetParams);\n\n    const blockParams = {\n        currentTarget: targetParams.currentTarget,\n        phase: 'Block'\n    };\n    for (const defendingCharacter of defendingTeam) {\n      defendingCharacter.triggerPhase(blockParams);\n    }\n\n    const currentTarget = blockParams.currentTarget;\n    activeCharacter.triggerPhase({\n        battle: this,\n        currentTarget: currentTarget, enemyTeam: defendingTeam,\n        phase: 'PostTarget'\n    });\n\n    utils.log('Main target: {0}', currentTarget.character);\n\n    const damageBase = utils.pickRandomWithinRange(\n        activeCharacter.attackLow,\n        activeCharacter.attackHigh\n    );\n    utils.log('Attack base damage: {0}', damageBase);\n\n    const preDamageParams = {\n        battle: this,\n        currentTarget: currentTarget,\n        damageBase: damageBase,\n        damageFinal: damageBase,\n        enemyTeam: defendingTeam,\n        phase: 'PreDamage'\n    };\n    activeCharacter.triggerPhase(preDamageParams);\n    if (preDamageParams.damageFinal !== damageBase) {\n      utils.log('Attack final damage: {0}', preDamageParams.damageFinal);\n    }\n\n    utils.log('Normal attack:');\n    currentTarget.takeDamage({\n        amount: preDamageParams.damageFinal,\n        battle: this,\n        source: activeCharacter\n    });\n\n    if (activeCharacter.poison > 0) {\n      utils.log('{0} takes poison damage', activeCharacter.character);\n      activeCharacter.changeHp({amount: -activeCharacter.poison});\n    }\n    this.checkAllHp();\n  }\n\n  teamHasLost(index) {\n    return utils.all(\n        this.teams[index],\n        (character) => {\n          return character.hp <= 0;\n        }\n    );\n  }\n\n  getTeam(index) {\n    return this.teams[index];\n  }\n}\n","import {Battle} from './battle.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function runDungeon(team, waves) {\r\n  var currTeam = team;\r\n  for (const character of currTeam) {\r\n    character.processedInitCharacter = false;\r\n  }\r\n  utils.log('\\nTeam 0: {0}', JSON.stringify(team));\r\n  utils.log('\\n\\nStarting dungeon');\r\n  for (const index in waves) {\r\n    utils.log('\\nloading wave {0}', index);\r\n    const wave = waves[index];\r\n    utils.log('Team 1: {0}', JSON.stringify(wave));\r\n    const battle = new Battle(currTeam, wave);\r\n    utils.log(utils.deepCopyJson(battle));\r\n    while (true) {\r\n      battle.tick();\r\n\r\n      utils.log(utils.deepCopyJson(battle));\r\n\r\n      if (battle.teamHasLost(0)) {\r\n        return 1;\r\n      }\r\n\r\n      if (battle.teamHasLost(1)) {\r\n        break;\r\n      }\r\n    }\r\n    currTeam = battle.getTeam(0);\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function runMany(team, waves, numRuns) {\r\n  var winsForTeam0 = 0;\r\n  for (var i = 0; i < numRuns; i++) {\r\n    if (runDungeon(team, waves) === 0) {\r\n      winsForTeam0++;\r\n    }\r\n  }\r\n  return winsForTeam0;\r\n}\r\n","import * as data from './data.js';\r\nimport * as global from './global.js';\r\nimport * as simulator from './simulator.js';\r\nimport * as utils from './utils.js';\r\n\r\nexport function outputTest(items) {\r\n  const toEquip = [];\r\n  for (const item of items) {\r\n    if (item.name !== '') {\r\n      toEquip.push(item);\r\n    }\r\n  }\r\n  const season = 2;\r\n  const dungeon = 0;\r\n  const waves = data.getDungeon(season, dungeon);\r\n\r\n  const players = [\r\n    {\r\n      character: \"Zethorix\",\r\n      hp: 100,\r\n      hpMax: 100,\r\n      speed: 10,\r\n      attackLow: 1,\r\n      attackHigh: 10,\r\n      energy: 0,\r\n      summoned: false,\r\n      items: toEquip\r\n    }\r\n  ]\r\n\r\n  const numRuns = 100;\r\n  global.setSeason(2);\r\n  global.setVerbose(false);\r\n  global.setOutput(null);\r\n  const numWins = simulator.runMany(players, waves, numRuns);\r\n\r\n  const output = ['Test run with items: ' + JSON.stringify(toEquip)];\r\n  output.push(utils.format('Wins out of {0} runs: {1} ({2}%)',\r\n                           numRuns, numWins, numWins * 100 / numRuns));\r\n  output.push('\\nExample Run:');\r\n  global.setOutput([]);\r\n  global.setVerbose(true);\r\n  output.push('\\nWinning team: ' + simulator.runDungeon(players, waves));\r\n  utils.extend(output, global.output);\r\n  return output.join('\\n');\r\n}\r\n","function Dropdown(props) {\r\n  return (\r\n    <select value={props.selectedOption} onChange={props.onChange}>\r\n      {props.options.map((option) => <option key={option}>{option}</option>)}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;","import { getAllItemNamesAndBlank } from \"../data.js\";\r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction ItemDropdown(props) {\r\n  const itemNames = getAllItemNamesAndBlank();\r\n  const itemTiers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown\r\n        selectedOption={props.item.name}\r\n        onChange={(event) => props.onItemChanged(event.target.value, props.item.tier)}\r\n        options={itemNames}\r\n      />\r\n      <Dropdown\r\n        selectedOption={props.item.tier}\r\n        onChange={(event) => props.onItemChanged(props.item.name, event.target.value)}\r\n        options={itemTiers}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDropdown;\r\n","import { outputTest } from '../test.js';\r\nimport ItemDropdown from './ItemDropdown.js';\r\nimport { useState } from 'react';\r\n\r\nfunction Simulator() {\r\n  const [outputText, setOutputText] = useState(\"Select your items with the dropdowns.\\nClick the button to start a test run!\");\r\n  const [items, setItems] = useState([getInitialItem(), getInitialItem(), getInitialItem(), getInitialItem()]);\r\n\r\n  function getInitialItem() {\r\n    return { name: \"\", tier: 1 };\r\n  }\r\n\r\n  function onRunTest() {\r\n    const output = outputTest(items);\r\n    setOutputText(output);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {items.map((item, index) =>\r\n        <ItemDropdown\r\n          key={index}\r\n          item={item}\r\n          onItemChanged={(name, tier) => {\r\n            let newItems = [...items];\r\n            newItems[index] = {name: name, tier: tier};\r\n            setItems(newItems);\r\n          }}\r\n        />\r\n      )}\r\n      <br />\r\n      <button onClick={onRunTest}>\r\n        Run Test\r\n      </button>\r\n      <div style={{whiteSpace: 'pre-line'}}>{outputText}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Simulator;\r\n","import Simulator from \"./components/Simulator.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Boxbox Dungeon SiMulator (BDSM)</h1>\r\n      <p>Enter your party's items and monuments.</p>\r\n      <br />\r\n      <Simulator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}